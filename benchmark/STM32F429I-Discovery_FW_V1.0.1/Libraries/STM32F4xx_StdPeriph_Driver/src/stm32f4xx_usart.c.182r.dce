
;; Function USART_DeInit (USART_DeInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 26 count 19 (    1)


USART_DeInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={33d,17u} r1={33d,16u} r2={17d} r3={17d} r7={1d,18u} r12={16d} r13={1d,34u} r14={9d,1u} r15={16d} r16={16d} r17={16d} r18={16d} r19={16d} r20={16d} r21={16d} r22={16d} r23={16d} r24={24d,8u} r25={1d,18u} r26={1d,17u} r27={16d} r28={16d} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={16d} r38={16d} r39={16d} r40={16d} r41={16d} r42={16d} r43={16d} r44={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} r81={16d} r82={16d} r83={16d} r84={16d} r85={16d} r86={16d} r87={16d} r88={16d} r89={16d} r90={16d} r91={16d} r92={16d} r93={16d} r94={16d} r95={16d} r96={16d} r97={16d} r98={16d} r99={16d} r100={16d} r101={16d} r102={16d} r103={16d} r104={16d} r105={16d} r106={16d} r107={16d} r108={16d} r109={16d} r110={16d} r111={16d} r112={16d} r113={16d} r114={16d} r115={16d} r116={16d} r117={16d} r118={16d} r119={16d} r120={16d} r121={16d} r122={16d} r123={16d} r124={16d} r125={16d} r126={16d} r127={16d} r134={1d,8u,8e} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 2075{1922d,145u,8e} in 73{57 regular + 16 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 1
  dense invalidated 	
0[0,33] 1[33,33] 2[66,17] 3[83,17] 7[100,1] 12[101,16] 13[117,1] 14[118,9] 15[127,16] 16[143,16] 17[159,16] 18[175,16] 19[191,16] 20[207,16] 21[223,16] 22[239,16] 23[255,16] 24[271,24] 25[295,1] 26[296,1] 27[297,16] 28[313,16] 29[329,16] 30[345,16] 31[361,16] 32[377,16] 33[393,16] 34[409,16] 35[425,16] 36[441,16] 37[457,16] 38[473,16] 39[489,16] 40[505,16] 41[521,16] 42[537,16] 43[553,16] 44[569,16] 45[585,16] 46[601,16] 47[617,16] 48[633,16] 49[649,16] 50[665,16] 51[681,16] 52[697,16] 53[713,16] 54[729,16] 55[745,16] 56[761,16] 57[777,16] 58[793,16] 59[809,16] 60[825,16] 61[841,16] 62[857,16] 63[873,16] 64[889,16] 65[905,16] 66[921,16] 67[937,16] 68[953,16] 69[969,16] 70[985,16] 71[1001,16] 72[1017,16] 73[1033,16] 74[1049,16] 75[1065,16] 76[1081,16] 77[1097,16] 78[1113,16] 79[1129,16] 80[1145,16] 81[1161,16] 82[1177,16] 83[1193,16] 84[1209,16] 85[1225,16] 86[1241,16] 87[1257,16] 88[1273,16] 89[1289,16] 90[1305,16] 91[1321,16] 92[1337,16] 93[1353,16] 94[1369,16] 95[1385,16] 96[1401,16] 97[1417,16] 98[1433,16] 99[1449,16] 100[1465,16] 101[1481,16] 102[1497,16] 103[1513,16] 104[1529,16] 105[1545,16] 106[1561,16] 107[1577,16] 108[1593,16] 109[1609,16] 110[1625,16] 111[1641,16] 112[1657,16] 113[1673,16] 114[1689,16] 115[1705,16] 116[1721,16] 117[1737,16] 118[1753,16] 119[1769,16] 120[1785,16] 121[1801,16] 122[1817,16] 123[1833,16] 124[1849,16] 125[1865,16] 126[1881,16] 127[1897,16] 134[1913,1] 135[1914,1] 136[1915,1] 137[1916,1] 138[1917,1] 139[1918,1] 140[1919,1] 141[1920,1] 142[1921,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d32(0){ }d65(1){ }d82(2){ }d99(3){ }d100(7){ }d117(13){ }d126(14){ }d295(25){ }d296(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
32, 65, 82, 99, 100, 117, 126, 295, 296
;; rd  kill	(47)
66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 295, 296
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
32, 65, 82, 99, 100, 117, 126, 295, 296

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d100(bb 0 insn -1) }u1(13){ d117(bb 0 insn -1) }u2(25){ d295(bb 0 insn -1) }u3(26){ d296(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135
;; live  kill	
;; rd  in  	(9)
32, 65, 82, 99, 100, 117, 126, 295, 296
;; rd  gen 	(3)
294, 1913, 1914
;; rd  kill	(26)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1913, 1914
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(12)
32, 65, 82, 99, 100, 117, 126, 294, 295, 296, 1913, 1914
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 134 { d1913(bb 2 insn 2) }
;;      reg 135 { d1914(bb 2 insn 7) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 3 uid 9
;;      reg 24 { d294(bb 2 insn 8) }

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ d100(bb 0 insn -1) }u10(13){ d117(bb 0 insn -1) }u11(25){ d295(bb 0 insn -1) }u12(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(12)
32, 65, 82, 99, 100, 117, 126, 294, 295, 296, 1913, 1914
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
32, 65, 82, 99, 100, 117, 294, 295, 296, 1913, 1914
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 13
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d31(bb 3 insn 11) }
;;      reg 1 { d64(bb 3 insn 12) }
;;   UD chains for insn luid 5 uid 16
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d29(bb 3 insn 14) }
;;      reg 1 { d62(bb 3 insn 15) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(7){ d100(bb 0 insn -1) }u20(13){ d117(bb 0 insn -1) }u21(25){ d295(bb 0 insn -1) }u22(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 136
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 136
;; live  kill	
;; rd  in  	(12)
32, 65, 82, 99, 100, 117, 126, 294, 295, 296, 1913, 1914
;; rd  gen 	(2)
291, 1915
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1915
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
32, 65, 82, 99, 100, 117, 126, 291, 295, 296, 1913, 1914, 1915
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 22
;;      reg 134 { d1913(bb 2 insn 2) }
;;      reg 136 { d1915(bb 4 insn 21) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 2 uid 23
;;      reg 24 { d291(bb 4 insn 22) }

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d100(bb 0 insn -1) }u28(13){ d117(bb 0 insn -1) }u29(25){ d295(bb 0 insn -1) }u30(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(13)
32, 65, 82, 99, 100, 117, 126, 291, 295, 296, 1913, 1914, 1915
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
32, 65, 82, 99, 100, 117, 291, 295, 296, 1913, 1914, 1915
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 27
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d27(bb 5 insn 25) }
;;      reg 1 { d60(bb 5 insn 26) }
;;   UD chains for insn luid 5 uid 30
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d25(bb 5 insn 28) }
;;      reg 1 { d58(bb 5 insn 29) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(7){ d100(bb 0 insn -1) }u38(13){ d117(bb 0 insn -1) }u39(25){ d295(bb 0 insn -1) }u40(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 137
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 137
;; live  kill	
;; rd  in  	(13)
32, 65, 82, 99, 100, 117, 126, 291, 295, 296, 1913, 1914, 1915
;; rd  gen 	(2)
288, 1916
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1916
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(14)
32, 65, 82, 99, 100, 117, 126, 288, 295, 296, 1913, 1914, 1915, 1916
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 36
;;      reg 134 { d1913(bb 2 insn 2) }
;;      reg 137 { d1916(bb 6 insn 35) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 2 uid 37
;;      reg 24 { d288(bb 6 insn 36) }

( 6 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(7){ d100(bb 0 insn -1) }u46(13){ d117(bb 0 insn -1) }u47(25){ d295(bb 0 insn -1) }u48(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(14)
32, 65, 82, 99, 100, 117, 126, 288, 295, 296, 1913, 1914, 1915, 1916
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
32, 65, 82, 99, 100, 117, 288, 295, 296, 1913, 1914, 1915, 1916
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 41
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d23(bb 7 insn 39) }
;;      reg 1 { d56(bb 7 insn 40) }
;;   UD chains for insn luid 5 uid 44
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d21(bb 7 insn 42) }
;;      reg 1 { d54(bb 7 insn 43) }

( 6 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(7){ d100(bb 0 insn -1) }u56(13){ d117(bb 0 insn -1) }u57(25){ d295(bb 0 insn -1) }u58(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 138
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(14)
32, 65, 82, 99, 100, 117, 126, 288, 295, 296, 1913, 1914, 1915, 1916
;; rd  gen 	(2)
285, 1917
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1917
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(15)
32, 65, 82, 99, 100, 117, 126, 285, 295, 296, 1913, 1914, 1915, 1916, 1917
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 50
;;      reg 134 { d1913(bb 2 insn 2) }
;;      reg 138 { d1917(bb 8 insn 49) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 2 uid 51
;;      reg 24 { d285(bb 8 insn 50) }

( 8 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(7){ d100(bb 0 insn -1) }u64(13){ d117(bb 0 insn -1) }u65(25){ d295(bb 0 insn -1) }u66(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(15)
32, 65, 82, 99, 100, 117, 126, 285, 295, 296, 1913, 1914, 1915, 1916, 1917
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
32, 65, 82, 99, 100, 117, 285, 295, 296, 1913, 1914, 1915, 1916, 1917
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 55
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d19(bb 9 insn 53) }
;;      reg 1 { d52(bb 9 insn 54) }
;;   UD chains for insn luid 5 uid 58
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d17(bb 9 insn 56) }
;;      reg 1 { d50(bb 9 insn 57) }

( 8 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u73(7){ d100(bb 0 insn -1) }u74(13){ d117(bb 0 insn -1) }u75(25){ d295(bb 0 insn -1) }u76(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 139
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(15)
32, 65, 82, 99, 100, 117, 126, 285, 295, 296, 1913, 1914, 1915, 1916, 1917
;; rd  gen 	(2)
282, 1918
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1918
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
32, 65, 82, 99, 100, 117, 126, 282, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 64
;;      reg 134 { d1913(bb 2 insn 2) }
;;      reg 139 { d1918(bb 10 insn 63) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 2 uid 65
;;      reg 24 { d282(bb 10 insn 64) }

( 10 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(7){ d100(bb 0 insn -1) }u82(13){ d117(bb 0 insn -1) }u83(25){ d295(bb 0 insn -1) }u84(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(16)
32, 65, 82, 99, 100, 117, 126, 282, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
32, 65, 82, 99, 100, 117, 282, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 69
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d15(bb 11 insn 67) }
;;      reg 1 { d48(bb 11 insn 68) }
;;   UD chains for insn luid 5 uid 72
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d13(bb 11 insn 70) }
;;      reg 1 { d46(bb 11 insn 71) }

( 10 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u91(7){ d100(bb 0 insn -1) }u92(13){ d117(bb 0 insn -1) }u93(25){ d295(bb 0 insn -1) }u94(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 140
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(16)
32, 65, 82, 99, 100, 117, 126, 282, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918
;; rd  gen 	(2)
279, 1919
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1919
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(17)
32, 65, 82, 99, 100, 117, 126, 279, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 78
;;      reg 134 { d1913(bb 2 insn 2) }
;;      reg 140 { d1919(bb 12 insn 77) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 2 uid 79
;;      reg 24 { d279(bb 12 insn 78) }

( 12 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u99(7){ d100(bb 0 insn -1) }u100(13){ d117(bb 0 insn -1) }u101(25){ d295(bb 0 insn -1) }u102(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(17)
32, 65, 82, 99, 100, 117, 126, 279, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
32, 65, 82, 99, 100, 117, 279, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 83
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d11(bb 13 insn 81) }
;;      reg 1 { d44(bb 13 insn 82) }
;;   UD chains for insn luid 5 uid 86
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d9(bb 13 insn 84) }
;;      reg 1 { d42(bb 13 insn 85) }

( 12 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(7){ d100(bb 0 insn -1) }u110(13){ d117(bb 0 insn -1) }u111(25){ d295(bb 0 insn -1) }u112(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(17)
32, 65, 82, 99, 100, 117, 126, 279, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919
;; rd  gen 	(2)
276, 1920
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1920
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(18)
32, 65, 82, 99, 100, 117, 126, 276, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 92
;;      reg 134 { d1913(bb 2 insn 2) }
;;      reg 141 { d1920(bb 14 insn 91) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 2 uid 93
;;      reg 24 { d276(bb 14 insn 92) }

( 14 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u117(7){ d100(bb 0 insn -1) }u118(13){ d117(bb 0 insn -1) }u119(25){ d295(bb 0 insn -1) }u120(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(18)
32, 65, 82, 99, 100, 117, 126, 276, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
32, 65, 82, 99, 100, 117, 276, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 97
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d7(bb 15 insn 95) }
;;      reg 1 { d40(bb 15 insn 96) }
;;   UD chains for insn luid 5 uid 100
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d5(bb 15 insn 98) }
;;      reg 1 { d38(bb 15 insn 99) }

( 14 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u127(7){ d100(bb 0 insn -1) }u128(13){ d117(bb 0 insn -1) }u129(25){ d295(bb 0 insn -1) }u130(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 142
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(18)
32, 65, 82, 99, 100, 117, 126, 276, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920
;; rd  gen 	(2)
273, 1921
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1921
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
32, 65, 82, 99, 100, 117, 126, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 106
;;      reg 134 { d1913(bb 2 insn 2) }
;;      reg 142 { d1921(bb 16 insn 105) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 2 uid 107
;;      reg 24 { d273(bb 16 insn 106) }

( 16 )->[17]->( 1 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u135(7){ d100(bb 0 insn -1) }u136(13){ d117(bb 0 insn -1) }u137(25){ d295(bb 0 insn -1) }u138(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(19)
32, 65, 82, 99, 100, 117, 126, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
32, 65, 82, 99, 100, 117, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 111
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d3(bb 17 insn 109) }
;;      reg 1 { d36(bb 17 insn 110) }
;;   UD chains for insn luid 5 uid 114
;;      reg 13 { d117(bb 0 insn -1) }
;;      reg 0 { d1(bb 17 insn 112) }
;;      reg 1 { d34(bb 17 insn 113) }

( 16 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u145(7){ d100(bb 0 insn -1) }u146(13){ d117(bb 0 insn -1) }u147(25){ d295(bb 0 insn -1) }u148(26){ d296(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
32, 65, 82, 99, 100, 117, 126, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
32, 65, 82, 99, 100, 117, 126, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }
;;   reg 26 { d296(bb 0 insn -1) }

( 17 3 5 7 9 11 13 15 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u149(7){ d100(bb 0 insn -1) }u150(13){ d117(bb 0 insn -1) }u151(14){ d126(bb 0 insn -1) }u152(25){ d295(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(26)
32, 65, 82, 99, 100, 117, 126, 273, 276, 279, 282, 285, 288, 291, 294, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(26)
32, 65, 82, 99, 100, 117, 126, 273, 276, 279, 282, 285, 288, 291, 294, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921
;;  UD chains for artificial uses
;;   reg 7 { d100(bb 0 insn -1) }
;;   reg 13 { d117(bb 0 insn -1) }
;;   reg 14 { d126(bb 0 insn -1) }
;;   reg 25 { d295(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 23 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 37 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 51 to worklist
  Adding insn 58 to worklist
  Adding insn 55 to worklist
  Adding insn 65 to worklist
  Adding insn 72 to worklist
  Adding insn 69 to worklist
  Adding insn 79 to worklist
  Adding insn 86 to worklist
  Adding insn 83 to worklist
  Adding insn 93 to worklist
  Adding insn 100 to worklist
  Adding insn 97 to worklist
  Adding insn 107 to worklist
  Adding insn 114 to worklist
  Adding insn 111 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 111:
Processing use of (reg 0 r0) in insn 111:
  Adding insn 109 to worklist
Processing use of (reg 1 r1) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 13 sp) in insn 114:
Processing use of (reg 0 r0) in insn 114:
  Adding insn 112 to worklist
Processing use of (reg 1 r1) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 24 cc) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 134 [ USARTx ]) in insn 106:
  Adding insn 2 to worklist
Processing use of (reg 142) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 97:
Processing use of (reg 0 r0) in insn 97:
  Adding insn 95 to worklist
Processing use of (reg 1 r1) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 13 sp) in insn 100:
Processing use of (reg 0 r0) in insn 100:
  Adding insn 98 to worklist
Processing use of (reg 1 r1) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 24 cc) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 134 [ USARTx ]) in insn 92:
Processing use of (reg 141) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 13 sp) in insn 83:
Processing use of (reg 0 r0) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 1 r1) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 13 sp) in insn 86:
Processing use of (reg 0 r0) in insn 86:
  Adding insn 84 to worklist
Processing use of (reg 1 r1) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 24 cc) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 134 [ USARTx ]) in insn 78:
Processing use of (reg 140) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 13 sp) in insn 69:
Processing use of (reg 0 r0) in insn 69:
  Adding insn 67 to worklist
Processing use of (reg 1 r1) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 13 sp) in insn 72:
Processing use of (reg 0 r0) in insn 72:
  Adding insn 70 to worklist
Processing use of (reg 1 r1) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 24 cc) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 134 [ USARTx ]) in insn 64:
Processing use of (reg 139) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 13 sp) in insn 55:
Processing use of (reg 0 r0) in insn 55:
  Adding insn 53 to worklist
Processing use of (reg 1 r1) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 13 sp) in insn 58:
Processing use of (reg 0 r0) in insn 58:
  Adding insn 56 to worklist
Processing use of (reg 1 r1) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 24 cc) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 134 [ USARTx ]) in insn 50:
Processing use of (reg 138) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 13 sp) in insn 41:
Processing use of (reg 0 r0) in insn 41:
  Adding insn 39 to worklist
Processing use of (reg 1 r1) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 13 sp) in insn 44:
Processing use of (reg 0 r0) in insn 44:
  Adding insn 42 to worklist
Processing use of (reg 1 r1) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 24 cc) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 134 [ USARTx ]) in insn 36:
Processing use of (reg 137) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 13 sp) in insn 27:
Processing use of (reg 0 r0) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 1 r1) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 13 sp) in insn 30:
Processing use of (reg 0 r0) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 1 r1) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 134 [ USARTx ]) in insn 22:
Processing use of (reg 136) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 1 r1) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 13 sp) in insn 16:
Processing use of (reg 0 r0) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 1 r1) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 134 [ USARTx ]) in insn 8:
Processing use of (reg 135) in insn 8:
  Adding insn 7 to worklist


USART_DeInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={33d,17u} r1={33d,16u} r2={17d} r3={17d} r7={1d,18u} r12={16d} r13={1d,34u} r14={9d,1u} r15={16d} r16={16d} r17={16d} r18={16d} r19={16d} r20={16d} r21={16d} r22={16d} r23={16d} r24={24d,8u} r25={1d,18u} r26={1d,17u} r27={16d} r28={16d} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={16d} r38={16d} r39={16d} r40={16d} r41={16d} r42={16d} r43={16d} r44={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} r81={16d} r82={16d} r83={16d} r84={16d} r85={16d} r86={16d} r87={16d} r88={16d} r89={16d} r90={16d} r91={16d} r92={16d} r93={16d} r94={16d} r95={16d} r96={16d} r97={16d} r98={16d} r99={16d} r100={16d} r101={16d} r102={16d} r103={16d} r104={16d} r105={16d} r106={16d} r107={16d} r108={16d} r109={16d} r110={16d} r111={16d} r112={16d} r113={16d} r114={16d} r115={16d} r116={16d} r117={16d} r118={16d} r119={16d} r120={16d} r121={16d} r122={16d} r123={16d} r124={16d} r125={16d} r126={16d} r127={16d} r134={1d,8u,8e} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 2075{1922d,145u,8e} in 73{57 regular + 16 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 1
  dense invalidated 	
0[0,33] 1[33,33] 2[66,17] 3[83,17] 7[100,1] 12[101,16] 13[117,1] 14[118,9] 15[127,16] 16[143,16] 17[159,16] 18[175,16] 19[191,16] 20[207,16] 21[223,16] 22[239,16] 23[255,16] 24[271,24] 25[295,1] 26[296,1] 27[297,16] 28[313,16] 29[329,16] 30[345,16] 31[361,16] 32[377,16] 33[393,16] 34[409,16] 35[425,16] 36[441,16] 37[457,16] 38[473,16] 39[489,16] 40[505,16] 41[521,16] 42[537,16] 43[553,16] 44[569,16] 45[585,16] 46[601,16] 47[617,16] 48[633,16] 49[649,16] 50[665,16] 51[681,16] 52[697,16] 53[713,16] 54[729,16] 55[745,16] 56[761,16] 57[777,16] 58[793,16] 59[809,16] 60[825,16] 61[841,16] 62[857,16] 63[873,16] 64[889,16] 65[905,16] 66[921,16] 67[937,16] 68[953,16] 69[969,16] 70[985,16] 71[1001,16] 72[1017,16] 73[1033,16] 74[1049,16] 75[1065,16] 76[1081,16] 77[1097,16] 78[1113,16] 79[1129,16] 80[1145,16] 81[1161,16] 82[1177,16] 83[1193,16] 84[1209,16] 85[1225,16] 86[1241,16] 87[1257,16] 88[1273,16] 89[1289,16] 90[1305,16] 91[1321,16] 92[1337,16] 93[1353,16] 94[1369,16] 95[1385,16] 96[1401,16] 97[1417,16] 98[1433,16] 99[1449,16] 100[1465,16] 101[1481,16] 102[1497,16] 103[1513,16] 104[1529,16] 105[1545,16] 106[1561,16] 107[1577,16] 108[1593,16] 109[1609,16] 110[1625,16] 111[1641,16] 112[1657,16] 113[1673,16] 114[1689,16] 115[1705,16] 116[1721,16] 117[1737,16] 118[1753,16] 119[1769,16] 120[1785,16] 121[1801,16] 122[1817,16] 123[1833,16] 124[1849,16] 125[1865,16] 126[1881,16] 127[1897,16] 134[1913,1] 135[1914,1] 136[1915,1] 137[1916,1] 138[1917,1] 139[1918,1] 140[1919,1] 141[1920,1] 142[1921,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135
;; live  kill	
;; rd  in  	(9)
32, 65, 82, 99, 100, 117, 126, 295, 296
;; rd  gen 	(3)
294, 1913, 1914
;; rd  kill	(26)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1913, 1914

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v/f:SI 134 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:188 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg:SI 135)
        (const_int 1073811456 [0x40011000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:192 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ USARTx ])
            (reg:SI 135))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:192 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 134 [ USARTx ])
                (const_int 1073811456 [0x40011000]))
            (nil))))

(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:192 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
            (nil)))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(12)
32, 65, 82, 99, 100, 117, 126, 294, 295, 296, 1913, 1914


;; Succ edge  3 [4.4%]  (fallthru)
;; Succ edge  4 [95.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(12)
32, 65, 82, 99, 100, 117, 126, 294, 295, 296, 1913, 1914
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126

;; Pred edge  2 [4.4%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 (set (reg:SI 0 r0)
        (const_int 16 [0x10])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:194 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:194 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 13 12 14 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB2PeriphResetCmd") [flags 0x41]  <function_decl 0x55c2c000 RCC_APB2PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:194 242 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 15 3 (set (reg:SI 0 r0)
        (const_int 16 [0x10])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:195 709 {*thumb2_movsi_insn}
     (nil))

(insn 15 14 16 3 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:195 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 16 15 18 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB2PeriphResetCmd") [flags 0x41]  <function_decl 0x55c2c000 RCC_APB2PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:195 246 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
32, 65, 82, 99, 100, 117, 294, 295, 296, 1913, 1914


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(7){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 136
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 136
;; live  kill	
;; rd  in  	(12)
32, 65, 82, 99, 100, 117, 126, 294, 295, 296, 1913, 1914
;; rd  gen 	(2)
291, 1915
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1915

;; Pred edge  2 [95.6%] 
(code_label 18 16 19 4 2 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 19 22 4 (set (reg:SI 136)
        (const_int 1073759232 [0x40004400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:197 709 {*thumb2_movsi_insn}
     (nil))

(insn 22 21 23 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ USARTx ])
            (reg:SI 136))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:197 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 134 [ USARTx ])
                (const_int 1073759232 [0x40004400]))
            (nil))))

(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:197 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
            (nil)))
 -> 32)
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
32, 65, 82, 99, 100, 117, 126, 291, 295, 296, 1913, 1914, 1915


;; Succ edge  5 [4.4%]  (fallthru)
;; Succ edge  6 [95.6%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(13)
32, 65, 82, 99, 100, 117, 126, 291, 295, 296, 1913, 1914, 1915
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126

;; Pred edge  4 [4.4%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 (set (reg:SI 0 r0)
        (const_int 131072 [0x20000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:199 709 {*thumb2_movsi_insn}
     (nil))

(insn 26 25 27 5 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:199 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 27 26 28 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:199 242 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 28 27 29 5 (set (reg:SI 0 r0)
        (const_int 131072 [0x20000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:200 709 {*thumb2_movsi_insn}
     (nil))

(insn 29 28 30 5 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:200 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 30 29 32 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:200 246 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
32, 65, 82, 99, 100, 117, 291, 295, 296, 1913, 1914, 1915


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(7){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 137
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 137
;; live  kill	
;; rd  in  	(13)
32, 65, 82, 99, 100, 117, 126, 291, 295, 296, 1913, 1914, 1915
;; rd  gen 	(2)
288, 1916
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1916

;; Pred edge  4 [95.6%] 
(code_label 32 30 33 6 3 "" [1 uses])

(note 33 32 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 6 (set (reg:SI 137)
        (const_int 1073760256 [0x40004800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:202 709 {*thumb2_movsi_insn}
     (nil))

(insn 36 35 37 6 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ USARTx ])
            (reg:SI 137))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:202 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 134 [ USARTx ])
                (const_int 1073760256 [0x40004800]))
            (nil))))

(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:202 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
            (nil)))
 -> 46)
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(14)
32, 65, 82, 99, 100, 117, 126, 288, 295, 296, 1913, 1914, 1915, 1916


;; Succ edge  7 [4.4%]  (fallthru)
;; Succ edge  8 [95.6%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(7){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(14)
32, 65, 82, 99, 100, 117, 126, 288, 295, 296, 1913, 1914, 1915, 1916
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126

;; Pred edge  6 [4.4%]  (fallthru)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 7 (set (reg:SI 0 r0)
        (const_int 262144 [0x40000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:204 709 {*thumb2_movsi_insn}
     (nil))

(insn 40 39 41 7 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:204 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 41 40 42 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:204 242 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 42 41 43 7 (set (reg:SI 0 r0)
        (const_int 262144 [0x40000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:205 709 {*thumb2_movsi_insn}
     (nil))

(insn 43 42 44 7 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:205 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 44 43 46 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:205 246 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
32, 65, 82, 99, 100, 117, 288, 295, 296, 1913, 1914, 1915, 1916


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(7){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 138
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(14)
32, 65, 82, 99, 100, 117, 126, 288, 295, 296, 1913, 1914, 1915, 1916
;; rd  gen 	(2)
285, 1917
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1917

;; Pred edge  6 [95.6%] 
(code_label 46 44 47 8 4 "" [1 uses])

(note 47 46 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 47 50 8 (set (reg:SI 138)
        (const_int 1073761280 [0x40004c00])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:207 709 {*thumb2_movsi_insn}
     (nil))

(insn 50 49 51 8 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ USARTx ])
            (reg:SI 138))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:207 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 134 [ USARTx ])
                (const_int 1073761280 [0x40004c00]))
            (nil))))

(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:207 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
            (nil)))
 -> 60)
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(15)
32, 65, 82, 99, 100, 117, 126, 285, 295, 296, 1913, 1914, 1915, 1916, 1917


;; Succ edge  9 [4.4%]  (fallthru)
;; Succ edge  10 [95.6%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(7){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(15)
32, 65, 82, 99, 100, 117, 126, 285, 295, 296, 1913, 1914, 1915, 1916, 1917
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126

;; Pred edge  8 [4.4%]  (fallthru)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 9 (set (reg:SI 0 r0)
        (const_int 524288 [0x80000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:209 709 {*thumb2_movsi_insn}
     (nil))

(insn 54 53 55 9 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:209 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 55 54 56 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:209 242 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 56 55 57 9 (set (reg:SI 0 r0)
        (const_int 524288 [0x80000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:210 709 {*thumb2_movsi_insn}
     (nil))

(insn 57 56 58 9 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:210 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 58 57 60 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:210 246 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
32, 65, 82, 99, 100, 117, 285, 295, 296, 1913, 1914, 1915, 1916, 1917


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u73(7){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 139
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(15)
32, 65, 82, 99, 100, 117, 126, 285, 295, 296, 1913, 1914, 1915, 1916, 1917
;; rd  gen 	(2)
282, 1918
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1918

;; Pred edge  8 [95.6%] 
(code_label 60 58 61 10 5 "" [1 uses])

(note 61 60 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 63 61 64 10 (set (reg:SI 139)
        (const_int 1073762304 [0x40005000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:212 709 {*thumb2_movsi_insn}
     (nil))

(insn 64 63 65 10 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ USARTx ])
            (reg:SI 139))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:212 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 134 [ USARTx ])
                (const_int 1073762304 [0x40005000]))
            (nil))))

(jump_insn 65 64 66 10 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:212 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
            (nil)))
 -> 74)
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
32, 65, 82, 99, 100, 117, 126, 282, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918


;; Succ edge  11 [4.4%]  (fallthru)
;; Succ edge  12 [95.6%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(7){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(16)
32, 65, 82, 99, 100, 117, 126, 282, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126

;; Pred edge  10 [4.4%]  (fallthru)
(note 66 65 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 11 (set (reg:SI 0 r0)
        (const_int 1048576 [0x100000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:214 709 {*thumb2_movsi_insn}
     (nil))

(insn 68 67 69 11 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:214 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 69 68 70 11 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:214 242 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 70 69 71 11 (set (reg:SI 0 r0)
        (const_int 1048576 [0x100000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:215 709 {*thumb2_movsi_insn}
     (nil))

(insn 71 70 72 11 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:215 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 72 71 74 11 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:215 246 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 11 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
32, 65, 82, 99, 100, 117, 282, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u91(7){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 140
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(16)
32, 65, 82, 99, 100, 117, 126, 282, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918
;; rd  gen 	(2)
279, 1919
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1919

;; Pred edge  10 [95.6%] 
(code_label 74 72 75 12 6 "" [1 uses])

(note 75 74 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 77 75 78 12 (set (reg:SI 140)
        (const_int 1073812480 [0x40011400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:217 709 {*thumb2_movsi_insn}
     (nil))

(insn 78 77 79 12 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ USARTx ])
            (reg:SI 140))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:217 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 134 [ USARTx ])
                (const_int 1073812480 [0x40011400]))
            (nil))))

(jump_insn 79 78 80 12 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:217 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
            (nil)))
 -> 88)
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(17)
32, 65, 82, 99, 100, 117, 126, 279, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919


;; Succ edge  13 [4.4%]  (fallthru)
;; Succ edge  14 [95.6%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u99(7){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(17)
32, 65, 82, 99, 100, 117, 126, 279, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126

;; Pred edge  12 [4.4%]  (fallthru)
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 13 (set (reg:SI 0 r0)
        (const_int 32 [0x20])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:219 709 {*thumb2_movsi_insn}
     (nil))

(insn 82 81 83 13 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:219 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 83 82 84 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB2PeriphResetCmd") [flags 0x41]  <function_decl 0x55c2c000 RCC_APB2PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:219 242 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 84 83 85 13 (set (reg:SI 0 r0)
        (const_int 32 [0x20])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:220 709 {*thumb2_movsi_insn}
     (nil))

(insn 85 84 86 13 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:220 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 86 85 88 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB2PeriphResetCmd") [flags 0x41]  <function_decl 0x55c2c000 RCC_APB2PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:220 246 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 13 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
32, 65, 82, 99, 100, 117, 279, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(7){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(17)
32, 65, 82, 99, 100, 117, 126, 279, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919
;; rd  gen 	(2)
276, 1920
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1920

;; Pred edge  12 [95.6%] 
(code_label 88 86 89 14 7 "" [1 uses])

(note 89 88 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 91 89 92 14 (set (reg:SI 141)
        (const_int 1073772544 [0x40007800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:222 709 {*thumb2_movsi_insn}
     (nil))

(insn 92 91 93 14 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ USARTx ])
            (reg:SI 141))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:222 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 134 [ USARTx ])
                (const_int 1073772544 [0x40007800]))
            (nil))))

(jump_insn 93 92 94 14 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:222 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
            (nil)))
 -> 102)
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(18)
32, 65, 82, 99, 100, 117, 126, 276, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920


;; Succ edge  15 [4.4%]  (fallthru)
;; Succ edge  16 [95.6%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u117(7){ }u118(13){ }u119(25){ }u120(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(18)
32, 65, 82, 99, 100, 117, 126, 276, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126

;; Pred edge  14 [4.4%]  (fallthru)
(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 15 (set (reg:SI 0 r0)
        (const_int 1073741824 [0x40000000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:224 709 {*thumb2_movsi_insn}
     (nil))

(insn 96 95 97 15 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:224 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 97 96 98 15 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:224 242 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 98 97 99 15 (set (reg:SI 0 r0)
        (const_int 1073741824 [0x40000000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:225 709 {*thumb2_movsi_insn}
     (nil))

(insn 99 98 100 15 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:225 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 100 99 102 15 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:225 246 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 15 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
32, 65, 82, 99, 100, 117, 276, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u127(7){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 142
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(18)
32, 65, 82, 99, 100, 117, 126, 276, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920
;; rd  gen 	(2)
273, 1921
;; rd  kill	(25)
271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 1921

;; Pred edge  14 [95.6%] 
(code_label 102 100 103 16 8 "" [1 uses])

(note 103 102 105 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 105 103 106 16 (set (reg:SI 142)
        (const_int 1073773568 [0x40007c00])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:229 709 {*thumb2_movsi_insn}
     (nil))

(insn 106 105 107 16 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ USARTx ])
            (reg:SI 142))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:229 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/v/f:SI 134 [ USARTx ])
            (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 134 [ USARTx ])
                    (const_int 1073773568 [0x40007c00]))
                (nil)))))

(jump_insn 107 106 108 16 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 118)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:229 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8987 [0x231b])
            (nil)))
 -> 118)
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
32, 65, 82, 99, 100, 117, 126, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921


;; Succ edge  17 [10.1%]  (fallthru)
;; Succ edge  18 [89.9%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u135(7){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(19)
32, 65, 82, 99, 100, 117, 126, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921
;; rd  gen 	(0)

;; rd  kill	(9)
118, 119, 120, 121, 122, 123, 124, 125, 126

;; Pred edge  16 [10.1%]  (fallthru)
(note 108 107 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 17 (set (reg:SI 0 r0)
        (const_int -2147483648 [0xffffffff80000000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:231 709 {*thumb2_movsi_insn}
     (nil))

(insn 110 109 111 17 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:231 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 111 110 112 17 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:231 242 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 112 111 113 17 (set (reg:SI 0 r0)
        (const_int -2147483648 [0xffffffff80000000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:232 709 {*thumb2_movsi_insn}
     (nil))

(insn 113 112 114 17 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:232 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 114 113 118 17 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:232 246 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 17 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
32, 65, 82, 99, 100, 117, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u145(7){ }u146(13){ }u147(25){ }u148(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
32, 65, 82, 99, 100, 117, 126, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  16 [89.9%] 
(code_label 118 114 119 18 1 "" [1 uses])

(note 119 118 0 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 18 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
32, 65, 82, 99, 100, 117, 126, 273, 295, 296, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_Init (USART_Init)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 12 (    1)


USART_Init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d,1u} r2={2d} r3={2d} r7={1d,11u} r12={1d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={6d,5u} r25={1d,14u,1e} r26={1d,10u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={2d,1u} r135={2d,4u,4e} r136={2d,2u,2e} r137={1d,1u} r139={1d,1u} r143={1d,1u} r144={1d,1u,1e} r146={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r161={1d,1u} r165={1d,1u} r174={1d,3u} r177={1d,2u} r178={1d,1u} r188={1d,1u} r219={1d,11u,2e} r220={1d,7u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r240={1d,1u} r242={1d,1u} r243={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r253={1d,1u} r254={1d,2u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r260={1d,1u} r261={1d,2u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,3u} r269={1d,1u,1e} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u,2e} r276={1d,1u} r277={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u,2e} r282={1d,1u} r283={1d,1u} r285={1d,1u} 
;;    total ref usage 381{209d,157u,15e} in 91{90 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131
0[0,3] 1[3,2] 2[5,2] 3[7,2] 7[9,1] 12[10,1] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,6] 25[29,1] 26[30,1] 27[31,1] 28[32,1] 29[33,1] 30[34,1] 31[35,1] 32[36,1] 33[37,1] 34[38,1] 35[39,1] 36[40,1] 37[41,1] 38[42,1] 39[43,1] 40[44,1] 41[45,1] 42[46,1] 43[47,1] 44[48,1] 45[49,1] 46[50,1] 47[51,1] 48[52,1] 49[53,1] 50[54,1] 51[55,1] 52[56,1] 53[57,1] 54[58,1] 55[59,1] 56[60,1] 57[61,1] 58[62,1] 59[63,1] 60[64,1] 61[65,1] 62[66,1] 63[67,1] 64[68,1] 65[69,1] 66[70,1] 67[71,1] 68[72,1] 69[73,1] 70[74,1] 71[75,1] 72[76,1] 73[77,1] 74[78,1] 75[79,1] 76[80,1] 77[81,1] 78[82,1] 79[83,1] 80[84,1] 81[85,1] 82[86,1] 83[87,1] 84[88,1] 85[89,1] 86[90,1] 87[91,1] 88[92,1] 89[93,1] 90[94,1] 91[95,1] 92[96,1] 93[97,1] 94[98,1] 95[99,1] 96[100,1] 97[101,1] 98[102,1] 99[103,1] 100[104,1] 101[105,1] 102[106,1] 103[107,1] 104[108,1] 105[109,1] 106[110,1] 107[111,1] 108[112,1] 109[113,1] 110[114,1] 111[115,1] 112[116,1] 113[117,1] 114[118,1] 115[119,1] 116[120,1] 117[121,1] 118[122,1] 119[123,1] 120[124,1] 121[125,1] 122[126,1] 123[127,1] 124[128,1] 125[129,1] 126[130,1] 127[131,1] 134[132,2] 135[134,2] 136[136,2] 137[138,1] 139[139,1] 143[140,1] 144[141,1] 146[142,1] 154[143,1] 155[144,1] 157[145,1] 161[146,1] 165[147,1] 174[148,1] 177[149,1] 178[150,1] 188[151,1] 219[152,1] 220[153,1] 221[154,1] 222[155,1] 223[156,1] 225[157,1] 226[158,1] 227[159,1] 228[160,1] 229[161,1] 231[162,1] 232[163,1] 233[164,1] 234[165,1] 236[166,1] 237[167,1] 238[168,1] 240[169,1] 242[170,1] 243[171,1] 245[172,1] 246[173,1] 247[174,1] 248[175,1] 249[176,1] 250[177,1] 251[178,1] 253[179,1] 254[180,1] 255[181,1] 256[182,1] 257[183,1] 258[184,1] 260[185,1] 261[186,1] 262[187,1] 263[188,1] 264[189,1] 265[190,1] 266[191,1] 267[192,1] 268[193,1] 269[194,1] 270[195,1] 271[196,1] 272[197,1] 273[198,1] 274[199,1] 275[200,1] 276[201,1] 277[202,1] 279[203,1] 280[204,1] 281[205,1] 282[206,1] 283[207,1] 285[208,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(7){ }d11(13){ }d13(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
2, 4, 6, 8, 9, 11, 13, 29, 30
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 29, 30
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(9)
2, 4, 6, 8, 9, 11, 13, 29, 30

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d9(bb 0 insn -1) }u1(13){ d11(bb 0 insn -1) }u2(25){ d29(bb 0 insn -1) }u3(26){ d30(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 139 143 144 146 154 155 157 161 219 220 221 222 223 225 226 227 228 229 231 232 233 234 236 237 238 240 242 243 245 246 247 248 249
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 139 143 144 146 154 155 157 161 219 220 221 222 223 225 226 227 228 229 231 232 233 234 236 237 238 240 242 243 245 246 247 248 249
;; live  kill	 14 [lr]
;; rd  in  	(9)
2, 4, 6, 8, 9, 11, 13, 29, 30
;; rd  gen 	(35)
25, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  kill	(42)
12, 13, 23, 24, 25, 26, 27, 28, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 219 220
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 219 220
;; rd  out 	(43)
2, 4, 6, 8, 9, 11, 25, 29, 30, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 219 { d152(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 221 { d154(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 10
;;      reg 137 { d138(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 11
;;      reg 220 { d153(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 12
;;      reg 139 { d139(bb 2 insn 10) }
;;      reg 222 { d155(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 223 { d156(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 15
;;      reg 143 { d140(bb 2 insn 13) }
;;      reg 219 { d152(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 16
;;      reg 219 { d152(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 17
;;      reg 225 { d157(bb 2 insn 16) }
;;   UD chains for insn luid 11 uid 19
;;      reg 144 { d141(bb 2 insn 17) }
;;   UD chains for insn luid 12 uid 20
;;      reg 226 { d158(bb 2 insn 19) }
;;   eq_note reg 144 { }
;;   UD chains for insn luid 13 uid 21
;;      reg 220 { d153(bb 2 insn 3) }
;;   UD chains for insn luid 14 uid 22
;;      reg 220 { d153(bb 2 insn 3) }
;;   UD chains for insn luid 15 uid 23
;;      reg 227 { d159(bb 2 insn 21) }
;;      reg 228 { d160(bb 2 insn 22) }
;;   UD chains for insn luid 16 uid 25
;;      reg 220 { d153(bb 2 insn 3) }
;;   UD chains for insn luid 17 uid 26
;;      reg 229 { d161(bb 2 insn 23) }
;;      reg 231 { d162(bb 2 insn 25) }
;;   UD chains for insn luid 18 uid 27
;;      reg 232 { d163(bb 2 insn 26) }
;;   UD chains for insn luid 19 uid 28
;;      reg 146 { d142(bb 2 insn 20) }
;;      reg 233 { d164(bb 2 insn 27) }
;;   UD chains for insn luid 20 uid 29
;;      reg 234 { d165(bb 2 insn 28) }
;;   UD chains for insn luid 21 uid 31
;;      reg 154 { d143(bb 2 insn 29) }
;;      reg 219 { d152(bb 2 insn 2) }
;;   UD chains for insn luid 22 uid 32
;;      reg 219 { d152(bb 2 insn 2) }
;;   UD chains for insn luid 23 uid 33
;;      reg 236 { d166(bb 2 insn 32) }
;;   UD chains for insn luid 24 uid 35
;;      reg 155 { d144(bb 2 insn 33) }
;;   UD chains for insn luid 25 uid 36
;;      reg 220 { d153(bb 2 insn 3) }
;;   UD chains for insn luid 26 uid 37
;;      reg 157 { d145(bb 2 insn 35) }
;;      reg 237 { d167(bb 2 insn 36) }
;;   UD chains for insn luid 27 uid 38
;;      reg 238 { d168(bb 2 insn 37) }
;;   UD chains for insn luid 28 uid 40
;;      reg 161 { d146(bb 2 insn 38) }
;;      reg 219 { d152(bb 2 insn 2) }
;;   UD chains for insn luid 29 uid 41
;;      reg 25 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 30 uid 42
;;      reg 240 { d169(bb 2 insn 41) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 31 uid 43
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 42) }
;;   UD chains for insn luid 33 uid 46
;;      reg 219 { d152(bb 2 insn 2) }
;;      reg 243 { d171(bb 2 insn 45) }
;;   eq_note reg 219 { }
;;   UD chains for insn luid 34 uid 47
;;      reg 24 { d27(bb 2 insn 46) }
;;   UD chains for insn luid 36 uid 51
;;      reg 219 { d152(bb 2 insn 2) }
;;      reg 246 { d173(bb 2 insn 50) }
;;   eq_note reg 219 { }
;;   UD chains for insn luid 37 uid 52
;;      reg 24 { d26(bb 2 insn 51) }
;;   UD chains for insn luid 38 uid 54
;;      reg 242 { d170(bb 2 insn 47) }
;;      reg 245 { d172(bb 2 insn 52) }
;;   UD chains for insn luid 39 uid 55
;;      reg 247 { d174(bb 2 insn 54) }
;;   UD chains for insn luid 40 uid 56
;;      reg 248 { d175(bb 2 insn 55) }
;;   UD chains for insn luid 41 uid 57
;;      reg 249 { d176(bb 2 insn 56) }
;;   UD chains for insn luid 42 uid 58
;;      reg 24 { d25(bb 2 insn 57) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u61(7){ d9(bb 0 insn -1) }u62(13){ d11(bb 0 insn -1) }u63(25){ d29(bb 0 insn -1) }u64(26){ d30(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 219 220
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
2, 4, 6, 8, 9, 11, 25, 29, 30, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
135
;; rd  kill	(2)
134, 135
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; rd  out 	(44)
2, 4, 6, 8, 9, 11, 25, 29, 30, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 25 { d29(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u66(7){ d9(bb 0 insn -1) }u67(13){ d11(bb 0 insn -1) }u68(25){ d29(bb 0 insn -1) }u69(26){ d30(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 219 220
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
2, 4, 6, 8, 9, 11, 25, 29, 30, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
134
;; rd  kill	(2)
134, 135
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; rd  out 	(44)
2, 4, 6, 8, 9, 11, 25, 29, 30, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 65
;;      reg 25 { d29(bb 0 insn -1) }

( 3 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u71(7){ d9(bb 0 insn -1) }u72(13){ d11(bb 0 insn -1) }u73(25){ d29(bb 0 insn -1) }u74(26){ d30(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 219
;; lr  def 	 24 [cc] 165 250 251
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; live  gen 	 24 [cc] 165 250 251
;; live  kill	
;; rd  in  	(45)
2, 4, 6, 8, 9, 11, 25, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(4)
24, 147, 177, 178
;; rd  kill	(9)
23, 24, 25, 26, 27, 28, 147, 177, 178
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; rd  out 	(48)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 68
;;      reg 219 { d152(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 69
;;      reg 250 { d177(bb 5 insn 68) }
;;   UD chains for insn luid 2 uid 70
;;      reg 165 { d147(bb 5 insn 69) }
;;   UD chains for insn luid 3 uid 71
;;      reg 251 { d178(bb 5 insn 70) }
;;   UD chains for insn luid 4 uid 72
;;      reg 24 { d24(bb 5 insn 71) }

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u80(7){ d9(bb 0 insn -1) }u81(13){ d11(bb 0 insn -1) }u82(25){ d29(bb 0 insn -1) }u83(26){ d30(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 220
;; lr  def 	 136 253 254 255 256 257 258
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; live  gen 	 136 253 254 255 256 257 258
;; live  kill	
;; rd  in  	(48)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(7)
137, 179, 180, 181, 182, 183, 184
;; rd  kill	(8)
136, 137, 179, 180, 181, 182, 183, 184
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 219
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 136 219
;; rd  out 	(55)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 75
;;      reg 135 { d135(bb 3 insn 60) d134(bb 4 insn 65) }
;;   UD chains for insn luid 1 uid 76
;;      reg 135 { d135(bb 3 insn 60) d134(bb 4 insn 65) }
;;      reg 253 { d179(bb 6 insn 75) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 2 uid 77
;;      reg 254 { d180(bb 6 insn 76) }
;;   UD chains for insn luid 3 uid 78
;;      reg 254 { d180(bb 6 insn 76) }
;;      reg 255 { d181(bb 6 insn 77) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 4 uid 79
;;      reg 220 { d153(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 80
;;      reg 258 { d184(bb 6 insn 79) }
;;   UD chains for insn luid 6 uid 81
;;      reg 256 { d182(bb 6 insn 78) }
;;      reg 257 { d183(bb 6 insn 80) }

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u96(7){ d9(bb 0 insn -1) }u97(13){ d11(bb 0 insn -1) }u98(25){ d29(bb 0 insn -1) }u99(26){ d30(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 220
;; lr  def 	 136 260 261 262 263 264 265
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; live  gen 	 136 260 261 262 263 264 265
;; live  kill	
;; rd  in  	(48)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(7)
136, 185, 186, 187, 188, 189, 190
;; rd  kill	(8)
136, 137, 185, 186, 187, 188, 189, 190
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 219
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 136 219
;; rd  out 	(55)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185, 186, 187, 188, 189, 190
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 87
;;      reg 135 { d135(bb 3 insn 60) d134(bb 4 insn 65) }
;;   UD chains for insn luid 1 uid 88
;;      reg 135 { d135(bb 3 insn 60) d134(bb 4 insn 65) }
;;      reg 260 { d185(bb 7 insn 87) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 2 uid 89
;;      reg 261 { d186(bb 7 insn 88) }
;;   UD chains for insn luid 3 uid 90
;;      reg 261 { d186(bb 7 insn 88) }
;;      reg 262 { d187(bb 7 insn 89) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 4 uid 91
;;      reg 220 { d153(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 92
;;      reg 265 { d190(bb 7 insn 91) }
;;   UD chains for insn luid 6 uid 93
;;      reg 263 { d188(bb 7 insn 90) }
;;      reg 264 { d189(bb 7 insn 92) }

( 6 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u112(7){ d9(bb 0 insn -1) }u113(13){ d11(bb 0 insn -1) }u114(25){ d29(bb 0 insn -1) }u115(26){ d30(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 219
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 136 219
;; lr  def 	 24 [cc] 174 177 178 266 267 268 269 270 271 272 273
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 136 219
;; live  gen 	 24 [cc] 174 177 178 266 267 268 269 270 271 272 273
;; live  kill	
;; rd  in  	(62)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190
;; rd  gen 	(12)
23, 148, 149, 150, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  kill	(17)
23, 24, 25, 26, 27, 28, 148, 149, 150, 191, 192, 193, 194, 195, 196, 197, 198
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 174 177 219 268
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 219 268
;; rd  out 	(73)
2, 4, 6, 8, 9, 11, 23, 29, 30, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 98
;;      reg 136 { d137(bb 6 insn 81) d136(bb 7 insn 93) }
;;      reg 268 { d193(bb 8 insn 97) }
;;   eq_note reg 136 { }
;;   UD chains for insn luid 2 uid 99
;;      reg 267 { d192(bb 8 insn 98) }
;;   eq_note reg 136 { }
;;   UD chains for insn luid 3 uid 100
;;      reg 266 { d191(bb 8 insn 99) }
;;   UD chains for insn luid 4 uid 101
;;      reg 174 { d148(bb 8 insn 100) }
;;   UD chains for insn luid 6 uid 103
;;      reg 269 { d194(bb 8 insn 101) }
;;      reg 271 { d196(bb 8 insn 102) }
;;   eq_note reg 269 { }
;;   UD chains for insn luid 7 uid 104
;;      reg 136 { d137(bb 6 insn 81) d136(bb 7 insn 93) }
;;      reg 270 { d195(bb 8 insn 103) }
;;   UD chains for insn luid 8 uid 105
;;      reg 219 { d152(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 106
;;      reg 272 { d197(bb 8 insn 105) }
;;   UD chains for insn luid 10 uid 107
;;      reg 178 { d150(bb 8 insn 106) }
;;   UD chains for insn luid 11 uid 108
;;      reg 273 { d198(bb 8 insn 107) }
;;   UD chains for insn luid 12 uid 109
;;      reg 24 { d23(bb 8 insn 108) }

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u133(7){ d9(bb 0 insn -1) }u134(13){ d11(bb 0 insn -1) }u135(25){ d29(bb 0 insn -1) }u136(26){ d30(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 174 177 219 268
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 268
;; lr  def 	 134 274 275 276 277 279
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 219 268
;; live  gen 	 134 274 275 276 277 279
;; live  kill	
;; rd  in  	(73)
2, 4, 6, 8, 9, 11, 23, 29, 30, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(6)
133, 199, 200, 201, 202, 203
;; rd  kill	(7)
132, 133, 199, 200, 201, 202, 203
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 219
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 219
;; rd  out 	(79)
2, 4, 6, 8, 9, 11, 23, 29, 30, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 111
;;      reg 177 { d149(bb 8 insn 104) }
;;   UD chains for insn luid 1 uid 112
;;      reg 274 { d199(bb 9 insn 111) }
;;   UD chains for insn luid 2 uid 115
;;      reg 268 { d193(bb 8 insn 97) }
;;      reg 275 { d200(bb 9 insn 112) }
;;   eq_note reg 275 { }
;;   UD chains for insn luid 3 uid 116
;;      reg 277 { d202(bb 9 insn 115) }
;;   eq_note reg 275 { }
;;   UD chains for insn luid 4 uid 117
;;      reg 276 { d201(bb 9 insn 116) }
;;   UD chains for insn luid 5 uid 118
;;      reg 174 { d148(bb 8 insn 100) }
;;      reg 279 { d203(bb 9 insn 117) }

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u147(7){ d9(bb 0 insn -1) }u148(13){ d11(bb 0 insn -1) }u149(25){ d29(bb 0 insn -1) }u150(26){ d30(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 174 177 219 268
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 268
;; lr  def 	 134 280 281 282 283 285
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 219 268
;; live  gen 	 134 280 281 282 283 285
;; live  kill	
;; rd  in  	(73)
2, 4, 6, 8, 9, 11, 23, 29, 30, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(6)
132, 204, 205, 206, 207, 208
;; rd  kill	(7)
132, 133, 204, 205, 206, 207, 208
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 219
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 219
;; rd  out 	(79)
2, 4, 6, 8, 9, 11, 23, 29, 30, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 208
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 123
;;      reg 177 { d149(bb 8 insn 104) }
;;   UD chains for insn luid 1 uid 124
;;      reg 280 { d204(bb 10 insn 123) }
;;   UD chains for insn luid 2 uid 127
;;      reg 268 { d193(bb 8 insn 97) }
;;      reg 281 { d205(bb 10 insn 124) }
;;   eq_note reg 281 { }
;;   UD chains for insn luid 3 uid 128
;;      reg 283 { d207(bb 10 insn 127) }
;;   eq_note reg 281 { }
;;   UD chains for insn luid 4 uid 129
;;      reg 282 { d206(bb 10 insn 128) }
;;   UD chains for insn luid 5 uid 130
;;      reg 174 { d148(bb 8 insn 100) }
;;      reg 285 { d208(bb 10 insn 129) }

( 9 10 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(7){ d9(bb 0 insn -1) }u162(13){ d11(bb 0 insn -1) }u163(25){ d29(bb 0 insn -1) }u164(26){ d30(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 219
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 219
;; lr  def 	 188
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 219
;; live  gen 	 188
;; live  kill	
;; rd  in  	(85)
2, 4, 6, 8, 9, 11, 23, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(1)
151
;; rd  kill	(1)
151
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(86)
2, 4, 6, 8, 9, 11, 23, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 133
;;      reg 134 { d133(bb 9 insn 118) d132(bb 10 insn 130) }
;;   UD chains for insn luid 1 uid 135
;;      reg 188 { d151(bb 11 insn 133) }
;;      reg 219 { d152(bb 2 insn 2) }

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u168(7){ d9(bb 0 insn -1) }u169(13){ d11(bb 0 insn -1) }u170(14){ }u171(25){ d29(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(86)
2, 4, 6, 8, 9, 11, 23, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(86)
2, 4, 6, 8, 9, 11, 23, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;;  UD chains for artificial uses
;;   reg 7 { d9(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d29(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 58 to worklist
  Adding insn 43 to worklist
  Adding insn 40 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 7 to worklist
  Adding insn 72 to worklist
  Adding insn 68 to worklist
  Adding insn 109 to worklist
  Adding insn 105 to worklist
  Adding insn 135 to worklist
Finished finding needed instructions:
Processing use of (subreg (reg 188 [ D.7898 ]) 0) in insn 135:
  Adding insn 133 to worklist
Processing use of (reg 219 [ USARTx ]) in insn 135:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 134 [ tmpreg ]) 0) in insn 133:
  Adding insn 118 to worklist
  Adding insn 130 to worklist
Processing use of (reg 174 [ tmpreg ]) in insn 130:
  Adding insn 100 to worklist
Processing use of (reg 285) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 282) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 283) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 268) in insn 127:
  Adding insn 97 to worklist
Processing use of (reg 281) in insn 127:
  Adding insn 124 to worklist
Processing use of (reg 280) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 177 [ fractionaldivider ]) in insn 123:
  Adding insn 104 to worklist
Processing use of (reg 136 [ integerdivider ]) in insn 104:
  Adding insn 81 to worklist
  Adding insn 93 to worklist
Processing use of (reg 270) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 269) in insn 103:
  Adding insn 101 to worklist
Processing use of (reg 271) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 174 [ tmpreg ]) in insn 101:
Processing use of (reg 263) in insn 93:
  Adding insn 90 to worklist
Processing use of (reg 264) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 265 [ USART_InitStruct_8(D)->USART_BaudRate ]) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 220 [ USART_InitStruct ]) in insn 91:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 261) in insn 90:
  Adding insn 88 to worklist
Processing use of (reg 262) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 261) in insn 89:
Processing use of (reg 135 [ apbclock ]) in insn 88:
  Adding insn 60 to worklist
  Adding insn 65 to worklist
Processing use of (reg 260) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 135 [ apbclock ]) in insn 87:
Processing use of (reg 25 sfp) in insn 65:
Processing use of (reg 25 sfp) in insn 60:
Processing use of (reg 256) in insn 81:
  Adding insn 78 to worklist
Processing use of (reg 257) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 258 [ USART_InitStruct_8(D)->USART_BaudRate ]) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 220 [ USART_InitStruct ]) in insn 79:
Processing use of (reg 254) in insn 78:
  Adding insn 76 to worklist
Processing use of (reg 255) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 254) in insn 77:
Processing use of (reg 135 [ apbclock ]) in insn 76:
Processing use of (reg 253) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 135 [ apbclock ]) in insn 75:
Processing use of (reg 266) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 267) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 136 [ integerdivider ]) in insn 98:
Processing use of (reg 268) in insn 98:
Processing use of (reg 174 [ tmpreg ]) in insn 118:
Processing use of (reg 279) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 276) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 277) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 268) in insn 115:
Processing use of (reg 275) in insn 115:
  Adding insn 112 to worklist
Processing use of (reg 274) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 177 [ fractionaldivider ]) in insn 111:
Processing use of (reg 219 [ USARTx ]) in insn 105:
Processing use of (reg 24 cc) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 273 [ D.7926 ]) in insn 108:
  Adding insn 107 to worklist
Processing use of (subreg (reg 178 [ D.7926 ]) 0) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 272 [ USARTx_10(D)->CR1 ]) in insn 106:
Processing use of (reg 219 [ USARTx ]) in insn 68:
Processing use of (reg 24 cc) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 251 [ D.7914 ]) in insn 71:
  Adding insn 70 to worklist
Processing use of (subreg (reg 165 [ D.7914 ]) 0) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 250 [ USARTx_10(D)->CR1 ]) in insn 69:
Processing use of (reg 219 [ USARTx ]) in insn 7:
Processing use of (subreg (reg 143 [ D.7898 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 219 [ USARTx ]) in insn 15:
Processing use of (subreg (reg 223) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 139 [ tmpreg ]) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 222 [ USART_InitStruct_8(D)->USART_StopBits ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 220 [ USART_InitStruct ]) in insn 11:
Processing use of (reg 137 [ D.7895 ]) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 221 [ USARTx_10(D)->CR2 ]) in insn 8:
Processing use of (reg 219 [ USARTx ]) in insn 16:
Processing use of (subreg (reg 154 [ D.7898 ]) 0) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 219 [ USARTx ]) in insn 31:
Processing use of (subreg (reg 234) 0) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 146 [ tmpreg ]) in insn 28:
  Adding insn 20 to worklist
Processing use of (reg 233) in insn 28:
  Adding insn 27 to worklist
Processing use of (subreg (reg 232) 0) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 229) in insn 26:
  Adding insn 23 to worklist
Processing use of (subreg (reg 231 [ USART_InitStruct_8(D)->USART_Mode ]) 0) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 220 [ USART_InitStruct ]) in insn 25:
Processing use of (subreg (reg 227 [ USART_InitStruct_8(D)->USART_Parity ]) 0) in insn 23:
  Adding insn 21 to worklist
Processing use of (subreg (reg 228 [ USART_InitStruct_8(D)->USART_WordLength ]) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 220 [ USART_InitStruct ]) in insn 22:
Processing use of (reg 220 [ USART_InitStruct ]) in insn 21:
Processing use of (reg 226) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 144 [ D.7899 ]) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 225 [ USARTx_10(D)->CR1 ]) in insn 17:
Processing use of (reg 219 [ USARTx ]) in insn 32:
Processing use of (subreg (reg 161 [ D.7898 ]) 0) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 219 [ USARTx ]) in insn 40:
Processing use of (subreg (reg 238) 0) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 157 [ tmpreg ]) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 237 [ USART_InitStruct_8(D)->USART_HardwareFlowControl ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 220 [ USART_InitStruct ]) in insn 36:
Processing use of (reg 155 [ D.7906 ]) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 236 [ USARTx_10(D)->CR3 ]) in insn 33:
Processing use of (reg 13 sp) in insn 43:
Processing use of (reg 0 r0) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 240) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 25 sfp) in insn 41:
Processing use of (reg 24 cc) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 249) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 248) in insn 56:
  Adding insn 55 to worklist
Processing use of (subreg (reg 247) 0) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 242) in insn 54:
  Adding insn 47 to worklist
Processing use of (reg 245) in insn 54:
  Adding insn 52 to worklist
Processing use of (reg 24 cc) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 219 [ USARTx ]) in insn 51:
Processing use of (reg 246) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 24 cc) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 219 [ USARTx ]) in insn 46:
Processing use of (reg 243) in insn 46:
  Adding insn 45 to worklist


USART_Init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d,1u} r2={2d} r3={2d} r7={1d,11u} r12={1d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={6d,5u} r25={1d,14u,1e} r26={1d,10u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={2d,1u} r135={2d,4u,4e} r136={2d,2u,2e} r137={1d,1u} r139={1d,1u} r143={1d,1u} r144={1d,1u,1e} r146={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r161={1d,1u} r165={1d,1u} r174={1d,3u} r177={1d,2u} r178={1d,1u} r188={1d,1u} r219={1d,11u,2e} r220={1d,7u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r240={1d,1u} r242={1d,1u} r243={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r253={1d,1u} r254={1d,2u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r260={1d,1u} r261={1d,2u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,3u} r269={1d,1u,1e} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u,2e} r276={1d,1u} r277={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u,2e} r282={1d,1u} r283={1d,1u} r285={1d,1u} 
;;    total ref usage 381{209d,157u,15e} in 91{90 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131
0[0,3] 1[3,2] 2[5,2] 3[7,2] 7[9,1] 12[10,1] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,6] 25[29,1] 26[30,1] 27[31,1] 28[32,1] 29[33,1] 30[34,1] 31[35,1] 32[36,1] 33[37,1] 34[38,1] 35[39,1] 36[40,1] 37[41,1] 38[42,1] 39[43,1] 40[44,1] 41[45,1] 42[46,1] 43[47,1] 44[48,1] 45[49,1] 46[50,1] 47[51,1] 48[52,1] 49[53,1] 50[54,1] 51[55,1] 52[56,1] 53[57,1] 54[58,1] 55[59,1] 56[60,1] 57[61,1] 58[62,1] 59[63,1] 60[64,1] 61[65,1] 62[66,1] 63[67,1] 64[68,1] 65[69,1] 66[70,1] 67[71,1] 68[72,1] 69[73,1] 70[74,1] 71[75,1] 72[76,1] 73[77,1] 74[78,1] 75[79,1] 76[80,1] 77[81,1] 78[82,1] 79[83,1] 80[84,1] 81[85,1] 82[86,1] 83[87,1] 84[88,1] 85[89,1] 86[90,1] 87[91,1] 88[92,1] 89[93,1] 90[94,1] 91[95,1] 92[96,1] 93[97,1] 94[98,1] 95[99,1] 96[100,1] 97[101,1] 98[102,1] 99[103,1] 100[104,1] 101[105,1] 102[106,1] 103[107,1] 104[108,1] 105[109,1] 106[110,1] 107[111,1] 108[112,1] 109[113,1] 110[114,1] 111[115,1] 112[116,1] 113[117,1] 114[118,1] 115[119,1] 116[120,1] 117[121,1] 118[122,1] 119[123,1] 120[124,1] 121[125,1] 122[126,1] 123[127,1] 124[128,1] 125[129,1] 126[130,1] 127[131,1] 134[132,2] 135[134,2] 136[136,2] 137[138,1] 139[139,1] 143[140,1] 144[141,1] 146[142,1] 154[143,1] 155[144,1] 157[145,1] 161[146,1] 165[147,1] 174[148,1] 177[149,1] 178[150,1] 188[151,1] 219[152,1] 220[153,1] 221[154,1] 222[155,1] 223[156,1] 225[157,1] 226[158,1] 227[159,1] 228[160,1] 229[161,1] 231[162,1] 232[163,1] 233[164,1] 234[165,1] 236[166,1] 237[167,1] 238[168,1] 240[169,1] 242[170,1] 243[171,1] 245[172,1] 246[173,1] 247[174,1] 248[175,1] 249[176,1] 250[177,1] 251[178,1] 253[179,1] 254[180,1] 255[181,1] 256[182,1] 257[183,1] 258[184,1] 260[185,1] 261[186,1] 262[187,1] 263[188,1] 264[189,1] 265[190,1] 266[191,1] 267[192,1] 268[193,1] 269[194,1] 270[195,1] 271[196,1] 272[197,1] 273[198,1] 274[199,1] 275[200,1] 276[201,1] 277[202,1] 279[203,1] 280[204,1] 281[205,1] 282[206,1] 283[207,1] 285[208,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 139 143 144 146 154 155 157 161 219 220 221 222 223 225 226 227 228 229 231 232 233 234 236 237 238 240 242 243 245 246 247 248 249
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 139 143 144 146 154 155 157 161 219 220 221 222 223 225 226 227 228 229 231 232 233 234 236 237 238 240 242 243 245 246 247 248 249
;; live  kill	 14 [lr]
;; rd  in  	(9)
2, 4, 6, 8, 9, 11, 13, 29, 30
;; rd  gen 	(35)
25, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  kill	(42)
12, 13, 23, 24, 25, 26, 27, 28, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 219 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:247 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v/f:SI 220 [ USART_InitStruct ])
        (reg:SI 1 r1 [ USART_InitStruct ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:247 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_InitStruct ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:HI 221 [ USARTx_10(D)->CR2 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 219 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_10(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:269 711 {*thumb2_movhi_insn}
     (nil))

(insn 8 7 10 2 (set (reg:SI 137 [ D.7895 ])
        (zero_extend:SI (reg:HI 221 [ USARTx_10(D)->CR2 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:269 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 221 [ USARTx_10(D)->CR2 ])
        (nil)))

(insn 10 8 11 2 (set (reg/v:SI 139 [ tmpreg ])
        (and:SI (reg:SI 137 [ D.7895 ])
            (const_int -12289 [0xffffffffffffcfff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:272 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 137 [ D.7895 ])
        (nil)))

(insn 11 10 12 2 (set (reg:SI 222 [ USART_InitStruct_8(D)->USART_StopBits ])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 220 [ USART_InitStruct ])
                    (const_int 6 [0x6])) [5 USART_InitStruct_8(D)->USART_StopBits+0 S2 A16]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:276 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 12 11 13 2 (set (reg:SI 223)
        (ior:SI (reg/v:SI 139 [ tmpreg ])
            (reg:SI 222 [ USART_InitStruct_8(D)->USART_StopBits ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:276 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 222 [ USART_InitStruct_8(D)->USART_StopBits ])
        (expr_list:REG_DEAD (reg/v:SI 139 [ tmpreg ])
            (nil))))

(insn 13 12 15 2 (set (reg:SI 143 [ D.7898 ])
        (zero_extend:SI (subreg:HI (reg:SI 223) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:279 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 223)
        (nil)))

(insn 15 13 16 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 219 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_10(D)->CR2+0 S2 A16])
        (subreg/s/u:HI (reg:SI 143 [ D.7898 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:279 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 143 [ D.7898 ])
        (nil)))

(insn 16 15 17 2 (set (reg:HI 225 [ USARTx_10(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 219 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:282 711 {*thumb2_movhi_insn}
     (nil))

(insn 17 16 19 2 (set (reg:SI 144 [ D.7899 ])
        (zero_extend:SI (reg:HI 225 [ USARTx_10(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:282 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 225 [ USARTx_10(D)->CR1 ])
        (nil)))

(insn 19 17 20 2 (set (reg:SI 226)
        (and:SI (reg:SI 144 [ D.7899 ])
            (const_int -5633 [0xffffffffffffe9ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:285 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144 [ D.7899 ])
        (nil)))

(insn 20 19 21 2 (set (reg/v:SI 146 [ tmpreg ])
        (and:SI (reg:SI 226)
            (const_int -13 [0xfffffffffffffff3]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:285 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 226)
        (expr_list:REG_EQUAL (and:SI (reg:SI 144 [ D.7899 ])
                (const_int -5645 [0xffffffffffffe9f3]))
            (nil))))

(insn 21 20 22 2 (set (reg:HI 227 [ USART_InitStruct_8(D)->USART_Parity ])
        (mem/s:HI (plus:SI (reg/v/f:SI 220 [ USART_InitStruct ])
                (const_int 8 [0x8])) [5 USART_InitStruct_8(D)->USART_Parity+0 S2 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 711 {*thumb2_movhi_insn}
     (nil))

(insn 22 21 23 2 (set (reg:HI 228 [ USART_InitStruct_8(D)->USART_WordLength ])
        (mem/s:HI (plus:SI (reg/v/f:SI 220 [ USART_InitStruct ])
                (const_int 4 [0x4])) [5 USART_InitStruct_8(D)->USART_WordLength+0 S2 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 711 {*thumb2_movhi_insn}
     (nil))

(insn 23 22 25 2 (set (reg:SI 229)
        (ior:SI (subreg:SI (reg:HI 227 [ USART_InitStruct_8(D)->USART_Parity ]) 0)
            (subreg:SI (reg:HI 228 [ USART_InitStruct_8(D)->USART_WordLength ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:HI 228 [ USART_InitStruct_8(D)->USART_WordLength ])
        (expr_list:REG_DEAD (reg:HI 227 [ USART_InitStruct_8(D)->USART_Parity ])
            (nil))))

(insn 25 23 26 2 (set (reg:HI 231 [ USART_InitStruct_8(D)->USART_Mode ])
        (mem/s:HI (plus:SI (reg/v/f:SI 220 [ USART_InitStruct ])
                (const_int 10 [0xa])) [5 USART_InitStruct_8(D)->USART_Mode+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 711 {*thumb2_movhi_insn}
     (nil))

(insn 26 25 27 2 (set (reg:SI 232)
        (ior:SI (reg:SI 229)
            (subreg:SI (reg:HI 231 [ USART_InitStruct_8(D)->USART_Mode ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:HI 231 [ USART_InitStruct_8(D)->USART_Mode ])
        (expr_list:REG_DEAD (reg:SI 229)
            (nil))))

(insn 27 26 28 2 (set (reg:SI 233)
        (zero_extend:SI (subreg:HI (reg:SI 232) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 232)
        (nil)))

(insn 28 27 29 2 (set (reg:SI 234)
        (ior:SI (reg:SI 233)
            (reg/v:SI 146 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 233)
        (expr_list:REG_DEAD (reg/v:SI 146 [ tmpreg ])
            (nil))))

(insn 29 28 31 2 (set (reg:SI 154 [ D.7898 ])
        (zero_extend:SI (subreg:HI (reg:SI 234) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:295 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 234)
        (nil)))

(insn 31 29 32 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 219 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 154 [ D.7898 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:295 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 154 [ D.7898 ])
        (nil)))

(insn 32 31 33 2 (set (reg:HI 236 [ USARTx_10(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 219 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_10(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:298 711 {*thumb2_movhi_insn}
     (nil))

(insn 33 32 35 2 (set (reg:SI 155 [ D.7906 ])
        (zero_extend:SI (reg:HI 236 [ USARTx_10(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:298 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 236 [ USARTx_10(D)->CR3 ])
        (nil)))

(insn 35 33 36 2 (set (reg/v:SI 157 [ tmpreg ])
        (and:SI (reg:SI 155 [ D.7906 ])
            (const_int -769 [0xfffffffffffffcff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:301 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 155 [ D.7906 ])
        (nil)))

(insn 36 35 37 2 (set (reg:SI 237 [ USART_InitStruct_8(D)->USART_HardwareFlowControl ])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 220 [ USART_InitStruct ])
                    (const_int 12 [0xc])) [5 USART_InitStruct_8(D)->USART_HardwareFlowControl+0 S2 A32]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:305 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 37 36 38 2 (set (reg:SI 238)
        (ior:SI (reg/v:SI 157 [ tmpreg ])
            (reg:SI 237 [ USART_InitStruct_8(D)->USART_HardwareFlowControl ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:305 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 237 [ USART_InitStruct_8(D)->USART_HardwareFlowControl ])
        (expr_list:REG_DEAD (reg/v:SI 157 [ tmpreg ])
            (nil))))

(insn 38 37 40 2 (set (reg:SI 161 [ D.7898 ])
        (zero_extend:SI (subreg:HI (reg:SI 238) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:308 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 238)
        (nil)))

(insn 40 38 41 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 219 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_10(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 161 [ D.7898 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:308 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 161 [ D.7898 ])
        (nil)))

(insn 41 40 42 2 (set (reg/f:SI 240)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:312 4 {*arm_addsi3}
     (nil))

(insn 42 41 43 2 (set (reg:SI 0 r0)
        (reg/f:SI 240)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:312 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 240)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(call_insn 43 42 45 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_GetClocksFreq") [flags 0x41]  <function_decl 0x55c25600 RCC_GetClocksFreq>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:312 242 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 45 43 46 2 (set (reg:SI 243)
        (const_int 1073812480 [0x40011400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 709 {*thumb2_movsi_insn}
     (nil))

(insn 46 45 47 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 219 [ USARTx ])
            (reg:SI 243))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 243)
        (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 219 [ USARTx ])
                (const_int 1073812480 [0x40011400]))
            (nil))))

(insn 47 46 50 2 (set (reg:SI 242)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 713 {*thumb2_mov_scc}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 50 47 51 2 (set (reg:SI 246)
        (const_int 1073811456 [0x40011000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 709 {*thumb2_movsi_insn}
     (nil))

(insn 51 50 52 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 219 [ USARTx ])
            (reg:SI 246))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 246)
        (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 219 [ USARTx ])
                (const_int 1073811456 [0x40011000]))
            (nil))))

(insn 52 51 54 2 (set (reg:SI 245)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 713 {*thumb2_mov_scc}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 54 52 55 2 (set (reg:SI 247)
        (ior:SI (reg:SI 242)
            (reg:SI 245))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 245)
        (expr_list:REG_DEAD (reg:SI 242)
            (nil))))

(insn 55 54 56 2 (set (reg:QI 248)
        (subreg:QI (reg:SI 247) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 247)
        (nil)))

(insn 56 55 57 2 (set (reg:SI 249)
        (zero_extend:SI (reg:QI 248))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 248)
        (nil)))

(insn 57 56 58 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 249)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 249)
        (nil)))

(jump_insn 58 57 59 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 63)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 219 220
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 219 220
;; rd  out 	(43)
2, 4, 6, 8, 9, 11, 25, 29, 30, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u61(7){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 219 220
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
2, 4, 6, 8, 9, 11, 25, 29, 30, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
135
;; rd  kill	(2)
134, 135

;; Pred edge  2 [50.0%]  (fallthru)
(note 59 58 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 63 3 (set (reg/v:SI 135 [ apbclock ])
        (mem/s/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [4 RCC_ClocksStatus.PCLK2_Frequency+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:316 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; rd  out 	(44)
2, 4, 6, 8, 9, 11, 25, 29, 30, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u66(7){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 219 220
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
2, 4, 6, 8, 9, 11, 25, 29, 30, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
134
;; rd  kill	(2)
134, 135

;; Pred edge  2 [50.0%] 
(code_label 63 60 64 4 20 "" [1 uses])

(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 4 (set (reg/v:SI 135 [ apbclock ])
        (mem/s/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 RCC_ClocksStatus.PCLK1_Frequency+0 S4 A64])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:320 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; rd  out 	(44)
2, 4, 6, 8, 9, 11, 25, 29, 30, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u71(7){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 219
;; lr  def 	 24 [cc] 165 250 251
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; live  gen 	 24 [cc] 165 250 251
;; live  kill	
;; rd  in  	(45)
2, 4, 6, 8, 9, 11, 25, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(4)
24, 147, 177, 178
;; rd  kill	(9)
23, 24, 25, 26, 27, 28, 147, 177, 178

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 66 65 67 5 21 "" [0 uses])

(note 67 66 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 5 (set (reg:HI 250 [ USARTx_10(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 219 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:324 711 {*thumb2_movhi_insn}
     (nil))

(insn 69 68 70 5 (set (reg:SI 165 [ D.7914 ])
        (zero_extend:SI (reg:HI 250 [ USARTx_10(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:324 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 250 [ USARTx_10(D)->CR1 ])
        (nil)))

(insn 70 69 71 5 (set (reg:SI 251 [ D.7914 ])
        (sign_extend:SI (subreg/u:HI (reg:SI 165 [ D.7914 ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:324 165 {*arm_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 165 [ D.7914 ])
        (nil)))

(insn 71 70 72 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 251 [ D.7914 ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:324 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 251 [ D.7914 ])
        (nil)))

(jump_insn 72 71 73 5 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:324 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 84)
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; rd  out 	(48)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178


;; Succ edge  6 [27.0%]  (fallthru)
;; Succ edge  7 [73.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u80(7){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 220
;; lr  def 	 136 253 254 255 256 257 258
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; live  gen 	 136 253 254 255 256 257 258
;; live  kill	
;; rd  in  	(48)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(7)
137, 179, 180, 181, 182, 183, 184
;; rd  kill	(8)
136, 137, 179, 180, 181, 182, 183, 184

;; Pred edge  5 [27.0%]  (fallthru)
(note 73 72 75 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 75 73 76 6 (set (reg:SI 253)
        (ashift:SI (reg/v:SI 135 [ apbclock ])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 119 {*arm_shiftsi3}
     (nil))

(insn 76 75 77 6 (set (reg:SI 254)
        (plus:SI (reg:SI 253)
            (reg/v:SI 135 [ apbclock ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 253)
        (expr_list:REG_DEAD (reg/v:SI 135 [ apbclock ])
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 135 [ apbclock ])
                    (const_int 5 [0x5]))
                (nil)))))

(insn 77 76 78 6 (set (reg:SI 255)
        (ashift:SI (reg:SI 254)
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 119 {*arm_shiftsi3}
     (nil))

(insn 78 77 79 6 (set (reg:SI 256)
        (plus:SI (reg:SI 254)
            (reg:SI 255))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 255)
        (expr_list:REG_DEAD (reg:SI 254)
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 135 [ apbclock ])
                    (const_int 25 [0x19]))
                (nil)))))

(insn 79 78 80 6 (set (reg:SI 258 [ USART_InitStruct_8(D)->USART_BaudRate ])
        (mem/s:SI (reg/v/f:SI 220 [ USART_InitStruct ]) [4 USART_InitStruct_8(D)->USART_BaudRate+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 220 [ USART_InitStruct ])
        (nil)))

(insn 80 79 81 6 (set (reg:SI 257)
        (ashift:SI (reg:SI 258 [ USART_InitStruct_8(D)->USART_BaudRate ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 258 [ USART_InitStruct_8(D)->USART_BaudRate ])
        (nil)))

(insn 81 80 84 6 (set (reg/v:SI 136 [ integerdivider ])
        (udiv:SI (reg:SI 256)
            (reg:SI 257))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 133 {udivsi3}
     (expr_list:REG_DEAD (reg:SI 257)
        (expr_list:REG_DEAD (reg:SI 256)
            (nil))))
;; End of basic block 6 -> ( 8)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 219
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 136 219
;; rd  out 	(55)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u96(7){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 219 220
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 220
;; lr  def 	 136 260 261 262 263 264 265
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135 219 220
;; live  gen 	 136 260 261 262 263 264 265
;; live  kill	
;; rd  in  	(48)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(7)
136, 185, 186, 187, 188, 189, 190
;; rd  kill	(8)
136, 137, 185, 186, 187, 188, 189, 190

;; Pred edge  5 [73.0%] 
(code_label 84 81 85 7 22 "" [1 uses])

(note 85 84 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 87 85 88 7 (set (reg:SI 260)
        (ashift:SI (reg/v:SI 135 [ apbclock ])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 119 {*arm_shiftsi3}
     (nil))

(insn 88 87 89 7 (set (reg:SI 261)
        (plus:SI (reg:SI 260)
            (reg/v:SI 135 [ apbclock ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 260)
        (expr_list:REG_DEAD (reg/v:SI 135 [ apbclock ])
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 135 [ apbclock ])
                    (const_int 5 [0x5]))
                (nil)))))

(insn 89 88 90 7 (set (reg:SI 262)
        (ashift:SI (reg:SI 261)
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 119 {*arm_shiftsi3}
     (nil))

(insn 90 89 91 7 (set (reg:SI 263)
        (plus:SI (reg:SI 261)
            (reg:SI 262))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 262)
        (expr_list:REG_DEAD (reg:SI 261)
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 135 [ apbclock ])
                    (const_int 25 [0x19]))
                (nil)))))

(insn 91 90 92 7 (set (reg:SI 265 [ USART_InitStruct_8(D)->USART_BaudRate ])
        (mem/s:SI (reg/v/f:SI 220 [ USART_InitStruct ]) [4 USART_InitStruct_8(D)->USART_BaudRate+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 220 [ USART_InitStruct ])
        (nil)))

(insn 92 91 93 7 (set (reg:SI 264)
        (ashift:SI (reg:SI 265 [ USART_InitStruct_8(D)->USART_BaudRate ])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 265 [ USART_InitStruct_8(D)->USART_BaudRate ])
        (nil)))

(insn 93 92 94 7 (set (reg/v:SI 136 [ integerdivider ])
        (udiv:SI (reg:SI 263)
            (reg:SI 264))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 133 {udivsi3}
     (expr_list:REG_DEAD (reg:SI 264)
        (expr_list:REG_DEAD (reg:SI 263)
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 219
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 136 219
;; rd  out 	(55)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185, 186, 187, 188, 189, 190


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u112(7){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 219
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 136 219
;; lr  def 	 24 [cc] 174 177 178 266 267 268 269 270 271 272 273
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 136 219
;; live  gen 	 24 [cc] 174 177 178 266 267 268 269 270 271 272 273
;; live  kill	
;; rd  in  	(62)
2, 4, 6, 8, 9, 11, 24, 29, 30, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190
;; rd  gen 	(12)
23, 148, 149, 150, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  kill	(17)
23, 24, 25, 26, 27, 28, 148, 149, 150, 191, 192, 193, 194, 195, 196, 197, 198

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 94 93 95 8 23 "" [0 uses])

(note 95 94 97 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 97 95 98 8 (set (reg:SI 268)
        (const_int 1374389535 [0x51eb851f])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:334 709 {*thumb2_movsi_insn}
     (nil))

(insn 98 97 99 8 (parallel [
            (set (reg:SI 267)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 136 [ integerdivider ]))
                            (zero_extend:DI (reg:SI 268)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:334 59 {*umulsi3_highpart_v6}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 136 [ integerdivider ]))
                    (const_int 1374389535 [0x51eb851f]))
                (const_int 32 [0x20])))
        (nil)))

(insn 99 98 100 8 (set (reg:SI 266)
        (lshiftrt:SI (reg:SI 267)
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:334 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 267)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 136 [ integerdivider ])
                (const_int 100 [0x64]))
            (nil))))

(insn 100 99 101 8 (set (reg/v:SI 174 [ tmpreg ])
        (ashift:SI (reg:SI 266)
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:334 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 266)
        (nil)))

(insn 101 100 102 8 (set (reg:SI 269)
        (lshiftrt:SI (reg/v:SI 174 [ tmpreg ])
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:337 119 {*arm_shiftsi3}
     (nil))

(insn 102 101 103 8 (set (reg:SI 271)
        (const_int 100 [0x64])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:337 709 {*thumb2_movsi_insn}
     (nil))

(insn 103 102 104 8 (set (reg:SI 270)
        (mult:SI (reg:SI 271)
            (reg:SI 269))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:337 34 {*arm_mulsi3_v6}
     (expr_list:REG_DEAD (reg:SI 271)
        (expr_list:REG_DEAD (reg:SI 269)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 269)
                    (const_int 100 [0x64]))
                (nil)))))

(insn 104 103 105 8 (set (reg/v:SI 177 [ fractionaldivider ])
        (minus:SI (reg/v:SI 136 [ integerdivider ])
            (reg:SI 270))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:337 29 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 270)
        (expr_list:REG_DEAD (reg/v:SI 136 [ integerdivider ])
            (nil))))

(insn 105 104 106 8 (set (reg:HI 272 [ USARTx_10(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 219 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:340 711 {*thumb2_movhi_insn}
     (nil))

(insn 106 105 107 8 (set (reg:SI 178 [ D.7926 ])
        (zero_extend:SI (reg:HI 272 [ USARTx_10(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:340 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 272 [ USARTx_10(D)->CR1 ])
        (nil)))

(insn 107 106 108 8 (set (reg:SI 273 [ D.7926 ])
        (sign_extend:SI (subreg/u:HI (reg:SI 178 [ D.7926 ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:340 165 {*arm_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 178 [ D.7926 ])
        (nil)))

(insn 108 107 109 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 273 [ D.7926 ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:340 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 273 [ D.7926 ])
        (nil)))

(jump_insn 109 108 110 8 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:340 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8088 [0x1f98])
            (nil)))
 -> 121)
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 174 177 219 268
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 219 268
;; rd  out 	(73)
2, 4, 6, 8, 9, 11, 23, 29, 30, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198


;; Succ edge  9 [19.1%]  (fallthru)
;; Succ edge  10 [80.9%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u133(7){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 174 177 219 268
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 268
;; lr  def 	 134 274 275 276 277 279
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 219 268
;; live  gen 	 134 274 275 276 277 279
;; live  kill	
;; rd  in  	(73)
2, 4, 6, 8, 9, 11, 23, 29, 30, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(6)
133, 199, 200, 201, 202, 203
;; rd  kill	(7)
132, 133, 199, 200, 201, 202, 203

;; Pred edge  8 [19.1%]  (fallthru)
(note 110 109 111 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 9 (set (reg:SI 274)
        (ashift:SI (reg/v:SI 177 [ fractionaldivider ])
            (const_int 3 [0x3]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 177 [ fractionaldivider ])
        (nil)))

(insn 112 111 115 9 (set (reg:SI 275)
        (plus:SI (reg:SI 274)
            (const_int 50 [0x32]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 274)
        (nil)))

(insn 115 112 116 9 (parallel [
            (set (reg:SI 277)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 275))
                            (zero_extend:DI (reg:SI 268)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 59 {*umulsi3_highpart_v6}
     (expr_list:REG_DEAD (reg:SI 275)
        (expr_list:REG_DEAD (reg:SI 268)
            (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 275))
                            (const_int 1374389535 [0x51eb851f]))
                        (const_int 32 [0x20])))
                (nil)))))

(insn 116 115 117 9 (set (reg:SI 276)
        (lshiftrt:SI (reg:SI 277)
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 277)
        (expr_list:REG_EQUAL (udiv:SI (reg:SI 275)
                (const_int 100 [0x64]))
            (nil))))

(insn 117 116 118 9 (set (reg:SI 279)
        (and:SI (reg:SI 276)
            (const_int 7 [0x7]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 276)
        (nil)))

(insn 118 117 121 9 (set (reg/v:SI 134 [ tmpreg ])
        (ior:SI (reg:SI 279)
            (reg/v:SI 174 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 279)
        (expr_list:REG_DEAD (reg/v:SI 174 [ tmpreg ])
            (nil))))
;; End of basic block 9 -> ( 11)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 219
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 219
;; rd  out 	(79)
2, 4, 6, 8, 9, 11, 23, 29, 30, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u147(7){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 174 177 219 268
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 268
;; lr  def 	 134 280 281 282 283 285
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 174 177 219 268
;; live  gen 	 134 280 281 282 283 285
;; live  kill	
;; rd  in  	(73)
2, 4, 6, 8, 9, 11, 23, 29, 30, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(6)
132, 204, 205, 206, 207, 208
;; rd  kill	(7)
132, 133, 204, 205, 206, 207, 208

;; Pred edge  8 [80.9%] 
(code_label 121 118 122 10 24 "" [1 uses])

(note 122 121 123 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 10 (set (reg:SI 280)
        (ashift:SI (reg/v:SI 177 [ fractionaldivider ])
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 177 [ fractionaldivider ])
        (nil)))

(insn 124 123 127 10 (set (reg:SI 281)
        (plus:SI (reg:SI 280)
            (const_int 50 [0x32]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 280)
        (nil)))

(insn 127 124 128 10 (parallel [
            (set (reg:SI 283)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 281))
                            (zero_extend:DI (reg:SI 268)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 59 {*umulsi3_highpart_v6}
     (expr_list:REG_DEAD (reg:SI 281)
        (expr_list:REG_DEAD (reg:SI 268)
            (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 281))
                            (const_int 1374389535 [0x51eb851f]))
                        (const_int 32 [0x20])))
                (nil)))))

(insn 128 127 129 10 (set (reg:SI 282)
        (lshiftrt:SI (reg:SI 283)
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 283)
        (expr_list:REG_EQUAL (udiv:SI (reg:SI 281)
                (const_int 100 [0x64]))
            (nil))))

(insn 129 128 130 10 (set (reg:SI 285)
        (and:SI (reg:SI 282)
            (const_int 15 [0xf]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 282)
        (nil)))

(insn 130 129 131 10 (set (reg/v:SI 134 [ tmpreg ])
        (ior:SI (reg:SI 285)
            (reg/v:SI 174 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 285)
        (expr_list:REG_DEAD (reg/v:SI 174 [ tmpreg ])
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 219
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 219
;; rd  out 	(79)
2, 4, 6, 8, 9, 11, 23, 29, 30, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 208


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(7){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 219
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 219
;; lr  def 	 188
;; live  in  	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 219
;; live  gen 	 188
;; live  kill	
;; rd  in  	(85)
2, 4, 6, 8, 9, 11, 23, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(1)
151
;; rd  kill	(1)
151

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 131 130 132 11 25 "" [0 uses])

(note 132 131 133 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 135 11 (set (reg:SI 188 [ D.7898 ])
        (zero_extend:SI (subreg:HI (reg/v:SI 134 [ tmpreg ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:350 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 135 133 0 11 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 219 [ USARTx ])
                (const_int 8 [0x8])) [5 USARTx_10(D)->BRR+0 S2 A16])
        (subreg/s/u:HI (reg:SI 188 [ D.7898 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:350 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 219 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 188 [ D.7898 ])
            (nil))))
;; End of basic block 11 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(86)
2, 4, 6, 8, 9, 11, 23, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_StructInit (USART_StructInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_StructInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,6u} r135={1d,1u} r137={1d,4u} r143={1d,1u} 
;;    total ref usage 34{13d,21u,0e} in 10{10 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 137[11,1] 143[12,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 137 143
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 137 143
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(4)
9, 10, 11, 12
;; rd  kill	(4)
9, 10, 11, 12
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 135 { d10(bb 2 insn 6) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 137 { d11(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 13
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 137 { d11(bb 2 insn 8) }
;;   UD chains for insn luid 6 uid 16
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 137 { d11(bb 2 insn 8) }
;;   UD chains for insn luid 8 uid 19
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 143 { d12(bb 2 insn 17) }
;;   UD chains for insn luid 9 uid 22
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 137 { d11(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(14){ d6(bb 0 insn -1) }u20(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 19 to worklist
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 134 [ USART_InitStruct ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 135) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ USART_InitStruct ]) in insn 10:
Processing use of (subreg (reg 137) 0) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 134 [ USART_InitStruct ]) in insn 13:
Processing use of (subreg (reg 137) 0) in insn 13:
Processing use of (reg 134 [ USART_InitStruct ]) in insn 16:
Processing use of (subreg (reg 137) 0) in insn 16:
Processing use of (reg 134 [ USART_InitStruct ]) in insn 19:
Processing use of (subreg (reg 143) 0) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 134 [ USART_InitStruct ]) in insn 22:
Processing use of (subreg (reg 137) 0) in insn 22:


USART_StructInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,6u} r135={1d,1u} r137={1d,4u} r143={1d,1u} 
;;    total ref usage 34{13d,21u,0e} in 10{10 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 137[11,1] 143[12,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 137 143
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 137 143
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(4)
9, 10, 11, 12
;; rd  kill	(4)
9, 10, 11, 12

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v/f:SI 134 [ USART_InitStruct ])
        (reg:SI 0 r0 [ USART_InitStruct ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:360 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USART_InitStruct ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 (set (reg:SI 135)
        (const_int 9600 [0x2580])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:362 709 {*thumb2_movsi_insn}
     (nil))

(insn 7 6 8 2 (set (mem/s:SI (reg/v/f:SI 134 [ USART_InitStruct ]) [4 USART_InitStruct_1(D)->USART_BaudRate+0 S4 A32])
        (reg:SI 135)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:362 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))

(insn 8 7 10 2 (set (reg:SI 137)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:363 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 8 13 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 134 [ USART_InitStruct ])
                (const_int 4 [0x4])) [5 USART_InitStruct_1(D)->USART_WordLength+0 S2 A32])
        (subreg:HI (reg:SI 137) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:363 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 10 16 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 134 [ USART_InitStruct ])
                (const_int 6 [0x6])) [5 USART_InitStruct_1(D)->USART_StopBits+0 S2 A16])
        (subreg:HI (reg:SI 137) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:364 711 {*thumb2_movhi_insn}
     (nil))

(insn 16 13 17 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 134 [ USART_InitStruct ])
                (const_int 8 [0x8])) [5 USART_InitStruct_1(D)->USART_Parity+0 S2 A32])
        (subreg:HI (reg:SI 137) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:365 711 {*thumb2_movhi_insn}
     (nil))

(insn 17 16 19 2 (set (reg:SI 143)
        (const_int 12 [0xc])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:366 709 {*thumb2_movsi_insn}
     (nil))

(insn 19 17 22 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 134 [ USART_InitStruct ])
                (const_int 10 [0xa])) [5 USART_InitStruct_1(D)->USART_Mode+0 S2 A16])
        (subreg:HI (reg:SI 143) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:366 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 22 19 0 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 134 [ USART_InitStruct ])
                (const_int 12 [0xc])) [5 USART_InitStruct_1(D)->USART_HardwareFlowControl+0 S2 A32])
        (subreg:HI (reg:SI 137) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:367 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_DEAD (reg/v/f:SI 134 [ USART_InitStruct ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_ClockInit (USART_ClockInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ClockInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} r146={1d,1u} r147={1d,2u} r148={1d,4u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} 
;;    total ref usage 53{24d,29u,0e} in 16{16 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 146[11,1] 147[12,1] 148[13,1] 149[14,1] 150[15,1] 151[16,1] 152[17,1] 154[18,1] 155[19,1] 157[20,1] 158[21,1] 159[22,1] 160[23,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136 146 147 148 149 150 151 152 154 155 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136 146 147 148 149 150 151 152 154 155 157 158 159 160
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;; rd  kill	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 147 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 149 { d14(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 11
;;      reg 148 { d13(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 12
;;      reg 148 { d13(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 13
;;      reg 150 { d15(bb 2 insn 11) }
;;      reg 151 { d16(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 15
;;      reg 148 { d13(bb 2 insn 3) }
;;   UD chains for insn luid 9 uid 16
;;      reg 152 { d17(bb 2 insn 13) }
;;      reg 154 { d18(bb 2 insn 15) }
;;   UD chains for insn luid 10 uid 18
;;      reg 148 { d13(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 19
;;      reg 155 { d19(bb 2 insn 16) }
;;      reg 157 { d20(bb 2 insn 18) }
;;   UD chains for insn luid 12 uid 20
;;      reg 158 { d21(bb 2 insn 19) }
;;   UD chains for insn luid 13 uid 21
;;      reg 136 { d10(bb 2 insn 10) }
;;      reg 159 { d22(bb 2 insn 20) }
;;   UD chains for insn luid 14 uid 22
;;      reg 160 { d23(bb 2 insn 21) }
;;   UD chains for insn luid 15 uid 24
;;      reg 146 { d11(bb 2 insn 22) }
;;      reg 147 { d12(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(7){ d4(bb 0 insn -1) }u26(13){ d5(bb 0 insn -1) }u27(14){ d6(bb 0 insn -1) }u28(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 24 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 147 [ USARTx ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 146 [ D.7891 ]) 0) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 147 [ USARTx ]) in insn 24:
Processing use of (subreg (reg 160) 0) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 136 [ tmpreg ]) in insn 21:
  Adding insn 10 to worklist
Processing use of (reg 159) in insn 21:
  Adding insn 20 to worklist
Processing use of (subreg (reg 158) 0) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 155) in insn 19:
  Adding insn 16 to worklist
Processing use of (subreg (reg 157 [ USART_ClockInitStruct_6(D)->USART_LastBit ]) 0) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 148 [ USART_ClockInitStruct ]) in insn 18:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 152) in insn 16:
  Adding insn 13 to worklist
Processing use of (subreg (reg 154 [ USART_ClockInitStruct_6(D)->USART_CPHA ]) 0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 148 [ USART_ClockInitStruct ]) in insn 15:
Processing use of (subreg (reg 150 [ USART_ClockInitStruct_6(D)->USART_CPOL ]) 0) in insn 13:
  Adding insn 11 to worklist
Processing use of (subreg (reg 151 [ USART_ClockInitStruct_6(D)->USART_Clock ]) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 148 [ USART_ClockInitStruct ]) in insn 12:
Processing use of (reg 148 [ USART_ClockInitStruct ]) in insn 11:
Processing use of (reg 134 [ D.7882 ]) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 149 [ USARTx_2(D)->CR2 ]) in insn 8:


USART_ClockInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} r146={1d,1u} r147={1d,2u} r148={1d,4u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} 
;;    total ref usage 53{24d,29u,0e} in 16{16 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 146[11,1] 147[12,1] 148[13,1] 149[14,1] 150[15,1] 151[16,1] 152[17,1] 154[18,1] 155[19,1] 157[20,1] 158[21,1] 159[22,1] 160[23,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136 146 147 148 149 150 151 152 154 155 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136 146 147 148 149 150 151 152 154 155 157 158 159 160
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;; rd  kill	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 147 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:380 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v/f:SI 148 [ USART_ClockInitStruct ])
        (reg:SI 1 r1 [ USART_ClockInitStruct ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:380 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_ClockInitStruct ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:HI 149 [ USARTx_2(D)->CR2 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 147 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:390 711 {*thumb2_movhi_insn}
     (nil))

(insn 8 7 10 2 (set (reg:SI 134 [ D.7882 ])
        (zero_extend:SI (reg:HI 149 [ USARTx_2(D)->CR2 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:390 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 149 [ USARTx_2(D)->CR2 ])
        (nil)))

(insn 10 8 11 2 (set (reg/v:SI 136 [ tmpreg ])
        (and:SI (reg:SI 134 [ D.7882 ])
            (const_int -3841 [0xfffffffffffff0ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:392 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7882 ])
        (nil)))

(insn 11 10 12 2 (set (reg:HI 150 [ USART_ClockInitStruct_6(D)->USART_CPOL ])
        (mem/s:HI (plus:SI (reg/v/f:SI 148 [ USART_ClockInitStruct ])
                (const_int 2 [0x2])) [5 USART_ClockInitStruct_6(D)->USART_CPOL+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 711 {*thumb2_movhi_insn}
     (nil))

(insn 12 11 13 2 (set (reg:HI 151 [ USART_ClockInitStruct_6(D)->USART_Clock ])
        (mem/s:HI (reg/v/f:SI 148 [ USART_ClockInitStruct ]) [5 USART_ClockInitStruct_6(D)->USART_Clock+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 12 15 2 (set (reg:SI 152)
        (ior:SI (subreg:SI (reg:HI 150 [ USART_ClockInitStruct_6(D)->USART_CPOL ]) 0)
            (subreg:SI (reg:HI 151 [ USART_ClockInitStruct_6(D)->USART_Clock ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:HI 151 [ USART_ClockInitStruct_6(D)->USART_Clock ])
        (expr_list:REG_DEAD (reg:HI 150 [ USART_ClockInitStruct_6(D)->USART_CPOL ])
            (nil))))

(insn 15 13 16 2 (set (reg:HI 154 [ USART_ClockInitStruct_6(D)->USART_CPHA ])
        (mem/s:HI (plus:SI (reg/v/f:SI 148 [ USART_ClockInitStruct ])
                (const_int 4 [0x4])) [5 USART_ClockInitStruct_6(D)->USART_CPHA+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 711 {*thumb2_movhi_insn}
     (nil))

(insn 16 15 18 2 (set (reg:SI 155)
        (ior:SI (reg:SI 152)
            (subreg:SI (reg:HI 154 [ USART_ClockInitStruct_6(D)->USART_CPHA ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:HI 154 [ USART_ClockInitStruct_6(D)->USART_CPHA ])
        (expr_list:REG_DEAD (reg:SI 152)
            (nil))))

(insn 18 16 19 2 (set (reg:HI 157 [ USART_ClockInitStruct_6(D)->USART_LastBit ])
        (mem/s:HI (plus:SI (reg/v/f:SI 148 [ USART_ClockInitStruct ])
                (const_int 6 [0x6])) [5 USART_ClockInitStruct_6(D)->USART_LastBit+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 148 [ USART_ClockInitStruct ])
        (nil)))

(insn 19 18 20 2 (set (reg:SI 158)
        (ior:SI (reg:SI 155)
            (subreg:SI (reg:HI 157 [ USART_ClockInitStruct_6(D)->USART_LastBit ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:HI 157 [ USART_ClockInitStruct_6(D)->USART_LastBit ])
        (expr_list:REG_DEAD (reg:SI 155)
            (nil))))

(insn 20 19 21 2 (set (reg:SI 159)
        (zero_extend:SI (subreg:HI (reg:SI 158) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 21 20 22 2 (set (reg:SI 160)
        (ior:SI (reg:SI 159)
            (reg/v:SI 136 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:398 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg/v:SI 136 [ tmpreg ])
            (nil))))

(insn 22 21 24 2 (set (reg:SI 146 [ D.7891 ])
        (zero_extend:SI (subreg:HI (reg:SI 160) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:401 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 24 22 0 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 147 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
        (subreg/s/u:HI (reg:SI 146 [ D.7891 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:401 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 147 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 146 [ D.7891 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_ClockStructInit (USART_ClockStructInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ClockStructInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,4u} r136={1d,4u} 
;;    total ref usage 28{11d,17u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 11
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 6) }
;;   UD chains for insn luid 4 uid 14
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 6) }
;;   UD chains for insn luid 5 uid 17
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 6) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u13(7){ d4(bb 0 insn -1) }u14(13){ d5(bb 0 insn -1) }u15(14){ d6(bb 0 insn -1) }u16(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 134 [ USART_ClockInitStruct ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (subreg (reg 136) 0) in insn 8:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ USART_ClockInitStruct ]) in insn 11:
Processing use of (subreg (reg 136) 0) in insn 11:
Processing use of (reg 134 [ USART_ClockInitStruct ]) in insn 14:
Processing use of (subreg (reg 136) 0) in insn 14:
Processing use of (reg 134 [ USART_ClockInitStruct ]) in insn 17:
Processing use of (subreg (reg 136) 0) in insn 17:


USART_ClockStructInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,4u} r136={1d,4u} 
;;    total ref usage 28{11d,17u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v/f:SI 134 [ USART_ClockInitStruct ])
        (reg:SI 0 r0 [ USART_ClockInitStruct ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:411 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USART_ClockInitStruct ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 8 2 (set (reg:SI 136)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:413 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 6 11 2 (set (mem/s:HI (reg/v/f:SI 134 [ USART_ClockInitStruct ]) [5 USART_ClockInitStruct_1(D)->USART_Clock+0 S2 A16])
        (subreg:HI (reg:SI 136) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:413 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 8 14 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 134 [ USART_ClockInitStruct ])
                (const_int 2 [0x2])) [5 USART_ClockInitStruct_1(D)->USART_CPOL+0 S2 A16])
        (subreg:HI (reg:SI 136) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:414 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 11 17 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 134 [ USART_ClockInitStruct ])
                (const_int 4 [0x4])) [5 USART_ClockInitStruct_1(D)->USART_CPHA+0 S2 A16])
        (subreg:HI (reg:SI 136) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:415 711 {*thumb2_movhi_insn}
     (nil))

(insn 17 14 0 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 134 [ USART_ClockInitStruct ])
                (const_int 6 [0x6])) [5 USART_ClockInitStruct_1(D)->USART_LastBit+0 S2 A16])
        (subreg:HI (reg:SI 136) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:416 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg/v/f:SI 134 [ USART_ClockInitStruct ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_Cmd (USART_Cmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_Cmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 140 { d16(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d10(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 141 { d17(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 15
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 138 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ d4(bb 0 insn -1) }u19(13){ d5(bb 0 insn -1) }u20(25){ d8(bb 0 insn -1) }u21(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 21
;;      reg 143 { d18(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 136 { d12(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 144 { d19(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 25
;;      reg 137 { d13(bb 4 insn 23) }
;;      reg 138 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ d4(bb 0 insn -1) }u29(13){ d5(bb 0 insn -1) }u30(25){ d8(bb 0 insn -1) }u31(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(14){ d6(bb 0 insn -1) }u35(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137 [ D.7881 ]) 0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 25:
Processing use of (subreg (reg 144) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.7880 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 143 [ USARTx_2(D)->CR1 ]) in insn 21:
Processing use of (reg 138 [ USARTx ]) in insn 10:
Processing use of (subreg (reg 135 [ D.7878 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 15:
Processing use of (subreg (reg 141) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.7877 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 140 [ USARTx_2(D)->CR1 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_Cmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:428 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:428 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:433 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:433 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 (set (reg:HI 140 [ USARTx_2(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:436 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 12 3 (set (reg:SI 134 [ D.7877 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_2(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:436 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_2(D)->CR1 ])
        (nil)))

(insn 12 11 13 3 (set (reg:SI 141)
        (ior:SI (reg:SI 134 [ D.7877 ])
            (const_int 8192 [0x2000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:436 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7877 ])
        (nil)))

(insn 13 12 15 3 (set (reg:SI 135 [ D.7878 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:436 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 13 18 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7878 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:436 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7878 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19

;; Pred edge  2 [61.0%] 
(code_label 18 15 19 4 32 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 (set (reg:HI 143 [ USARTx_2(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 20 22 4 (set (reg:SI 136 [ D.7880 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_2(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_2(D)->CR1 ])
        (nil)))

(insn 22 21 23 4 (set (reg:SI 144)
        (and:SI (reg:SI 136 [ D.7880 ])
            (const_int -8193 [0xffffffffffffdfff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ D.7880 ])
        (nil)))

(insn 23 22 25 4 (set (reg:SI 137 [ D.7881 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 25 23 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7881 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7881 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 25 29 5 31 "" [0 uses])

(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_SetPrescaler (USART_SetPrescaler)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SetPrescaler

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,4u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 142[16,1] 144[17,1] 145[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 138 139 140 141 142 144 145
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 138 139 140 141 142 144 145
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 141 { d15(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 142 { d16(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 12
;;      reg 135 { d10(bb 2 insn 10) }
;;      reg 139 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 13
;;      reg 139 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 14
;;      reg 144 { d17(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 136 { d11(bb 2 insn 14) }
;;      reg 140 { d14(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 16
;;      reg 145 { d18(bb 2 insn 15) }
;;   UD chains for insn luid 11 uid 18
;;      reg 138 { d12(bb 2 insn 16) }
;;      reg 139 { d13(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(7){ d4(bb 0 insn -1) }u20(13){ d5(bb 0 insn -1) }u21(14){ d6(bb 0 insn -1) }u22(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 139 [ USARTx ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 135 [ D.7871 ]) 0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 139 [ USARTx ]) in insn 12:
Processing use of (subreg (reg 142) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ D.7870 ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 141 [ USARTx_1(D)->GTPR ]) in insn 8:
Processing use of (reg 139 [ USARTx ]) in insn 13:
Processing use of (subreg (reg 138 [ D.7874 ]) 0) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 139 [ USARTx ]) in insn 18:
Processing use of (subreg (reg 145) 0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 136 [ D.7872 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 140 [ USART_Prescaler ]) in insn 15:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 144 [ USARTx_1(D)->GTPR ]) in insn 14:


USART_SetPrescaler

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,4u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 142[16,1] 144[17,1] 145[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 138 139 140 141 142 144 145
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 138 139 140 141 142 144 145
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 139 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:454 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ USART_Prescaler ])
        (reg:SI 1 r1 [ USART_Prescaler ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:454 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_Prescaler ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:HI 141 [ USARTx_1(D)->GTPR ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:459 711 {*thumb2_movhi_insn}
     (nil))

(insn 8 7 9 2 (set (reg:SI 134 [ D.7870 ])
        (zero_extend:SI (reg:HI 141 [ USARTx_1(D)->GTPR ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:459 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 141 [ USARTx_1(D)->GTPR ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 142)
        (and:SI (reg:SI 134 [ D.7870 ])
            (const_int -256 [0xffffffffffffff00]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:459 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7870 ])
        (nil)))

(insn 10 9 12 2 (set (reg:SI 135 [ D.7871 ])
        (zero_extend:SI (subreg:HI (reg:SI 142) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:459 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 12 10 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7871 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:459 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ D.7871 ])
        (nil)))

(insn 13 12 14 2 (set (reg:HI 144 [ USARTx_1(D)->GTPR ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:461 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 15 2 (set (reg:SI 136 [ D.7872 ])
        (zero_extend:SI (reg:HI 144 [ USARTx_1(D)->GTPR ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:461 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 144 [ USARTx_1(D)->GTPR ])
        (nil)))

(insn 15 14 16 2 (set (reg:SI 145)
        (ior:SI (reg/v:SI 140 [ USART_Prescaler ])
            (reg:SI 136 [ D.7872 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:461 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ USART_Prescaler ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.7872 ])
            (nil))))

(insn 16 15 18 2 (set (reg:SI 138 [ D.7874 ])
        (zero_extend:SI (subreg:HI (reg:SI 145) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:461 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 18 16 0 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
        (subreg/s/u:HI (reg:SI 138 [ D.7874 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:461 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 139 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 138 [ D.7874 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_OverSampling8Cmd (USART_OverSampling8Cmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_OverSampling8Cmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u,1e} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} 
;;    total ref usage 62{22d,38u,2e} in 16{16 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 142[18,1] 144[19,1] 145[20,1] 146[21,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141 142
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141 142
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(5)
10, 11, 16, 17, 18
;; rd  kill	(5)
10, 11, 16, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 140 { d16(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d10(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 142 { d18(bb 3 insn 12) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 4 uid 14
;;      reg 141 { d17(bb 3 insn 13) }
;;   UD chains for insn luid 5 uid 16
;;      reg 135 { d11(bb 3 insn 14) }
;;      reg 138 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(7){ d4(bb 0 insn -1) }u21(13){ d5(bb 0 insn -1) }u22(25){ d8(bb 0 insn -1) }u23(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 144 145 146
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 144 145 146
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(5)
12, 13, 19, 20, 21
;; rd  kill	(5)
12, 13, 19, 20, 21
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 21
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 22
;;      reg 144 { d19(bb 4 insn 21) }
;;   UD chains for insn luid 2 uid 23
;;      reg 136 { d12(bb 4 insn 22) }
;;   UD chains for insn luid 3 uid 24
;;      reg 146 { d21(bb 4 insn 23) }
;;   eq_note reg 136 { }
;;   UD chains for insn luid 4 uid 25
;;      reg 145 { d20(bb 4 insn 24) }
;;   UD chains for insn luid 5 uid 27
;;      reg 137 { d13(bb 4 insn 25) }
;;      reg 138 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }u35(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u36(7){ d4(bb 0 insn -1) }u37(13){ d5(bb 0 insn -1) }u38(14){ d6(bb 0 insn -1) }u39(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 10 to worklist
  Adding insn 27 to worklist
  Adding insn 21 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 21:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137 [ D.7869 ]) 0) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 27:
Processing use of (subreg (reg 145) 0) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 146) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 136 [ D.7868 ]) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 144 [ USARTx_2(D)->CR1 ]) in insn 22:
Processing use of (reg 138 [ USARTx ]) in insn 10:
Processing use of (subreg (reg 135 [ D.7866 ]) 0) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 16:
Processing use of (subreg (reg 141) 0) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 142) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.7865 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 140 [ USARTx_2(D)->CR1 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_OverSampling8Cmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u,1e} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} 
;;    total ref usage 62{22d,38u,2e} in 16{16 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 142[18,1] 144[19,1] 145[20,1] 146[21,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:475 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:475 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:480 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:480 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141 142
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141 142
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(5)
10, 11, 16, 17, 18
;; rd  kill	(5)
10, 11, 16, 17, 18

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 (set (reg:HI 140 [ USARTx_2(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 12 3 (set (reg:SI 134 [ D.7865 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_2(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_2(D)->CR1 ])
        (nil)))

(insn 12 11 13 3 (set (reg:SI 142)
        (not:SI (ashift:SI (reg:SI 134 [ D.7865 ])
                (const_int 17 [0x11])))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 122 {*not_shiftsi}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7865 ])
        (nil)))

(insn 13 12 14 3 (set (reg:SI 141)
        (not:SI (lshiftrt:SI (reg:SI 142)
                (const_int 17 [0x11])))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 122 {*not_shiftsi}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (ior:SI (reg:SI 134 [ D.7865 ])
                (const_int -32768 [0xffffffffffff8000]))
            (nil))))

(insn 14 13 16 3 (set (reg:SI 135 [ D.7866 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 16 14 19 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7866 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7866 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(7){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 144 145 146
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 144 145 146
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(5)
12, 13, 19, 20, 21
;; rd  kill	(5)
12, 13, 19, 20, 21

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 37 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 (set (reg:HI 144 [ USARTx_2(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 711 {*thumb2_movhi_insn}
     (nil))

(insn 22 21 23 4 (set (reg:SI 136 [ D.7868 ])
        (zero_extend:SI (reg:HI 144 [ USARTx_2(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 144 [ USARTx_2(D)->CR1 ])
        (nil)))

(insn 23 22 24 4 (set (reg:SI 146)
        (ashift:SI (reg:SI 136 [ D.7868 ])
            (const_int 17 [0x11]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 136 [ D.7868 ])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 145)
        (lshiftrt:SI (reg:SI 146)
            (const_int 17 [0x11]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ D.7868 ])
                (const_int 32767 [0x7fff]))
            (nil))))

(insn 25 24 27 4 (set (reg:SI 137 [ D.7869 ])
        (zero_extend:SI (subreg:HI (reg:SI 145) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 27 25 30 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7869 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7869 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 19, 20, 21


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(7){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 30 27 31 5 36 "" [0 uses])

(note 31 30 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_OneBitMethodCmd (USART_OneBitMethodCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_OneBitMethodCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 140 { d16(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d10(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 141 { d17(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 15
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 138 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ d4(bb 0 insn -1) }u19(13){ d5(bb 0 insn -1) }u20(25){ d8(bb 0 insn -1) }u21(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 21
;;      reg 143 { d18(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 136 { d12(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 144 { d19(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 25
;;      reg 137 { d13(bb 4 insn 23) }
;;      reg 138 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ d4(bb 0 insn -1) }u29(13){ d5(bb 0 insn -1) }u30(25){ d8(bb 0 insn -1) }u31(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(14){ d6(bb 0 insn -1) }u35(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137 [ D.7862 ]) 0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 25:
Processing use of (subreg (reg 144) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.7861 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 143 [ USARTx_2(D)->CR3 ]) in insn 21:
Processing use of (reg 138 [ USARTx ]) in insn 10:
Processing use of (subreg (reg 135 [ D.7859 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 15:
Processing use of (subreg (reg 141) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.7858 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 140 [ USARTx_2(D)->CR3 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_OneBitMethodCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:501 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:501 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:506 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:506 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 (set (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:509 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 12 3 (set (reg:SI 134 [ D.7858 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:509 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 12 11 13 3 (set (reg:SI 141)
        (ior:SI (reg:SI 134 [ D.7858 ])
            (const_int 2048 [0x800]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:509 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7858 ])
        (nil)))

(insn 13 12 15 3 (set (reg:SI 135 [ D.7859 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:509 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 13 18 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7859 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:509 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7859 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19

;; Pred edge  2 [61.0%] 
(code_label 18 15 19 4 41 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 (set (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 20 22 4 (set (reg:SI 136 [ D.7861 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 22 21 23 4 (set (reg:SI 144)
        (and:SI (reg:SI 136 [ D.7861 ])
            (const_int -2049 [0xfffffffffffff7ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ D.7861 ])
        (nil)))

(insn 23 22 25 4 (set (reg:SI 137 [ D.7862 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 25 23 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7862 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7862 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 25 29 5 40 "" [0 uses])

(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_SendData (USART_SendData)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SendData

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 30{14d,15u,1e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d11(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 138 { d13(bb 2 insn 7) }
;;   eq_note reg 136 { }
;;   UD chains for insn luid 4 uid 9
;;      reg 137 { d12(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 11
;;      reg 134 { d9(bb 2 insn 9) }
;;      reg 135 { d10(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(7){ d4(bb 0 insn -1) }u13(13){ d5(bb 0 insn -1) }u14(14){ d6(bb 0 insn -1) }u15(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (subreg (reg 134 [ D.7855 ]) 0) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 135 [ USARTx ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137) 0) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ Data ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_SendData

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 30{14d,15u,1e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 135 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:558 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 136 [ Data ])
        (reg:SI 1 r1 [ Data ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:558 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ Data ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:SI 138)
        (ashift:SI (reg/v:SI 136 [ Data ])
            (const_int 23 [0x17]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:564 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 136 [ Data ])
        (nil)))

(insn 8 7 9 2 (set (reg:SI 137)
        (lshiftrt:SI (reg:SI 138)
            (const_int 23 [0x17]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:564 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 136 [ Data ])
                (const_int 511 [0x1ff]))
            (nil))))

(insn 9 8 11 2 (set (reg:SI 134 [ D.7855 ])
        (zero_extend:SI (subreg:HI (reg:SI 137) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:564 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 11 9 0 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 135 [ USARTx ])
                (const_int 4 [0x4])) [5 USARTx_3(D)->DR+0 S2 A16])
        (subreg/s/u:HI (reg:SI 134 [ D.7855 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:564 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 135 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7855 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_ReceiveData (USART_ReceiveData)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ReceiveData

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u,1e} r137={1d,1u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 34{16d,17u,1e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 134[10,1] 137[11,1] 138[12,1] 140[13,1] 141[14,1] 142[15,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(7){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
1, 2, 3, 4, 5, 6, 7, 8, 9

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d5(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 134 137 138 140 141 142
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 137 138 140 141 142
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(7)
0, 10, 11, 12, 13, 14, 15
;; rd  kill	(8)
0, 1, 10, 11, 12, 13, 14, 15
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 137 { d11(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d12(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 134 { d10(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 141 { d14(bb 2 insn 8) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 140 { d13(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 15
;;      reg 142 { d15(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 18
;;      reg 0 { d0(bb 2 insn 15) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u13(0){ d0(bb 2 insn 15) }u14(7){ d5(bb 0 insn -1) }u15(13){ d6(bb 0 insn -1) }u16(14){ d7(bb 0 insn -1) }u17(25){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 15) }
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 6 to worklist
Finished finding needed instructions:
  Adding insn 15 to worklist
Processing use of (reg 142) in insn 15:
  Adding insn 10 to worklist
Processing use of (subreg (reg 140) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 141) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 134 [ D.7853 ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 138 [ USARTx_1(D)->DR ]) in insn 7:
Processing use of (reg 137 [ USARTx ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 18:


USART_ReceiveData

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u,1e} r137={1d,1u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 34{16d,17u,1e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 134[10,1] 137[11,1] 138[12,1] 140[13,1] 141[14,1] 142[15,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 134 137 138 140 141 142
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 137 138 140 141 142
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(7)
0, 10, 11, 12, 13, 14, 15
;; rd  kill	(8)
0, 1, 10, 11, 12, 13, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v/f:SI 137 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:574 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 (set (reg:HI 138 [ USARTx_1(D)->DR ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 137 [ USARTx ])
                (const_int 4 [0x4])) [5 USARTx_1(D)->DR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:579 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 137 [ USARTx ])
        (nil)))

(insn 7 6 8 2 (set (reg:SI 134 [ D.7853 ])
        (zero_extend:SI (reg:HI 138 [ USARTx_1(D)->DR ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:579 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 138 [ USARTx_1(D)->DR ])
        (nil)))

(insn 8 7 9 2 (set (reg:SI 141)
        (ashift:SI (reg:SI 134 [ D.7853 ])
            (const_int 23 [0x17]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:579 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7853 ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 140)
        (lshiftrt:SI (reg:SI 141)
            (const_int 23 [0x17]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:579 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (and:SI (reg:SI 134 [ D.7853 ])
                (const_int 511 [0x1ff]))
            (nil))))

(insn 10 9 15 2 (set (reg:SI 142)
        (zero_extend:SI (subreg:HI (reg:SI 140) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:579 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 15 10 18 2 (set (reg/i:SI 0 r0)
        (reg:SI 142)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:580 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 18 15 0 2 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:580 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_SetAddress (USART_SetAddress)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SetAddress

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,4u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 142[16,1] 144[17,1] 145[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 138 139 140 141 142 144 145
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 138 139 140 141 142 144 145
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 141 { d15(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 142 { d16(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 12
;;      reg 135 { d10(bb 2 insn 10) }
;;      reg 139 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 13
;;      reg 139 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 14
;;      reg 144 { d17(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 136 { d11(bb 2 insn 14) }
;;      reg 140 { d14(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 16
;;      reg 145 { d18(bb 2 insn 15) }
;;   UD chains for insn luid 11 uid 18
;;      reg 138 { d12(bb 2 insn 16) }
;;      reg 139 { d13(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(7){ d4(bb 0 insn -1) }u20(13){ d5(bb 0 insn -1) }u21(14){ d6(bb 0 insn -1) }u22(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 139 [ USARTx ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 135 [ D.7848 ]) 0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 139 [ USARTx ]) in insn 12:
Processing use of (subreg (reg 142) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ D.7847 ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 141 [ USARTx_1(D)->CR2 ]) in insn 8:
Processing use of (reg 139 [ USARTx ]) in insn 13:
Processing use of (subreg (reg 138 [ D.7851 ]) 0) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 139 [ USARTx ]) in insn 18:
Processing use of (subreg (reg 145) 0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 136 [ D.7849 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 140 [ USART_Address ]) in insn 15:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 144 [ USARTx_1(D)->CR2 ]) in insn 14:


USART_SetAddress

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,4u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 142[16,1] 144[17,1] 145[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 138 139 140 141 142 144 145
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 138 139 140 141 142 144 145
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 139 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:626 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ USART_Address ])
        (reg:SI 1 r1 [ USART_Address ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:626 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_Address ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:HI 141 [ USARTx_1(D)->CR2 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 711 {*thumb2_movhi_insn}
     (nil))

(insn 8 7 9 2 (set (reg:SI 134 [ D.7847 ])
        (zero_extend:SI (reg:HI 141 [ USARTx_1(D)->CR2 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 141 [ USARTx_1(D)->CR2 ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 142)
        (and:SI (reg:SI 134 [ D.7847 ])
            (const_int -16 [0xfffffffffffffff0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7847 ])
        (nil)))

(insn 10 9 12 2 (set (reg:SI 135 [ D.7848 ])
        (zero_extend:SI (subreg:HI (reg:SI 142) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 12 10 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7848 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ D.7848 ])
        (nil)))

(insn 13 12 14 2 (set (reg:HI 144 [ USARTx_1(D)->CR2 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:634 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 15 2 (set (reg:SI 136 [ D.7849 ])
        (zero_extend:SI (reg:HI 144 [ USARTx_1(D)->CR2 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:634 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 144 [ USARTx_1(D)->CR2 ])
        (nil)))

(insn 15 14 16 2 (set (reg:SI 145)
        (ior:SI (reg/v:SI 140 [ USART_Address ])
            (reg:SI 136 [ D.7849 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:634 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ USART_Address ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.7849 ])
            (nil))))

(insn 16 15 18 2 (set (reg:SI 138 [ D.7851 ])
        (zero_extend:SI (subreg:HI (reg:SI 145) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:634 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 18 16 0 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
        (subreg/s/u:HI (reg:SI 138 [ D.7851 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:634 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 139 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 138 [ D.7851 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_ReceiverWakeUpCmd (USART_ReceiverWakeUpCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_ReceiverWakeUpCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 140 { d16(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d10(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 141 { d17(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 15
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 138 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ d4(bb 0 insn -1) }u19(13){ d5(bb 0 insn -1) }u20(25){ d8(bb 0 insn -1) }u21(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 21
;;      reg 143 { d18(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 136 { d12(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 144 { d19(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 25
;;      reg 137 { d13(bb 4 insn 23) }
;;      reg 138 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ d4(bb 0 insn -1) }u29(13){ d5(bb 0 insn -1) }u30(25){ d8(bb 0 insn -1) }u31(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(14){ d6(bb 0 insn -1) }u35(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137 [ D.7846 ]) 0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 25:
Processing use of (subreg (reg 144) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.7845 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 143 [ USARTx_2(D)->CR1 ]) in insn 21:
Processing use of (reg 138 [ USARTx ]) in insn 10:
Processing use of (subreg (reg 135 [ D.7843 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 15:
Processing use of (subreg (reg 141) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.7842 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 140 [ USARTx_2(D)->CR1 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_ReceiverWakeUpCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:646 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:646 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:651 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:651 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 (set (reg:HI 140 [ USARTx_2(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:654 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 12 3 (set (reg:SI 134 [ D.7842 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_2(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:654 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_2(D)->CR1 ])
        (nil)))

(insn 12 11 13 3 (set (reg:SI 141)
        (ior:SI (reg:SI 134 [ D.7842 ])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:654 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7842 ])
        (nil)))

(insn 13 12 15 3 (set (reg:SI 135 [ D.7843 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:654 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 13 18 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7843 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:654 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7843 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19

;; Pred edge  2 [61.0%] 
(code_label 18 15 19 4 48 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 (set (reg:HI 143 [ USARTx_2(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 20 22 4 (set (reg:SI 136 [ D.7845 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_2(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_2(D)->CR1 ])
        (nil)))

(insn 22 21 23 4 (set (reg:SI 144)
        (and:SI (reg:SI 136 [ D.7845 ])
            (const_int -3 [0xfffffffffffffffd]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ D.7845 ])
        (nil)))

(insn 23 22 25 4 (set (reg:SI 137 [ D.7846 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 25 23 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7846 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7846 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 25 29 5 47 "" [0 uses])

(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_WakeUpConfig (USART_WakeUpConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_WakeUpConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138 139 140 141 143 144
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138 139 140 141 143 144
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 140 { d15(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 141 { d16(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 12
;;      reg 135 { d10(bb 2 insn 10) }
;;      reg 138 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 13
;;      reg 138 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 14
;;      reg 143 { d17(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 136 { d11(bb 2 insn 14) }
;;      reg 139 { d14(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 16
;;      reg 144 { d18(bb 2 insn 15) }
;;   UD chains for insn luid 11 uid 18
;;      reg 137 { d12(bb 2 insn 16) }
;;      reg 138 { d13(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(7){ d4(bb 0 insn -1) }u20(13){ d5(bb 0 insn -1) }u21(14){ d6(bb 0 insn -1) }u22(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 135 [ D.7837 ]) 0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 12:
Processing use of (subreg (reg 141) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ D.7836 ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 140 [ USARTx_1(D)->CR1 ]) in insn 8:
Processing use of (reg 138 [ USARTx ]) in insn 13:
Processing use of (subreg (reg 137 [ D.7839 ]) 0) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 18:
Processing use of (subreg (reg 144) 0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 136 [ D.7838 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 139 [ USART_WakeUp ]) in insn 15:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 143 [ USARTx_1(D)->CR1 ]) in insn 14:


USART_WakeUpConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138 139 140 141 143 144
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138 139 140 141 143 144
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:673 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ USART_WakeUp ])
        (reg:SI 1 r1 [ USART_WakeUp ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:673 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_WakeUp ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:HI 140 [ USARTx_1(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 711 {*thumb2_movhi_insn}
     (nil))

(insn 8 7 9 2 (set (reg:SI 134 [ D.7836 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_1(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_1(D)->CR1 ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 141)
        (and:SI (reg:SI 134 [ D.7836 ])
            (const_int -2049 [0xfffffffffffff7ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7836 ])
        (nil)))

(insn 10 9 12 2 (set (reg:SI 135 [ D.7837 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 12 10 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7837 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ D.7837 ])
        (nil)))

(insn 13 12 14 2 (set (reg:HI 143 [ USARTx_1(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:679 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 15 2 (set (reg:SI 136 [ D.7838 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_1(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:679 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_1(D)->CR1 ])
        (nil)))

(insn 15 14 16 2 (set (reg:SI 144)
        (ior:SI (reg/v:SI 139 [ USART_WakeUp ])
            (reg:SI 136 [ D.7838 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:679 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ USART_WakeUp ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.7838 ])
            (nil))))

(insn 16 15 18 2 (set (reg:SI 137 [ D.7839 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:679 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 18 16 0 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7839 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:679 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7839 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_LINBreakDetectLengthConfig (USART_LINBreakDetectLengthConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_LINBreakDetectLengthConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138 139 140 141 143 144
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138 139 140 141 143 144
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 140 { d15(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 141 { d16(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 12
;;      reg 135 { d10(bb 2 insn 10) }
;;      reg 138 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 13
;;      reg 138 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 14
;;      reg 143 { d17(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 136 { d11(bb 2 insn 14) }
;;      reg 139 { d14(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 16
;;      reg 144 { d18(bb 2 insn 15) }
;;   UD chains for insn luid 11 uid 18
;;      reg 137 { d12(bb 2 insn 16) }
;;      reg 138 { d13(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(7){ d4(bb 0 insn -1) }u20(13){ d5(bb 0 insn -1) }u21(14){ d6(bb 0 insn -1) }u22(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 135 [ D.7833 ]) 0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 12:
Processing use of (subreg (reg 141) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ D.7832 ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 140 [ USARTx_1(D)->CR2 ]) in insn 8:
Processing use of (reg 138 [ USARTx ]) in insn 13:
Processing use of (subreg (reg 137 [ D.7835 ]) 0) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 18:
Processing use of (subreg (reg 144) 0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 136 [ D.7834 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 139 [ USART_LINBreakDetectLength ]) in insn 15:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 143 [ USARTx_1(D)->CR2 ]) in insn 14:


USART_LINBreakDetectLengthConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138 139 140 141 143 144
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138 139 140 141 143 144
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:742 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ USART_LINBreakDetectLength ])
        (reg:SI 1 r1 [ USART_LINBreakDetectLength ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:742 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_LINBreakDetectLength ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:HI 140 [ USARTx_1(D)->CR2 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 711 {*thumb2_movhi_insn}
     (nil))

(insn 8 7 9 2 (set (reg:SI 134 [ D.7832 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_1(D)->CR2 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_1(D)->CR2 ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 141)
        (and:SI (reg:SI 134 [ D.7832 ])
            (const_int -33 [0xffffffffffffffdf]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7832 ])
        (nil)))

(insn 10 9 12 2 (set (reg:SI 135 [ D.7833 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 12 10 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7833 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ D.7833 ])
        (nil)))

(insn 13 12 14 2 (set (reg:HI 143 [ USARTx_1(D)->CR2 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:748 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 15 2 (set (reg:SI 136 [ D.7834 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_1(D)->CR2 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:748 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_1(D)->CR2 ])
        (nil)))

(insn 15 14 16 2 (set (reg:SI 144)
        (ior:SI (reg/v:SI 139 [ USART_LINBreakDetectLength ])
            (reg:SI 136 [ D.7834 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:748 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ USART_LINBreakDetectLength ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.7834 ])
            (nil))))

(insn 16 15 18 2 (set (reg:SI 137 [ D.7835 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:748 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 18 16 0 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7835 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:748 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7835 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_LINCmd (USART_LINCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_LINCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 140 { d16(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d10(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 141 { d17(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 15
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 138 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ d4(bb 0 insn -1) }u19(13){ d5(bb 0 insn -1) }u20(25){ d8(bb 0 insn -1) }u21(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 21
;;      reg 143 { d18(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 136 { d12(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 144 { d19(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 25
;;      reg 137 { d13(bb 4 insn 23) }
;;      reg 138 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ d4(bb 0 insn -1) }u29(13){ d5(bb 0 insn -1) }u30(25){ d8(bb 0 insn -1) }u31(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(14){ d6(bb 0 insn -1) }u35(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137 [ D.7831 ]) 0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 25:
Processing use of (subreg (reg 144) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.7830 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 143 [ USARTx_2(D)->CR2 ]) in insn 21:
Processing use of (reg 138 [ USARTx ]) in insn 10:
Processing use of (subreg (reg 135 [ D.7828 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 15:
Processing use of (subreg (reg 141) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.7827 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 140 [ USARTx_2(D)->CR2 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_LINCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:760 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:760 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:765 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:765 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 (set (reg:HI 140 [ USARTx_2(D)->CR2 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:768 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 12 3 (set (reg:SI 134 [ D.7827 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_2(D)->CR2 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:768 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_2(D)->CR2 ])
        (nil)))

(insn 12 11 13 3 (set (reg:SI 141)
        (ior:SI (reg:SI 134 [ D.7827 ])
            (const_int 16384 [0x4000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:768 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7827 ])
        (nil)))

(insn 13 12 15 3 (set (reg:SI 135 [ D.7828 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:768 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 13 18 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7828 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:768 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7828 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19

;; Pred edge  2 [61.0%] 
(code_label 18 15 19 4 54 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 (set (reg:HI 143 [ USARTx_2(D)->CR2 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 20 22 4 (set (reg:SI 136 [ D.7830 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_2(D)->CR2 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_2(D)->CR2 ])
        (nil)))

(insn 22 21 23 4 (set (reg:SI 144)
        (and:SI (reg:SI 136 [ D.7830 ])
            (const_int -16385 [0xffffffffffffbfff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ D.7830 ])
        (nil)))

(insn 23 22 25 4 (set (reg:SI 137 [ D.7831 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 25 23 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7831 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7831 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 25 29 5 53 "" [0 uses])

(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_SendBreak (USART_SendBreak)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SendBreak

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 136 { d11(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d12(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 134 { d9(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 138 { d13(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 11
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 136 { d11(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(7){ d4(bb 0 insn -1) }u12(13){ d5(bb 0 insn -1) }u13(14){ d6(bb 0 insn -1) }u14(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 6 to worklist
Finished finding needed instructions:
Processing use of (reg 136 [ USARTx ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 135 [ D.7824 ]) 0) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 136 [ USARTx ]) in insn 11:
Processing use of (subreg (reg 138) 0) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 134 [ D.7823 ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 137 [ USARTx_1(D)->CR1 ]) in insn 7:


USART_SendBreak

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v/f:SI 136 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:784 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 (set (reg:HI 137 [ USARTx_1(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 136 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:789 711 {*thumb2_movhi_insn}
     (nil))

(insn 7 6 8 2 (set (reg:SI 134 [ D.7823 ])
        (zero_extend:SI (reg:HI 137 [ USARTx_1(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:789 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 137 [ USARTx_1(D)->CR1 ])
        (nil)))

(insn 8 7 9 2 (set (reg:SI 138)
        (ior:SI (reg:SI 134 [ D.7823 ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:789 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7823 ])
        (nil)))

(insn 9 8 11 2 (set (reg:SI 135 [ D.7824 ])
        (zero_extend:SI (subreg:HI (reg:SI 138) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:789 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 11 9 0 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 136 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7824 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:789 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 136 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7824 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_HalfDuplexCmd (USART_HalfDuplexCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_HalfDuplexCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 140 { d16(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d10(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 141 { d17(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 15
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 138 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ d4(bb 0 insn -1) }u19(13){ d5(bb 0 insn -1) }u20(25){ d8(bb 0 insn -1) }u21(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 21
;;      reg 143 { d18(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 136 { d12(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 144 { d19(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 25
;;      reg 137 { d13(bb 4 insn 23) }
;;      reg 138 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ d4(bb 0 insn -1) }u29(13){ d5(bb 0 insn -1) }u30(25){ d8(bb 0 insn -1) }u31(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(14){ d6(bb 0 insn -1) }u35(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137 [ D.7822 ]) 0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 25:
Processing use of (subreg (reg 144) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.7821 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 143 [ USARTx_2(D)->CR3 ]) in insn 21:
Processing use of (reg 138 [ USARTx ]) in insn 10:
Processing use of (subreg (reg 135 [ D.7819 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 15:
Processing use of (subreg (reg 141) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.7818 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 140 [ USARTx_2(D)->CR3 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_HalfDuplexCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:837 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:837 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:842 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:842 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 (set (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:845 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 12 3 (set (reg:SI 134 [ D.7818 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:845 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 12 11 13 3 (set (reg:SI 141)
        (ior:SI (reg:SI 134 [ D.7818 ])
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:845 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7818 ])
        (nil)))

(insn 13 12 15 3 (set (reg:SI 135 [ D.7819 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:845 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 13 18 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7819 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:845 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7819 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19

;; Pred edge  2 [61.0%] 
(code_label 18 15 19 4 59 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 (set (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 20 22 4 (set (reg:SI 136 [ D.7821 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 22 21 23 4 (set (reg:SI 144)
        (and:SI (reg:SI 136 [ D.7821 ])
            (const_int -9 [0xfffffffffffffff7]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ D.7821 ])
        (nil)))

(insn 23 22 25 4 (set (reg:SI 137 [ D.7822 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 25 23 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7822 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7822 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 25 29 5 58 "" [0 uses])

(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_SetGuardTime (USART_SetGuardTime)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SetGuardTime

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r139={1d,1u} r140={1d,4u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} 
;;    total ref usage 44{20d,24u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 139[12,1] 140[13,1] 141[14,1] 142[15,1] 143[16,1] 145[17,1] 146[18,1] 148[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 139 140 141 142 143 145 146 148
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 139 140 141 142 143 145 146 148
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(11)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 142 { d15(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 143 { d16(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 12
;;      reg 135 { d10(bb 2 insn 10) }
;;      reg 140 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 13
;;      reg 140 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 14
;;      reg 145 { d17(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 141 { d14(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 17
;;      reg 136 { d11(bb 2 insn 14) }
;;      reg 146 { d18(bb 2 insn 15) }
;;   UD chains for insn luid 11 uid 18
;;      reg 148 { d19(bb 2 insn 17) }
;;   UD chains for insn luid 12 uid 20
;;      reg 139 { d12(bb 2 insn 18) }
;;      reg 140 { d13(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u20(7){ d4(bb 0 insn -1) }u21(13){ d5(bb 0 insn -1) }u22(14){ d6(bb 0 insn -1) }u23(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 140 [ USARTx ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 135 [ D.7811 ]) 0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 140 [ USARTx ]) in insn 12:
Processing use of (subreg (reg 143 [ D.7810 ]) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (subreg (reg 134 [ D.7810 ]) 0) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 142 [ USARTx_1(D)->GTPR ]) in insn 8:
Processing use of (reg 140 [ USARTx ]) in insn 13:
Processing use of (subreg (reg 139 [ D.7815 ]) 0) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 140 [ USARTx ]) in insn 20:
Processing use of (subreg (reg 148) 0) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 136 [ D.7812 ]) in insn 17:
  Adding insn 14 to worklist
Processing use of (reg 146) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 141 [ USART_GuardTime ]) in insn 15:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 145 [ USARTx_1(D)->GTPR ]) in insn 14:


USART_SetGuardTime

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r139={1d,1u} r140={1d,4u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} 
;;    total ref usage 44{20d,24u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 139[12,1] 140[13,1] 141[14,1] 142[15,1] 143[16,1] 145[17,1] 146[18,1] 148[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 139 140 141 142 143 145 146 148
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 139 140 141 142 143 145 146 148
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(11)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 140 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:921 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 141 [ USART_GuardTime ])
        (reg:SI 1 r1 [ USART_GuardTime ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:921 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_GuardTime ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:HI 142 [ USARTx_1(D)->GTPR ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 140 [ USARTx ])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:926 711 {*thumb2_movhi_insn}
     (nil))

(insn 8 7 9 2 (set (reg:SI 134 [ D.7810 ])
        (zero_extend:SI (reg:HI 142 [ USARTx_1(D)->GTPR ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:926 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 142 [ USARTx_1(D)->GTPR ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 143 [ D.7810 ])
        (zero_extend:SI (subreg:QI (reg:SI 134 [ D.7810 ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:926 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7810 ])
        (nil)))

(insn 10 9 12 2 (set (reg:SI 135 [ D.7811 ])
        (zero_extend:SI (subreg:HI (reg:SI 143 [ D.7810 ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:926 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 143 [ D.7810 ])
        (nil)))

(insn 12 10 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 140 [ USARTx ])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7811 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:926 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ D.7811 ])
        (nil)))

(insn 13 12 14 2 (set (reg:HI 145 [ USARTx_1(D)->GTPR ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 140 [ USARTx ])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 15 2 (set (reg:SI 136 [ D.7812 ])
        (zero_extend:SI (reg:HI 145 [ USARTx_1(D)->GTPR ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 145 [ USARTx_1(D)->GTPR ])
        (nil)))

(insn 15 14 17 2 (set (reg:SI 146)
        (ashift:SI (reg/v:SI 141 [ USART_GuardTime ])
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 141 [ USART_GuardTime ])
        (nil)))

(insn 17 15 18 2 (set (reg:SI 148)
        (ior:SI (reg:SI 136 [ D.7812 ])
            (reg:SI 146))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7812 ])
            (nil))))

(insn 18 17 20 2 (set (reg:SI 139 [ D.7815 ])
        (zero_extend:SI (subreg:HI (reg:SI 148) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 20 18 0 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 140 [ USARTx ])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
        (subreg/s/u:HI (reg:SI 139 [ D.7815 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 140 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 139 [ D.7815 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_SmartCardCmd (USART_SmartCardCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_SmartCardCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 140 { d16(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d10(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 141 { d17(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 15
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 138 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ d4(bb 0 insn -1) }u19(13){ d5(bb 0 insn -1) }u20(25){ d8(bb 0 insn -1) }u21(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 21
;;      reg 143 { d18(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 136 { d12(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 144 { d19(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 25
;;      reg 137 { d13(bb 4 insn 23) }
;;      reg 138 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ d4(bb 0 insn -1) }u29(13){ d5(bb 0 insn -1) }u30(25){ d8(bb 0 insn -1) }u31(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(14){ d6(bb 0 insn -1) }u35(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137 [ D.7809 ]) 0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 25:
Processing use of (subreg (reg 144) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.7808 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 143 [ USARTx_2(D)->CR3 ]) in insn 21:
Processing use of (reg 138 [ USARTx ]) in insn 10:
Processing use of (subreg (reg 135 [ D.7806 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 15:
Processing use of (subreg (reg 141) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.7805 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 140 [ USARTx_2(D)->CR3 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_SmartCardCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:940 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:940 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:944 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:944 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 (set (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:947 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 12 3 (set (reg:SI 134 [ D.7805 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:947 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 12 11 13 3 (set (reg:SI 141)
        (ior:SI (reg:SI 134 [ D.7805 ])
            (const_int 32 [0x20]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:947 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7805 ])
        (nil)))

(insn 13 12 15 3 (set (reg:SI 135 [ D.7806 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:947 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 13 18 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7806 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:947 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7806 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19

;; Pred edge  2 [61.0%] 
(code_label 18 15 19 4 64 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 (set (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 20 22 4 (set (reg:SI 136 [ D.7808 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 22 21 23 4 (set (reg:SI 144)
        (and:SI (reg:SI 136 [ D.7808 ])
            (const_int -33 [0xffffffffffffffdf]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ D.7808 ])
        (nil)))

(insn 23 22 25 4 (set (reg:SI 137 [ D.7809 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 25 23 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7809 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7809 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 25 29 5 63 "" [0 uses])

(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_SmartCardNACKCmd (USART_SmartCardNACKCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_SmartCardNACKCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 140 { d16(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d10(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 141 { d17(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 15
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 138 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ d4(bb 0 insn -1) }u19(13){ d5(bb 0 insn -1) }u20(25){ d8(bb 0 insn -1) }u21(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 21
;;      reg 143 { d18(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 136 { d12(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 144 { d19(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 25
;;      reg 137 { d13(bb 4 insn 23) }
;;      reg 138 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ d4(bb 0 insn -1) }u29(13){ d5(bb 0 insn -1) }u30(25){ d8(bb 0 insn -1) }u31(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(14){ d6(bb 0 insn -1) }u35(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137 [ D.7802 ]) 0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 25:
Processing use of (subreg (reg 144) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.7801 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 143 [ USARTx_2(D)->CR3 ]) in insn 21:
Processing use of (reg 138 [ USARTx ]) in insn 10:
Processing use of (subreg (reg 135 [ D.7799 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 15:
Processing use of (subreg (reg 141) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.7798 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 140 [ USARTx_2(D)->CR3 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_SmartCardNACKCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:965 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:965 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:969 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:969 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 (set (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:972 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 12 3 (set (reg:SI 134 [ D.7798 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:972 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 12 11 13 3 (set (reg:SI 141)
        (ior:SI (reg:SI 134 [ D.7798 ])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:972 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7798 ])
        (nil)))

(insn 13 12 15 3 (set (reg:SI 135 [ D.7799 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:972 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 13 18 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7799 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:972 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7799 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19

;; Pred edge  2 [61.0%] 
(code_label 18 15 19 4 68 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 (set (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 20 22 4 (set (reg:SI 136 [ D.7801 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 22 21 23 4 (set (reg:SI 144)
        (and:SI (reg:SI 136 [ D.7801 ])
            (const_int -17 [0xffffffffffffffef]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ D.7801 ])
        (nil)))

(insn 23 22 25 4 (set (reg:SI 137 [ D.7802 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 25 23 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7802 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7802 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 25 29 5 67 "" [0 uses])

(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_IrDAConfig (USART_IrDAConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_IrDAConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138 139 140 141 143 144
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138 139 140 141 143 144
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 140 { d15(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 141 { d16(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 12
;;      reg 135 { d10(bb 2 insn 10) }
;;      reg 138 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 13
;;      reg 138 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 14
;;      reg 143 { d17(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 136 { d11(bb 2 insn 14) }
;;      reg 139 { d14(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 16
;;      reg 144 { d18(bb 2 insn 15) }
;;   UD chains for insn luid 11 uid 18
;;      reg 137 { d12(bb 2 insn 16) }
;;      reg 138 { d13(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(7){ d4(bb 0 insn -1) }u20(13){ d5(bb 0 insn -1) }u21(14){ d6(bb 0 insn -1) }u22(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 135 [ D.7793 ]) 0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 12:
Processing use of (subreg (reg 141) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ D.7792 ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 140 [ USARTx_1(D)->CR3 ]) in insn 8:
Processing use of (reg 138 [ USARTx ]) in insn 13:
Processing use of (subreg (reg 137 [ D.7795 ]) 0) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 18:
Processing use of (subreg (reg 144) 0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 136 [ D.7794 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 139 [ USART_IrDAMode ]) in insn 15:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 143 [ USARTx_1(D)->CR3 ]) in insn 14:


USART_IrDAConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 42{19d,23u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138 139 140 141 143 144
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138 139 140 141 143 144
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1036 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ USART_IrDAMode ])
        (reg:SI 1 r1 [ USART_IrDAMode ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1036 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_IrDAMode ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:HI 140 [ USARTx_1(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 711 {*thumb2_movhi_insn}
     (nil))

(insn 8 7 9 2 (set (reg:SI 134 [ D.7792 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_1(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_1(D)->CR3 ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 141)
        (and:SI (reg:SI 134 [ D.7792 ])
            (const_int -5 [0xfffffffffffffffb]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7792 ])
        (nil)))

(insn 10 9 12 2 (set (reg:SI 135 [ D.7793 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 12 10 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7793 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ D.7793 ])
        (nil)))

(insn 13 12 14 2 (set (reg:HI 143 [ USARTx_1(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1042 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 15 2 (set (reg:SI 136 [ D.7794 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_1(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1042 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_1(D)->CR3 ])
        (nil)))

(insn 15 14 16 2 (set (reg:SI 144)
        (ior:SI (reg/v:SI 139 [ USART_IrDAMode ])
            (reg:SI 136 [ D.7794 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1042 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ USART_IrDAMode ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.7794 ])
            (nil))))

(insn 16 15 18 2 (set (reg:SI 137 [ D.7795 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1042 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 18 16 0 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7795 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1042 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7795 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_IrDACmd (USART_IrDACmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_IrDACmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 140 { d16(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d10(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 141 { d17(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 15
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 138 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ d4(bb 0 insn -1) }u19(13){ d5(bb 0 insn -1) }u20(25){ d8(bb 0 insn -1) }u21(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 138 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 21
;;      reg 143 { d18(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 136 { d12(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 144 { d19(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 25
;;      reg 137 { d13(bb 4 insn 23) }
;;      reg 138 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ d4(bb 0 insn -1) }u29(13){ d5(bb 0 insn -1) }u30(25){ d8(bb 0 insn -1) }u31(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(14){ d6(bb 0 insn -1) }u35(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ USARTx ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137 [ D.7791 ]) 0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 25:
Processing use of (subreg (reg 144) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.7790 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 143 [ USARTx_2(D)->CR3 ]) in insn 21:
Processing use of (reg 138 [ USARTx ]) in insn 10:
Processing use of (subreg (reg 135 [ D.7788 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 138 [ USARTx ]) in insn 15:
Processing use of (subreg (reg 141) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.7787 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 140 [ USARTx_2(D)->CR3 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_IrDACmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 56{20d,36u,0e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 139[15,1] 140[16,1] 141[17,1] 143[18,1] 144[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1054 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1054 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1059 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1059 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 134 135 140 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 134 135 140 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
10, 11, 16, 17
;; rd  kill	(4)
10, 11, 16, 17

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 (set (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1062 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 12 3 (set (reg:SI 134 [ D.7787 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1062 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 12 11 13 3 (set (reg:SI 141)
        (ior:SI (reg:SI 134 [ D.7787 ])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1062 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7787 ])
        (nil)))

(insn 13 12 15 3 (set (reg:SI 135 [ D.7788 ])
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1062 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 13 18 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7788 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1062 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7788 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 136 137 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 136 137 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 18, 19
;; rd  kill	(4)
12, 13, 18, 19

;; Pred edge  2 [61.0%] 
(code_label 18 15 19 4 73 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 (set (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 20 22 4 (set (reg:SI 136 [ D.7790 ])
        (zero_extend:SI (reg:HI 143 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 143 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 22 21 23 4 (set (reg:SI 144)
        (and:SI (reg:SI 136 [ D.7790 ])
            (const_int -3 [0xfffffffffffffffd]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ D.7790 ])
        (nil)))

(insn 23 22 25 4 (set (reg:SI 137 [ D.7791 ])
        (zero_extend:SI (subreg:HI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 25 23 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 138 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 137 [ D.7791 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.7791 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(7){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 25 29 5 72 "" [0 uses])

(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_DMACmd (USART_DMACmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_DMACmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,4u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} 
;;    total ref usage 62{22d,40u,0e} in 16{16 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 142[17,1] 143[18,1] 145[19,1] 146[20,1] 148[21,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(4)
7, 14, 15, 16
;; rd  kill	(4)
7, 14, 15, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 141 { d16(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 9
;;      reg 24 { d7(bb 2 insn 8) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ d4(bb 0 insn -1) }u10(13){ d5(bb 0 insn -1) }u11(25){ d8(bb 0 insn -1) }u12(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 134 135 142 143
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 134 135 142 143
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16
;; rd  gen 	(4)
10, 11, 17, 18
;; rd  kill	(4)
10, 11, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 11
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 12
;;      reg 142 { d17(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 14
;;      reg 143 { d18(bb 3 insn 13) }
;;   UD chains for insn luid 4 uid 16
;;      reg 135 { d11(bb 3 insn 14) }
;;      reg 139 { d14(bb 2 insn 2) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(7){ d4(bb 0 insn -1) }u21(13){ d5(bb 0 insn -1) }u22(25){ d8(bb 0 insn -1) }u23(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 136 138 145 146 148
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 136 138 145 146 148
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16
;; rd  gen 	(5)
12, 13, 19, 20, 21
;; rd  kill	(5)
12, 13, 19, 20, 21
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 21
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 22
;;      reg 145 { d19(bb 4 insn 21) }
;;   UD chains for insn luid 2 uid 23
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 22) }
;;      reg 146 { d20(bb 4 insn 23) }
;;   UD chains for insn luid 4 uid 26
;;      reg 148 { d21(bb 4 insn 25) }
;;   UD chains for insn luid 5 uid 28
;;      reg 138 { d13(bb 4 insn 26) }
;;      reg 139 { d14(bb 2 insn 2) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }u35(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u36(7){ d4(bb 0 insn -1) }u37(13){ d5(bb 0 insn -1) }u38(14){ d6(bb 0 insn -1) }u39(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 16 to worklist
  Adding insn 11 to worklist
  Adding insn 28 to worklist
  Adding insn 21 to worklist
Finished finding needed instructions:
Processing use of (reg 139 [ USARTx ]) in insn 21:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 138 [ D.7784 ]) 0) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 139 [ USARTx ]) in insn 28:
Processing use of (subreg (reg 148) 0) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 136 [ D.7782 ]) in insn 25:
  Adding insn 22 to worklist
Processing use of (reg 146) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 140 [ USART_DMAReq ]) in insn 23:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 145 [ USARTx_2(D)->CR3 ]) in insn 22:
Processing use of (reg 139 [ USARTx ]) in insn 11:
Processing use of (subreg (reg 135 [ D.7780 ]) 0) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 139 [ USARTx ]) in insn 16:
Processing use of (subreg (reg 143) 0) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134 [ D.7779 ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 140 [ USART_DMAReq ]) in insn 13:
Processing use of (reg 142 [ USARTx_2(D)->CR3 ]) in insn 12:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 141 [ NewState ]) in insn 8:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:


USART_DMACmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,4u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} 
;;    total ref usage 62{22d,40u,0e} in 16{16 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 142[17,1] 143[18,1] 145[19,1] 146[20,1] 148[21,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(4)
7, 14, 15, 16
;; rd  kill	(4)
7, 14, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (reg/v/f:SI 139 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1100 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ USART_DMAReq ])
        (reg:SI 1 r1 [ USART_DMAReq ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1100 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_DMAReq ])
        (nil)))

(insn 4 3 5 2 (set (reg/v:SI 141 [ NewState ])
        (reg:SI 2 r2 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1100 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 2 r2 [ NewState ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1106 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 141 [ NewState ])
        (nil)))

(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1106 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 134 135 142 143
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 134 135 142 143
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16
;; rd  gen 	(4)
10, 11, 17, 18
;; rd  kill	(4)
10, 11, 17, 18

;; Pred edge  2 [39.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 (set (reg:HI 142 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1110 711 {*thumb2_movhi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7779 ])
        (zero_extend:SI (reg:HI 142 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1110 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 142 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 13 12 14 3 (set (reg:SI 143)
        (ior:SI (reg/v:SI 140 [ USART_DMAReq ])
            (reg:SI 134 [ D.7779 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1110 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ USART_DMAReq ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7779 ])
            (nil))))

(insn 14 13 16 3 (set (reg:SI 135 [ D.7780 ])
        (zero_extend:SI (subreg:HI (reg:SI 143) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1110 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 16 14 19 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.7780 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1110 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 139 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.7780 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(7){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 136 138 145 146 148
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 136 138 145 146 148
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16
;; rd  gen 	(5)
12, 13, 19, 20, 21
;; rd  kill	(5)
12, 13, 19, 20, 21

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 77 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 (set (reg:HI 145 [ USARTx_2(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 711 {*thumb2_movhi_insn}
     (nil))

(insn 22 21 23 4 (set (reg:SI 136 [ D.7782 ])
        (zero_extend:SI (reg:HI 145 [ USARTx_2(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 145 [ USARTx_2(D)->CR3 ])
        (nil)))

(insn 23 22 25 4 (set (reg:SI 146)
        (not:SI (reg/v:SI 140 [ USART_DMAReq ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 140 [ USART_DMAReq ])
        (nil)))

(insn 25 23 26 4 (set (reg:SI 148)
        (and:SI (reg:SI 136 [ D.7782 ])
            (reg:SI 146))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7782 ])
            (nil))))

(insn 26 25 28 4 (set (reg:SI 138 [ D.7784 ])
        (zero_extend:SI (subreg:HI (reg:SI 148) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 28 26 31 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 139 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (subreg/s/u:HI (reg:SI 138 [ D.7784 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 139 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 138 [ D.7784 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(7){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 76 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_ITConfig (USART_ITConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)


USART_ITConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r7={1d,10u} r13={1d,10u} r14={1d,1u} r24={3d,3u} r25={1d,10u} r26={1d,9u} r134={3d,4u} r138={1d,2u} r142={1d,2u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,3u} r151={1d,2u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u,1e} r156={1d,1u} r157={1d,1u} 
;;    total ref usage 99{29d,69u,1e} in 25{25 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7, 8, 9
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,3] 25[10,1] 26[11,1] 134[12,3] 138[15,1] 142[16,1] 144[17,1] 145[18,1] 147[19,1] 149[20,1] 150[21,1] 151[22,1] 152[23,1] 153[24,1] 154[25,1] 155[26,1] 156[27,1] 157[28,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 10, 11
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 10, 11
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 10, 11

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d10(bb 0 insn -1) }u3(26){ d11(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 142 150 151 152 153 154 155 156
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 142 150 151 152 153 154 155 156
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 10, 11
;; rd  gen 	(10)
9, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  kill	(12)
7, 8, 9, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 150 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 150 152
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 151 { d22(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 10
;;      reg 153 { d24(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 154 { d25(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 151 { d22(bb 2 insn 3) }
;;   UD chains for insn luid 8 uid 14
;;      reg 155 { d26(bb 2 insn 12) }
;;      reg 156 { d27(bb 2 insn 13) }
;;   eq_note reg 155 { }
;;   UD chains for insn luid 9 uid 15
;;      reg 138 { d15(bb 2 insn 11) }
;;   UD chains for insn luid 10 uid 16
;;      reg 24 { d9(bb 2 insn 15) }

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(7){ d4(bb 0 insn -1) }u17(13){ d5(bb 0 insn -1) }u18(25){ d10(bb 0 insn -1) }u19(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 134
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; live  gen 	 134
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
14
;; rd  kill	(3)
12, 13, 14
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 150 { d21(bb 2 insn 2) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(7){ d4(bb 0 insn -1) }u22(13){ d5(bb 0 insn -1) }u23(25){ d10(bb 0 insn -1) }u24(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 150 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
8
;; rd  kill	(3)
7, 8, 9
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 23
;;      reg 138 { d15(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 24
;;      reg 24 { d8(bb 4 insn 23) }

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d10(bb 0 insn -1) }u30(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 134
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; live  gen 	 134
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
13
;; rd  kill	(3)
12, 13, 14
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 15, 16, 21, 22, 23, 24, 25, 26, 27
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 150 { d21(bb 2 insn 2) }

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(7){ d4(bb 0 insn -1) }u33(13){ d5(bb 0 insn -1) }u34(25){ d10(bb 0 insn -1) }u35(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 134
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; live  gen 	 134
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
12
;; rd  kill	(3)
12, 13, 14
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 15, 16, 21, 22, 23, 24, 25, 26, 27
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 31
;;      reg 150 { d21(bb 2 insn 2) }

( 3 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(7){ d4(bb 0 insn -1) }u38(13){ d5(bb 0 insn -1) }u39(25){ d10(bb 0 insn -1) }u40(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
7
;; rd  kill	(3)
7, 8, 9
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; rd  out 	(22)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 152 { d23(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 35
;;      reg 24 { d7(bb 7 insn 34) }

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(7){ d4(bb 0 insn -1) }u44(13){ d5(bb 0 insn -1) }u45(25){ d10(bb 0 insn -1) }u46(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; lr  def 	 144 145
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; live  gen 	 144 145
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(2)
17, 18
;; rd  kill	(2)
17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 134 { d14(bb 3 insn 18) d13(bb 5 insn 26) d12(bb 6 insn 31) }
;;   UD chains for insn luid 1 uid 39
;;      reg 142 { d16(bb 2 insn 14) }
;;      reg 144 { d17(bb 8 insn 38) }
;;   UD chains for insn luid 2 uid 40
;;      reg 134 { d14(bb 3 insn 18) d13(bb 5 insn 26) d12(bb 6 insn 31) }
;;      reg 145 { d18(bb 8 insn 39) }

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(7){ d4(bb 0 insn -1) }u53(13){ d5(bb 0 insn -1) }u54(25){ d10(bb 0 insn -1) }u55(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; lr  def 	 147 149 157
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; live  gen 	 147 149 157
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(3)
19, 20, 28
;; rd  kill	(3)
19, 20, 28
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(25)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 134 { d14(bb 3 insn 18) d13(bb 5 insn 26) d12(bb 6 insn 31) }
;;   UD chains for insn luid 1 uid 47
;;      reg 142 { d16(bb 2 insn 14) }
;;   UD chains for insn luid 2 uid 48
;;      reg 147 { d19(bb 9 insn 46) }
;;      reg 157 { d28(bb 9 insn 47) }
;;   UD chains for insn luid 3 uid 49
;;      reg 134 { d14(bb 3 insn 18) d13(bb 5 insn 26) d12(bb 6 insn 31) }
;;      reg 149 { d20(bb 9 insn 48) }

( 9 8 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u62(7){ d4(bb 0 insn -1) }u63(13){ d5(bb 0 insn -1) }u64(25){ d10(bb 0 insn -1) }u65(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u66(7){ d4(bb 0 insn -1) }u67(13){ d5(bb 0 insn -1) }u68(14){ d6(bb 0 insn -1) }u69(25){ d10(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(27)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 24 to worklist
  Adding insn 35 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 49 to worklist
  Adding insn 46 to worklist
Finished finding needed instructions:
Processing use of (reg 134 [ usartxbase ]) in insn 46:
  Adding insn 18 to worklist
  Adding insn 26 to worklist
  Adding insn 31 to worklist
Processing use of (reg 150 [ USARTx ]) in insn 31:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 150 [ USARTx ]) in insn 26:
Processing use of (reg 150 [ USARTx ]) in insn 18:
Processing use of (reg 134 [ usartxbase ]) in insn 49:
Processing use of (reg 149 [ D.7776 ]) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 147 [ D.7774 ]) in insn 48:
Processing use of (reg 157) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 142 [ itmask ]) in insn 47:
  Adding insn 14 to worklist
Processing use of (reg 155) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 156) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 151 [ USART_IT ]) in insn 12:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 134 [ usartxbase ]) in insn 38:
Processing use of (reg 134 [ usartxbase ]) in insn 40:
Processing use of (reg 145 [ D.7772 ]) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 142 [ itmask ]) in insn 39:
Processing use of (reg 144 [ D.7771 ]) in insn 39:
Processing use of (reg 24 cc) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 152 [ NewState ]) in insn 34:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 138 [ usartreg ]) in insn 23:
  Adding insn 11 to worklist
Processing use of (subreg (reg 154) 0) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 153 [ USART_IT ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (subreg (reg 151 [ USART_IT ]) 0) in insn 9:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 138 [ usartreg ]) in insn 15:


USART_ITConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r7={1d,10u} r13={1d,10u} r14={1d,1u} r24={3d,3u} r25={1d,10u} r26={1d,9u} r134={3d,4u} r138={1d,2u} r142={1d,2u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,3u} r151={1d,2u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u,1e} r156={1d,1u} r157={1d,1u} 
;;    total ref usage 99{29d,69u,1e} in 25{25 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7, 8, 9
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,3] 25[10,1] 26[11,1] 134[12,3] 138[15,1] 142[16,1] 144[17,1] 145[18,1] 147[19,1] 149[20,1] 150[21,1] 151[22,1] 152[23,1] 153[24,1] 154[25,1] 155[26,1] 156[27,1] 157[28,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 142 150 151 152 153 154 155 156
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 142 150 151 152 153 154 155 156
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 10, 11
;; rd  gen 	(10)
9, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  kill	(12)
7, 8, 9, 15, 16, 21, 22, 23, 24, 25, 26, 27

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (reg/v/f:SI 150 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1232 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 151 [ USART_IT ])
        (reg:SI 1 r1 [ USART_IT ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1232 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_IT ])
        (nil)))

(insn 4 3 5 2 (set (reg/v:SI 152 [ NewState ])
        (reg:SI 2 r2 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1232 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 2 r2 [ NewState ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 (set (reg:SI 153 [ USART_IT ])
        (zero_extend:SI (subreg:QI (reg/v:SI 151 [ USART_IT ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1249 730 {thumb2_zero_extendqisi2_v6}
     (nil))

(insn 10 9 11 2 (set (reg:SI 154)
        (lshiftrt:SI (reg:SI 153 [ USART_IT ])
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1249 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 153 [ USART_IT ])
        (nil)))

(insn 11 10 12 2 (set (reg/v:SI 138 [ usartreg ])
        (zero_extend:SI (subreg:QI (reg:SI 154) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1249 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(insn 12 11 13 2 (set (reg:SI 155)
        (and:SI (reg/v:SI 151 [ USART_IT ])
            (const_int 31 [0x1f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1252 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 151 [ USART_IT ])
        (nil)))

(insn 13 12 14 2 (set (reg:SI 156)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1253 709 {*thumb2_movsi_insn}
     (nil))

(insn 14 13 15 2 (set (reg/v:SI 142 [ itmask ])
        (ashift:SI (reg:SI 156)
            (reg:SI 155))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1253 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_DEAD (reg:SI 155)
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 155))
                (nil)))))

(insn 15 14 16 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ usartreg ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1255 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1255 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil)))
 -> 21)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 150 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 150 152
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(7){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 134
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; live  gen 	 134
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
14
;; rd  kill	(3)
12, 13, 14

;; Pred edge  2 [28.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 21 3 (set (reg/v:SI 134 [ usartxbase ])
        (plus:SI (reg/v/f:SI 150 [ USARTx ])
            (const_int 12 [0xc]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1257 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v/f:SI 150 [ USARTx ])
        (nil)))
;; End of basic block 3 -> ( 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(7){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 150 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
8
;; rd  kill	(3)
7, 8, 9

;; Pred edge  2 [72.0%] 
(code_label 21 18 22 4 81 "" [1 uses])

(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ usartreg ])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1259 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 138 [ usartreg ])
        (nil)))

(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1259 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil)))
 -> 29)
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 134
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; live  gen 	 134
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
13
;; rd  kill	(3)
12, 13, 14

;; Pred edge  4 [28.0%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 29 5 (set (reg/v:SI 134 [ usartxbase ])
        (plus:SI (reg/v/f:SI 150 [ USARTx ])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1261 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v/f:SI 150 [ USARTx ])
        (nil)))
;; End of basic block 5 -> ( 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 15, 16, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(7){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 134
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150 152
;; live  gen 	 134
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
12
;; rd  kill	(3)
12, 13, 14

;; Pred edge  4 [72.0%] 
(code_label 29 26 30 6 83 "" [1 uses])

(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 (set (reg/v:SI 134 [ usartxbase ])
        (plus:SI (reg/v/f:SI 150 [ USARTx ])
            (const_int 20 [0x14]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1265 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v/f:SI 150 [ USARTx ])
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 15, 16, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(7){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(1)
7
;; rd  kill	(3)
7, 8, 9

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 32 31 33 7 82 "" [0 uses])

(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 7 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 152 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1267 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 152 [ NewState ])
        (nil)))

(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1267 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 43)
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; rd  out 	(22)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(7){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; lr  def 	 144 145
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; live  gen 	 144 145
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(2)
17, 18
;; rd  kill	(2)
17, 18

;; Pred edge  7 [39.0%]  (fallthru)
(note 36 35 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 36 39 8 (set (reg:SI 144 [ D.7771 ])
        (mem/v:SI (reg/v:SI 134 [ usartxbase ]) [4 *usartxbase.3_21+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1269 709 {*thumb2_movsi_insn}
     (nil))

(insn 39 38 40 8 (set (reg:SI 145 [ D.7772 ])
        (ior:SI (reg:SI 144 [ D.7771 ])
            (reg/v:SI 142 [ itmask ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1269 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144 [ D.7771 ])
        (expr_list:REG_DEAD (reg/v:SI 142 [ itmask ])
            (nil))))

(insn 40 39 43 8 (set (mem/v:SI (reg/v:SI 134 [ usartxbase ]) [4 *usartxbase.3_21+0 S4 A32])
        (reg:SI 145 [ D.7772 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1269 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 145 [ D.7772 ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ usartxbase ])
            (nil))))
;; End of basic block 8 -> ( 10)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(7){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; lr  def 	 147 149 157
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; live  gen 	 147 149 157
;; live  kill	
;; rd  in  	(22)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(3)
19, 20, 28
;; rd  kill	(3)
19, 20, 28

;; Pred edge  7 [61.0%] 
(code_label 43 40 44 9 84 "" [1 uses])

(note 44 43 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 9 (set (reg:SI 147 [ D.7774 ])
        (mem/v:SI (reg/v:SI 134 [ usartxbase ]) [4 *usartxbase.3_25+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1273 709 {*thumb2_movsi_insn}
     (nil))

(insn 47 46 48 9 (set (reg:SI 157)
        (not:SI (reg/v:SI 142 [ itmask ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1273 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 142 [ itmask ])
        (nil)))

(insn 48 47 49 9 (set (reg:SI 149 [ D.7776 ])
        (and:SI (reg:SI 147 [ D.7774 ])
            (reg:SI 157))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1273 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 147 [ D.7774 ])
            (nil))))

(insn 49 48 52 9 (set (mem/v:SI (reg/v:SI 134 [ usartxbase ]) [4 *usartxbase.3_25+0 S4 A32])
        (reg:SI 149 [ D.7776 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1273 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 149 [ D.7776 ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ usartxbase ])
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(25)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u62(7){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 52 49 53 10 80 "" [0 uses])

(note 53 52 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_GetFlagStatus (USART_GetFlagStatus)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_GetFlagStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r24={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 42{20d,22u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,1] 25[9,1] 26[10,1] 134[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 142[16,1] 143[17,1] 144[18,1] 145[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(7){ }d6(13){ }d7(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
1, 2, 3, 4, 5, 6, 7, 9, 10

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d5(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 24 [cc] 134 138 139 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 138 139 140 141 142 143 144 145
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  gen 	(11)
0, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  kill	(12)
0, 1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 140 { d14(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 134 { d11(bb 2 insn 8) }
;;      reg 139 { d13(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 142 { d16(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 143 { d17(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 12
;;      reg 24 { d8(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 144 { d18(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 14
;;      reg 141 { d15(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 19
;;      reg 145 { d19(bb 2 insn 14) }
;;   UD chains for insn luid 11 uid 22
;;      reg 0 { d0(bb 2 insn 19) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u17(0){ d0(bb 2 insn 19) }u18(7){ d5(bb 0 insn -1) }u19(13){ d6(bb 0 insn -1) }u20(14){ d7(bb 0 insn -1) }u21(25){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 19) }
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
  Adding insn 19 to worklist
Processing use of (reg 145) in insn 19:
  Adding insn 14 to worklist
Processing use of (reg 141) in insn 14:
  Adding insn 13 to worklist
Processing use of (subreg (reg 144) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 143) in insn 11:
  Adding insn 10 to worklist
Processing use of (subreg (reg 142) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ D.7749 ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 139 [ USART_FLAG ]) in insn 9:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 140 [ USARTx_3(D)->SR ]) in insn 8:
Processing use of (reg 138 [ USARTx ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 22:


USART_GetFlagStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r24={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 42{20d,22u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,1] 25[9,1] 26[10,1] 134[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 142[16,1] 143[17,1] 144[18,1] 145[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 24 [cc] 134 138 139 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 138 139 140 141 142 143 144 145
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  gen 	(11)
0, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  kill	(12)
0, 1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 138 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1296 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ USART_FLAG ])
        (reg:SI 1 r1 [ USART_FLAG ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1296 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_FLAG ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:HI 140 [ USARTx_3(D)->SR ])
        (mem/s/v:HI (reg/v/f:SI 138 [ USARTx ]) [5 USARTx_3(D)->SR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1308 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 138 [ USARTx ])
        (nil)))

(insn 8 7 9 2 (set (reg:SI 134 [ D.7749 ])
        (zero_extend:SI (reg:HI 140 [ USARTx_3(D)->SR ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1308 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 140 [ USARTx_3(D)->SR ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 142)
        (and:SI (reg/v:SI 139 [ USART_FLAG ])
            (reg:SI 134 [ D.7749 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1308 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ USART_FLAG ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7749 ])
            (nil))))

(insn 10 9 11 2 (set (reg:SI 143)
        (zero_extend:SI (subreg:HI (reg:SI 142) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1310 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 11 10 12 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1310 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 12 11 13 2 (set (reg:SI 144)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1310 713 {*thumb2_mov_scc}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 13 12 14 2 (set (reg:QI 141)
        (subreg:QI (reg:SI 144) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1310 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 14 13 19 2 (set (reg:SI 145)
        (zero_extend:SI (reg:QI 141))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1316 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 141)
        (nil)))

(insn 19 14 22 2 (set (reg/i:SI 0 r0)
        (reg:SI 145)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1317 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 22 19 0 2 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1317 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_ClearFlag (USART_ClearFlag)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ClearFlag

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 27{13d,14u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(4)
9, 10, 11, 12
;; rd  kill	(4)
9, 10, 11, 12
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d11(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 137 { d12(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 { d9(bb 2 insn 8) }
;;      reg 135 { d10(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(7){ d4(bb 0 insn -1) }u11(13){ d5(bb 0 insn -1) }u12(14){ d6(bb 0 insn -1) }u13(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (subreg (reg 134 [ D.7746 ]) 0) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 135 [ USARTx ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 137) 0) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ USART_FLAG ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_ClearFlag

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 27{13d,14u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(4)
9, 10, 11, 12
;; rd  kill	(4)
9, 10, 11, 12

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 135 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1345 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 136 [ USART_FLAG ])
        (reg:SI 1 r1 [ USART_FLAG ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1345 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_FLAG ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:SI 137)
        (not:SI (reg/v:SI 136 [ USART_FLAG ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1356 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 136 [ USART_FLAG ])
        (nil)))

(insn 8 7 10 2 (set (reg:SI 134 [ D.7746 ])
        (zero_extend:SI (subreg:HI (reg:SI 137) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1356 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 10 8 0 2 (set (mem/s/v:HI (reg/v/f:SI 135 [ USARTx ]) [5 USARTx_5(D)->SR+0 S2 A16])
        (subreg/s/u:HI (reg:SI 134 [ D.7746 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1356 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 135 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7746 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_GetITStatus (USART_GetITStatus)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)


USART_GetITStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r7={1d,7u} r13={1d,7u} r14={1d,1u} r24={4d,4u} r25={1d,7u} r26={1d,6u} r134={3d,1u} r137={1d,2u} r140={1d,1u,1e} r141={1d,3u} r142={1d,1u} r144={1d,1u} r146={1d,1u} r150={1d,1u,1e} r151={1d,1u} r152={1d,1u} r160={1d,4u} r161={1d,3u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} 
;;    total ref usage 114{42d,70u,2e} in 36{36 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8, 9, 10, 11
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,4] 25[12,1] 26[13,1] 134[14,3] 137[17,1] 140[18,1] 141[19,1] 142[20,1] 144[21,1] 146[22,1] 150[23,1] 151[24,1] 152[25,1] 160[26,1] 161[27,1] 162[28,1] 163[29,1] 164[30,1] 165[31,1] 166[32,1] 167[33,1] 168[34,1] 169[35,1] 170[36,1] 173[37,1] 174[38,1] 176[39,1] 177[40,1] 178[41,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(7){ }d6(13){ }d7(14){ }d12(25){ }d13(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
1, 2, 3, 4, 5, 6, 7, 12, 13
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 12, 13
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
1, 2, 3, 4, 5, 6, 7, 12, 13

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d5(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d12(bb 0 insn -1) }u3(26){ d13(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 140 141 160 161 162 163 164
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 140 141 160 161 162 163 164
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 12, 13
;; rd  gen 	(9)
11, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  kill	(12)
8, 9, 10, 11, 17, 18, 19, 26, 27, 28, 29, 30
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 160 161
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 161 { d27(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 162 { d28(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 163 { d29(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 161 { d27(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 12
;;      reg 140 { d18(bb 2 insn 10) }
;;      reg 164 { d30(bb 2 insn 11) }
;;   eq_note reg 140 { }
;;   UD chains for insn luid 8 uid 13
;;      reg 137 { d17(bb 2 insn 9) }
;;   UD chains for insn luid 9 uid 14
;;      reg 24 { d11(bb 2 insn 13) }

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(7){ d5(bb 0 insn -1) }u16(13){ d6(bb 0 insn -1) }u17(25){ d12(bb 0 insn -1) }u18(26){ d13(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 160
;; lr  def 	 134 142 165
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; live  gen 	 134 142 165
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  gen 	(3)
16, 20, 31
;; rd  kill	(5)
14, 15, 16, 20, 31
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 160 { d26(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 17
;;      reg 165 { d31(bb 3 insn 16) }
;;   UD chains for insn luid 2 uid 18
;;      reg 141 { d19(bb 2 insn 12) }
;;      reg 142 { d20(bb 3 insn 17) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(7){ d5(bb 0 insn -1) }u24(13){ d6(bb 0 insn -1) }u25(25){ d12(bb 0 insn -1) }u26(26){ d13(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 160 161
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  gen 	(1)
10
;; rd  kill	(4)
8, 9, 10, 11
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 23
;;      reg 137 { d17(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 24
;;      reg 24 { d10(bb 4 insn 23) }

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(7){ d5(bb 0 insn -1) }u30(13){ d6(bb 0 insn -1) }u31(25){ d12(bb 0 insn -1) }u32(26){ d13(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 160
;; lr  def 	 134 144 166
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; live  gen 	 134 144 166
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  gen 	(3)
15, 21, 32
;; rd  kill	(5)
14, 15, 16, 21, 32
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 15, 17, 18, 19, 21, 26, 27, 28, 29, 30, 32
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 160 { d26(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 27
;;      reg 166 { d32(bb 5 insn 26) }
;;   UD chains for insn luid 2 uid 28
;;      reg 141 { d19(bb 2 insn 12) }
;;      reg 144 { d21(bb 5 insn 27) }

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(7){ d5(bb 0 insn -1) }u38(13){ d6(bb 0 insn -1) }u39(25){ d12(bb 0 insn -1) }u40(26){ d13(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 160
;; lr  def 	 134 146 167
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; live  gen 	 134 146 167
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  gen 	(3)
14, 22, 33
;; rd  kill	(5)
14, 15, 16, 22, 33
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 17, 18, 19, 22, 26, 27, 28, 29, 30, 33
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 33
;;      reg 160 { d26(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 34
;;      reg 167 { d33(bb 6 insn 33) }
;;   UD chains for insn luid 2 uid 35
;;      reg 141 { d19(bb 2 insn 12) }
;;      reg 146 { d22(bb 6 insn 34) }

( 3 5 6 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(7){ d5(bb 0 insn -1) }u46(13){ d6(bb 0 insn -1) }u47(25){ d12(bb 0 insn -1) }u48(26){ d13(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 160 161
;; lr  def 	 0 [r0] 24 [cc] 150 151 152 168 169 170 173 174 176 177 178
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; live  gen 	 0 [r0] 24 [cc] 150 151 152 168 169 170 173 174 176 177 178
;; live  kill	
;; rd  in  	(28)
1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33
;; rd  gen 	(13)
0, 8, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41
;; rd  kill	(17)
0, 1, 8, 9, 10, 11, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(38)
0, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 161 { d27(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 39
;;      reg 168 { d34(bb 7 insn 38) }
;;   UD chains for insn luid 3 uid 41
;;      reg 150 { d23(bb 7 insn 39) }
;;      reg 169 { d35(bb 7 insn 40) }
;;   eq_note reg 150 { }
;;   UD chains for insn luid 4 uid 42
;;      reg 160 { d26(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 43
;;      reg 170 { d36(bb 7 insn 42) }
;;   UD chains for insn luid 6 uid 44
;;      reg 134 { d16(bb 3 insn 18) d15(bb 5 insn 28) d14(bb 6 insn 35) }
;;   UD chains for insn luid 7 uid 45
;;      reg 24 { d9(bb 7 insn 44) }
;;   UD chains for insn luid 8 uid 47
;;      reg 151 { d24(bb 7 insn 41) }
;;      reg 152 { d25(bb 7 insn 43) }
;;   UD chains for insn luid 9 uid 48
;;      reg 174 { d38(bb 7 insn 47) }
;;   UD chains for insn luid 10 uid 49
;;      reg 24 { d8(bb 7 insn 48) }
;;   UD chains for insn luid 11 uid 51
;;      reg 173 { d37(bb 7 insn 45) }
;;      reg 176 { d39(bb 7 insn 49) }
;;   UD chains for insn luid 12 uid 52
;;      reg 177 { d40(bb 7 insn 51) }
;;   UD chains for insn luid 13 uid 57
;;      reg 178 { d41(bb 7 insn 52) }
;;   UD chains for insn luid 14 uid 60
;;      reg 0 { d0(bb 7 insn 57) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u67(0){ d0(bb 7 insn 57) }u68(7){ d5(bb 0 insn -1) }u69(13){ d6(bb 0 insn -1) }u70(14){ d7(bb 0 insn -1) }u71(25){ d12(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(38)
0, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(38)
0, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 7 insn 57) }
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 16 to worklist
  Adding insn 24 to worklist
  Adding insn 26 to worklist
  Adding insn 33 to worklist
  Adding insn 60 to worklist
  Adding insn 42 to worklist
Finished finding needed instructions:
  Adding insn 57 to worklist
Processing use of (reg 178) in insn 57:
  Adding insn 52 to worklist
Processing use of (subreg (reg 177) 0) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 173) in insn 51:
  Adding insn 45 to worklist
Processing use of (reg 176) in insn 51:
  Adding insn 49 to worklist
Processing use of (reg 24 cc) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 174) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 151 [ bitpos ]) in insn 47:
  Adding insn 41 to worklist
Processing use of (reg 152 [ D.7732 ]) in insn 47:
  Adding insn 43 to worklist
Processing use of (reg 170 [ USARTx_15(D)->SR ]) in insn 43:
Processing use of (reg 150 [ bitpos.1 ]) in insn 41:
  Adding insn 39 to worklist
Processing use of (reg 169) in insn 41:
  Adding insn 40 to worklist
Processing use of (subreg (reg 168) 0) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 161 [ USART_IT ]) in insn 38:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 24 cc) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 134 [ itmask ]) in insn 44:
  Adding insn 18 to worklist
  Adding insn 28 to worklist
  Adding insn 35 to worklist
Processing use of (reg 141 [ itmask ]) in insn 35:
  Adding insn 12 to worklist
Processing use of (reg 146 [ D.7728 ]) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 167 [ USARTx_15(D)->CR3 ]) in insn 34:
Processing use of (reg 140 [ itmask.0 ]) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 164) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 161 [ USART_IT ]) in insn 10:
Processing use of (reg 141 [ itmask ]) in insn 28:
Processing use of (reg 144 [ D.7725 ]) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 166 [ USARTx_15(D)->CR2 ]) in insn 27:
Processing use of (reg 141 [ itmask ]) in insn 18:
Processing use of (reg 142 [ D.7720 ]) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 165 [ USARTx_15(D)->CR1 ]) in insn 17:
Processing use of (reg 160 [ USARTx ]) in insn 42:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 60:
Processing use of (reg 160 [ USARTx ]) in insn 33:
Processing use of (reg 160 [ USARTx ]) in insn 26:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 137 [ usartreg ]) in insn 23:
  Adding insn 9 to worklist
Processing use of (subreg (reg 163) 0) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 162 [ USART_IT ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (subreg (reg 161 [ USART_IT ]) 0) in insn 7:
Processing use of (reg 160 [ USARTx ]) in insn 16:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 137 [ usartreg ]) in insn 13:


USART_GetITStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r7={1d,7u} r13={1d,7u} r14={1d,1u} r24={4d,4u} r25={1d,7u} r26={1d,6u} r134={3d,1u} r137={1d,2u} r140={1d,1u,1e} r141={1d,3u} r142={1d,1u} r144={1d,1u} r146={1d,1u} r150={1d,1u,1e} r151={1d,1u} r152={1d,1u} r160={1d,4u} r161={1d,3u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} 
;;    total ref usage 114{42d,70u,2e} in 36{36 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8, 9, 10, 11
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,4] 25[12,1] 26[13,1] 134[14,3] 137[17,1] 140[18,1] 141[19,1] 142[20,1] 144[21,1] 146[22,1] 150[23,1] 151[24,1] 152[25,1] 160[26,1] 161[27,1] 162[28,1] 163[29,1] 164[30,1] 165[31,1] 166[32,1] 167[33,1] 168[34,1] 169[35,1] 170[36,1] 173[37,1] 174[38,1] 176[39,1] 177[40,1] 178[41,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 140 141 160 161 162 163 164
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 140 141 160 161 162 163 164
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 12, 13
;; rd  gen 	(9)
11, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  kill	(12)
8, 9, 10, 11, 17, 18, 19, 26, 27, 28, 29, 30

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 160 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1379 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 161 [ USART_IT ])
        (reg:SI 1 r1 [ USART_IT ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1379 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_IT ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:SI 162 [ USART_IT ])
        (zero_extend:SI (subreg:QI (reg/v:SI 161 [ USART_IT ]) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1393 730 {thumb2_zero_extendqisi2_v6}
     (nil))

(insn 8 7 9 2 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 162 [ USART_IT ])
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1393 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 162 [ USART_IT ])
        (nil)))

(insn 9 8 10 2 (set (reg/v:SI 137 [ usartreg ])
        (zero_extend:SI (subreg:QI (reg:SI 163) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1393 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 10 9 11 2 (set (reg:SI 140 [ itmask.0 ])
        (and:SI (reg/v:SI 161 [ USART_IT ])
            (const_int 31 [0x1f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1395 69 {*arm_andsi3_insn}
     (nil))

(insn 11 10 12 2 (set (reg:SI 164)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1396 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 2 (set (reg/v:SI 141 [ itmask ])
        (ashift:SI (reg:SI 164)
            (reg:SI 140 [ itmask.0 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1396 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg:SI 140 [ itmask.0 ])
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 140 [ itmask.0 ]))
                (nil)))))

(insn 13 12 14 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ usartreg ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1398 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1398 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil)))
 -> 21)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 160 161
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(7){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 160
;; lr  def 	 134 142 165
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; live  gen 	 134 142 165
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  gen 	(3)
16, 20, 31
;; rd  kill	(5)
14, 15, 16, 20, 31

;; Pred edge  2 [28.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 (set (reg:HI 165 [ USARTx_15(D)->CR1 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 160 [ USARTx ])
                (const_int 12 [0xc])) [5 USARTx_15(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1400 711 {*thumb2_movhi_insn}
     (nil))

(insn 17 16 18 3 (set (reg:SI 142 [ D.7720 ])
        (zero_extend:SI (reg:HI 165 [ USARTx_15(D)->CR1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1400 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 165 [ USARTx_15(D)->CR1 ])
        (nil)))

(insn 18 17 21 3 (set (reg/v:SI 134 [ itmask ])
        (and:SI (reg/v:SI 141 [ itmask ])
            (reg:SI 142 [ D.7720 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1400 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 142 [ D.7720 ])
        (expr_list:REG_DEAD (reg/v:SI 141 [ itmask ])
            (nil))))
;; End of basic block 3 -> ( 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(7){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 160 161
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  gen 	(1)
10
;; rd  kill	(4)
8, 9, 10, 11

;; Pred edge  2 [72.0%] 
(code_label 21 18 22 4 92 "" [1 uses])

(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ usartreg ])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1402 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 137 [ usartreg ])
        (nil)))

(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1402 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil)))
 -> 31)
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(7){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 160
;; lr  def 	 134 144 166
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; live  gen 	 134 144 166
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  gen 	(3)
15, 21, 32
;; rd  kill	(5)
14, 15, 16, 21, 32

;; Pred edge  4 [28.0%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 (set (reg:HI 166 [ USARTx_15(D)->CR2 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 160 [ USARTx ])
                (const_int 16 [0x10])) [5 USARTx_15(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1404 711 {*thumb2_movhi_insn}
     (nil))

(insn 27 26 28 5 (set (reg:SI 144 [ D.7725 ])
        (zero_extend:SI (reg:HI 166 [ USARTx_15(D)->CR2 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1404 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 166 [ USARTx_15(D)->CR2 ])
        (nil)))

(insn 28 27 31 5 (set (reg/v:SI 134 [ itmask ])
        (and:SI (reg/v:SI 141 [ itmask ])
            (reg:SI 144 [ D.7725 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1404 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144 [ D.7725 ])
        (expr_list:REG_DEAD (reg/v:SI 141 [ itmask ])
            (nil))))
;; End of basic block 5 -> ( 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 15, 17, 18, 19, 21, 26, 27, 28, 29, 30, 32


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(7){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 160
;; lr  def 	 134 146 167
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 160 161
;; live  gen 	 134 146 167
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 17, 18, 19, 26, 27, 28, 29, 30
;; rd  gen 	(3)
14, 22, 33
;; rd  kill	(5)
14, 15, 16, 22, 33

;; Pred edge  4 [72.0%] 
(code_label 31 28 32 6 94 "" [1 uses])

(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 6 (set (reg:HI 167 [ USARTx_15(D)->CR3 ])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 160 [ USARTx ])
                (const_int 20 [0x14])) [5 USARTx_15(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1408 711 {*thumb2_movhi_insn}
     (nil))

(insn 34 33 35 6 (set (reg:SI 146 [ D.7728 ])
        (zero_extend:SI (reg:HI 167 [ USARTx_15(D)->CR3 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1408 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 167 [ USARTx_15(D)->CR3 ])
        (nil)))

(insn 35 34 36 6 (set (reg/v:SI 134 [ itmask ])
        (and:SI (reg/v:SI 141 [ itmask ])
            (reg:SI 146 [ D.7728 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1408 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 146 [ D.7728 ])
        (expr_list:REG_DEAD (reg/v:SI 141 [ itmask ])
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 17, 18, 19, 22, 26, 27, 28, 29, 30, 33


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(7){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 160 161
;; lr  def 	 0 [r0] 24 [cc] 150 151 152 168 169 170 173 174 176 177 178
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 160 161
;; live  gen 	 0 [r0] 24 [cc] 150 151 152 168 169 170 173 174 176 177 178
;; live  kill	
;; rd  in  	(28)
1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33
;; rd  gen 	(13)
0, 8, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41
;; rd  kill	(17)
0, 1, 8, 9, 10, 11, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 36 35 37 7 93 "" [0 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 (set (reg:SI 168)
        (lshiftrt:SI (reg/v:SI 161 [ USART_IT ])
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1411 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 161 [ USART_IT ])
        (nil)))

(insn 39 38 40 7 (set (reg:SI 150 [ bitpos.1 ])
        (zero_extend:SI (subreg:HI (reg:SI 168) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1411 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 40 39 41 7 (set (reg:SI 169)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1412 709 {*thumb2_movsi_insn}
     (nil))

(insn 41 40 42 7 (set (reg/v:SI 151 [ bitpos ])
        (ashift:SI (reg:SI 169)
            (reg:SI 150 [ bitpos.1 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1412 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg:SI 150 [ bitpos.1 ])
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 150 [ bitpos.1 ]))
                (nil)))))

(insn 42 41 43 7 (set (reg:HI 170 [ USARTx_15(D)->SR ])
        (mem/s/v:HI (reg/v/f:SI 160 [ USARTx ]) [5 USARTx_15(D)->SR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1413 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 160 [ USARTx ])
        (nil)))

(insn 43 42 44 7 (set (reg:SI 152 [ D.7732 ])
        (zero_extend:SI (reg:HI 170 [ USARTx_15(D)->SR ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1413 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:HI 170 [ USARTx_15(D)->SR ])
        (nil)))

(insn 44 43 45 7 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ itmask ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1414 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ itmask ])
        (nil)))

(insn 45 44 47 7 (set (reg:SI 173)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1414 713 {*thumb2_mov_scc}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 47 45 48 7 (set (reg:SI 174)
        (and:SI (reg/v:SI 151 [ bitpos ])
            (reg:SI 152 [ D.7732 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1413 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 152 [ D.7732 ])
        (expr_list:REG_DEAD (reg/v:SI 151 [ bitpos ])
            (nil))))

(insn 48 47 49 7 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1414 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 49 48 51 7 (set (reg:SI 176)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1414 713 {*thumb2_mov_scc}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 51 49 52 7 (set (reg:SI 177)
        (and:SI (reg:SI 173)
            (reg:SI 176))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1414 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_DEAD (reg:SI 173)
            (nil))))

(insn 52 51 57 7 (set (reg:SI 178)
        (zero_extend:SI (subreg:QI (reg:SI 177) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1423 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(insn 57 52 60 7 (set (reg/i:SI 0 r0)
        (reg:SI 178)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1424 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(insn 60 57 0 7 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1424 -1
     (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(38)
0, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function USART_ClearITPendingBit (USART_ClearITPendingBit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ClearITPendingBit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u,1e} r143={1d,1u} r144={1d,1u} r146={1d,1u} 
;;    total ref usage 36{17d,18u,1e} in 9{9 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 138[9,1] 139[10,1] 140[11,1] 141[12,1] 142[13,1] 143[14,1] 144[15,1] 146[16,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 139 140 141 142 143 144 146
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138 139 140 141 142 143 144 146
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(8)
9, 10, 11, 12, 13, 14, 15, 16
;; rd  kill	(8)
9, 10, 11, 12, 13, 14, 15, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d11(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 141 { d12(bb 2 insn 7) }
;;   UD chains for insn luid 5 uid 10
;;      reg 142 { d13(bb 2 insn 8) }
;;      reg 144 { d15(bb 2 insn 9) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 6 uid 12
;;      reg 143 { d14(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 13
;;      reg 146 { d16(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 15
;;      reg 138 { d9(bb 2 insn 13) }
;;      reg 139 { d10(bb 2 insn 2) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(7){ d4(bb 0 insn -1) }u16(13){ d5(bb 0 insn -1) }u17(14){ d6(bb 0 insn -1) }u18(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
Finished finding needed instructions:
Processing use of (subreg (reg 138 [ D.7711 ]) 0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 139 [ USARTx ]) in insn 15:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 146) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 143) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 142) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 144) in insn 10:
  Adding insn 9 to worklist
Processing use of (subreg (reg 141) 0) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ USART_IT ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


USART_ClearITPendingBit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u,1e} r143={1d,1u} r144={1d,1u} r146={1d,1u} 
;;    total ref usage 36{17d,18u,1e} in 9{9 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 138[9,1] 139[10,1] 140[11,1] 141[12,1] 142[13,1] 143[14,1] 144[15,1] 146[16,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 139 140 141 142 143 144 146
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138 139 140 141 142 143 144 146
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(8)
9, 10, 11, 12, 13, 14, 15, 16
;; rd  kill	(8)
9, 10, 11, 12, 13, 14, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v/f:SI 139 [ USARTx ])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1453 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ USARTx ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ USART_IT ])
        (reg:SI 1 r1 [ USART_IT ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1453 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ USART_IT ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:SI 141)
        (lshiftrt:SI (reg/v:SI 140 [ USART_IT ])
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1465 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 140 [ USART_IT ])
        (nil)))

(insn 8 7 9 2 (set (reg:SI 142)
        (zero_extend:SI (subreg:HI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1466 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 9 8 10 2 (set (reg:SI 144)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1466 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 9 12 2 (set (reg:SI 143)
        (ashift:SI (reg:SI 144)
            (reg:SI 142))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1466 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 142)
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 142))
                (nil)))))

(insn 12 10 13 2 (set (reg:SI 146)
        (not:SI (reg:SI 143))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1467 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 13 12 15 2 (set (reg:SI 138 [ D.7711 ])
        (zero_extend:SI (subreg:HI (reg:SI 146) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1467 729 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 15 13 0 2 (set (mem/s/v:HI (reg/v/f:SI 139 [ USARTx ]) [5 USARTx_9(D)->SR+0 S2 A16])
        (subreg/s/u:HI (reg:SI 138 [ D.7711 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1467 711 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 139 [ USARTx ])
        (expr_list:REG_DEAD (reg:SI 138 [ D.7711 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
