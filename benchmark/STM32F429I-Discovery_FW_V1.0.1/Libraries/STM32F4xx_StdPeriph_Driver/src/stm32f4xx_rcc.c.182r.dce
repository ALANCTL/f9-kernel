
;; Function RCC_DeInit (RCC_DeInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_DeInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,12u} r143={1d,3u} r145={1d,1u} r148={1d,1u} r150={1d,1u} r152={1d,1u} 
;;    total ref usage 55{21d,33u,1e} in 21{21 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 139[14,1] 140[15,1] 143[16,1] 145[17,1] 148[18,1] 150[19,1] 152[20,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138 139 140 143 145 148 150 152
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138 139 140 143 145 148 150 152
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(12)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; rd  kill	(12)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 140 { d15(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 8
;;      reg 134 { d9(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 11
;;      reg 135 { d10(bb 2 insn 8) }
;;      reg 140 { d15(bb 2 insn 6) }
;;   UD chains for insn luid 5 uid 15
;;      reg 140 { d15(bb 2 insn 6) }
;;      reg 143 { d16(bb 2 insn 14) }
;;   UD chains for insn luid 6 uid 18
;;      reg 140 { d15(bb 2 insn 6) }
;;   UD chains for insn luid 7 uid 19
;;      reg 136 { d11(bb 2 insn 18) }
;;   UD chains for insn luid 8 uid 20
;;      reg 145 { d17(bb 2 insn 19) }
;;   eq_note reg 136 { }
;;   UD chains for insn luid 9 uid 23
;;      reg 137 { d12(bb 2 insn 20) }
;;      reg 140 { d15(bb 2 insn 6) }
;;   UD chains for insn luid 11 uid 28
;;      reg 140 { d15(bb 2 insn 6) }
;;      reg 148 { d18(bb 2 insn 27) }
;;   UD chains for insn luid 13 uid 33
;;      reg 140 { d15(bb 2 insn 6) }
;;      reg 150 { d19(bb 2 insn 32) }
;;   UD chains for insn luid 15 uid 38
;;      reg 140 { d15(bb 2 insn 6) }
;;      reg 152 { d20(bb 2 insn 37) }
;;   UD chains for insn luid 16 uid 41
;;      reg 140 { d15(bb 2 insn 6) }
;;   UD chains for insn luid 17 uid 42
;;      reg 138 { d13(bb 2 insn 41) }
;;   UD chains for insn luid 18 uid 45
;;      reg 139 { d14(bb 2 insn 42) }
;;      reg 140 { d15(bb 2 insn 6) }
;;   UD chains for insn luid 19 uid 49
;;      reg 140 { d15(bb 2 insn 6) }
;;      reg 143 { d16(bb 2 insn 14) }
;;   UD chains for insn luid 20 uid 53
;;      reg 140 { d15(bb 2 insn 6) }
;;      reg 143 { d16(bb 2 insn 14) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(7){ d4(bb 0 insn -1) }u31(13){ d5(bb 0 insn -1) }u32(14){ d6(bb 0 insn -1) }u33(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 53 to worklist
  Adding insn 49 to worklist
  Adding insn 45 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 33 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 140) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135 [ D.8094 ]) in insn 11:
  Adding insn 8 to worklist
Processing use of (reg 140) in insn 11:
Processing use of (reg 134 [ D.8093 ]) in insn 8:
Processing use of (reg 140) in insn 15:
Processing use of (reg 143) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 140) in insn 18:
Processing use of (reg 137 [ D.8096 ]) in insn 23:
  Adding insn 20 to worklist
Processing use of (reg 140) in insn 23:
Processing use of (reg 145) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 136 [ D.8095 ]) in insn 19:
Processing use of (reg 140) in insn 28:
Processing use of (reg 148) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 140) in insn 33:
Processing use of (reg 150) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 140) in insn 38:
Processing use of (reg 152) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 140) in insn 41:
Processing use of (reg 139 [ D.8098 ]) in insn 45:
  Adding insn 42 to worklist
Processing use of (reg 140) in insn 45:
Processing use of (reg 138 [ D.8097 ]) in insn 42:
Processing use of (reg 140) in insn 49:
Processing use of (reg 143) in insn 49:
Processing use of (reg 140) in insn 53:
Processing use of (reg 143) in insn 53:


RCC_DeInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,12u} r143={1d,3u} r145={1d,1u} r148={1d,1u} r150={1d,1u} r152={1d,1u} 
;;    total ref usage 55{21d,33u,1e} in 21{21 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 139[14,1] 140[15,1] 143[16,1] 145[17,1] 148[18,1] 150[19,1] 152[20,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138 139 140 143 145 148 150 152
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138 139 140 143 145 148 150 152
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(12)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; rd  kill	(12)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 (set (reg/f:SI 140)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:216 709 {*thumb2_movsi_insn}
     (nil))

(insn 7 6 8 2 (set (reg:SI 134 [ D.8093 ])
        (mem/s/v:SI (reg/f:SI 140) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:216 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 11 2 (set (reg:SI 135 [ D.8094 ])
        (ior:SI (reg:SI 134 [ D.8093 ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:216 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.8093 ])
        (nil)))

(insn 11 8 14 2 (set (mem/s/v:SI (reg/f:SI 140) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (reg:SI 135 [ D.8094 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:216 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ D.8094 ])
        (nil)))

(insn 14 11 15 2 (set (reg:SI 143)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:219 709 {*thumb2_movsi_insn}
     (nil))

(insn 15 14 18 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg:SI 143)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:219 709 {*thumb2_movsi_insn}
     (nil))

(insn 18 15 19 2 (set (reg:SI 136 [ D.8095 ])
        (mem/s/v:SI (reg/f:SI 140) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:222 709 {*thumb2_movsi_insn}
     (nil))

(insn 19 18 20 2 (set (reg:SI 145)
        (and:SI (reg:SI 136 [ D.8095 ])
            (const_int -352321537 [0xffffffffeaffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:222 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ D.8095 ])
        (nil)))

(insn 20 19 23 2 (set (reg:SI 137 [ D.8096 ])
        (and:SI (reg:SI 145)
            (const_int -589825 [0xfffffffffff6ffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:222 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ D.8095 ])
                (const_int -352911361 [0xffffffffeaf6ffff]))
            (nil))))

(insn 23 20 27 2 (set (mem/s/v:SI (reg/f:SI 140) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (reg:SI 137 [ D.8096 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:222 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 137 [ D.8096 ])
        (nil)))

(insn 27 23 28 2 (set (reg:SI 148)
        (const_int 603992080 [0x24003010])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:225 709 {*thumb2_movsi_insn}
     (nil))

(insn 28 27 32 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (reg:SI 148)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:225 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 32 28 33 2 (set (reg:SI 150)
        (const_int 536883200 [0x20003000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:228 709 {*thumb2_movsi_insn}
     (nil))

(insn 33 32 37 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 132 [0x84])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLI2SCFGR+0 S4 A32])
        (reg:SI 150)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:228 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 37 33 38 2 (set (reg:SI 152)
        (const_int 603992064 [0x24003000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:231 709 {*thumb2_movsi_insn}
     (nil))

(insn 38 37 41 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 136 [0x88])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLSAICFGR+0 S4 A32])
        (reg:SI 152)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:231 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 41 38 42 2 (set (reg:SI 138 [ D.8097 ])
        (mem/s/v:SI (reg/f:SI 140) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:234 709 {*thumb2_movsi_insn}
     (nil))

(insn 42 41 45 2 (set (reg:SI 139 [ D.8098 ])
        (and:SI (reg:SI 138 [ D.8097 ])
            (const_int -262145 [0xfffffffffffbffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:234 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 138 [ D.8097 ])
        (nil)))

(insn 45 42 49 2 (set (mem/s/v:SI (reg/f:SI 140) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (reg:SI 139 [ D.8098 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:234 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 139 [ D.8098 ])
        (nil)))

(insn 49 45 53 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 12 [0xc])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CIR+0 S4 A32])
        (reg:SI 143)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:237 709 {*thumb2_movsi_insn}
     (nil))

(insn 53 49 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg:SI 143)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:240 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 140)
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_HSEConfig (RCC_HSEConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_HSEConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,2u} r136={1d,1u} 
;;    total ref usage 25{12d,13u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(3)
9, 10, 11
;; rd  kill	(3)
9, 10, 11
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 135 { d10(bb 2 insn 7) }
;;      reg 136 { d11(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 14
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 135 { d10(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(7){ d4(bb 0 insn -1) }u10(13){ d5(bb 0 insn -1) }u11(14){ d6(bb 0 insn -1) }u12(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 135) in insn 10:
  Adding insn 7 to worklist
Processing use of (subreg (reg 136) 0) in insn 10:
  Adding insn 8 to worklist
Processing use of (subreg (reg 134 [ RCC_HSE ]) 0) in insn 14:
  Adding insn 2 to worklist
Processing use of (reg 135) in insn 14:
Processing use of (reg 0 r0) in insn 2:


RCC_HSEConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,2u} r136={1d,1u} 
;;    total ref usage 25{12d,13u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(3)
9, 10, 11
;; rd  kill	(3)
9, 10, 11

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 134 [ RCC_HSE ])
        (reg:SI 0 r0 [ RCC_HSE ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:265 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_HSE ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 135)
        (const_int 1073887234 [0x40023802])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:270 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 10 2 (set (reg:SI 136)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:270 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 8 14 2 (set (mem/v:QI (reg/f:SI 135) [0 MEM[(volatile uint8_t *)1073887234B]+0 S1 A8])
        (subreg:QI (reg:SI 136) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:270 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(insn 14 10 0 2 (set (mem/v:QI (reg/f:SI 135) [0 MEM[(volatile uint8_t *)1073887234B]+0 S1 A8])
        (subreg/s/u:QI (reg/v:SI 134 [ RCC_HSE ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:273 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg/v:SI 134 [ RCC_HSE ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_WaitForHSEStartUp (RCC_WaitForHSEStartUp)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)


RCC_WaitForHSEStartUp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={2d,2u} r25={1d,9u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 66{25d,41u,0e} in 21{21 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,2] 25[10,1] 26[11,1] 134[12,1] 135[13,1] 136[14,1] 137[15,1] 139[16,1] 146[17,1] 148[18,1] 149[19,1] 150[20,1] 151[21,1] 152[22,1] 153[23,1] 154[24,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(7){ }d6(13){ }d7(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
1, 2, 3, 4, 5, 6, 7, 10, 11
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
1, 2, 3, 4, 5, 6, 7, 10, 11

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d5(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d10(bb 0 insn -1) }u3(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146 154
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 146 154
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 10, 11
;; rd  gen 	(2)
17, 24
;; rd  kill	(2)
17, 24
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; rd  out 	(11)
1, 2, 3, 4, 5, 6, 7, 10, 11, 17, 24
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 25 { d10(bb 0 insn -1) }
;;      reg 146 { d17(bb 2 insn 5) }

( 2 4 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(7){ d5(bb 0 insn -1) }u7(13){ d6(bb 0 insn -1) }u8(25){ d10(bb 0 insn -1) }u9(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 24 [cc] 134 135 136 137
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  gen 	 24 [cc] 134 135 136 137
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 24
;; rd  gen 	(5)
9, 12, 13, 14, 15
;; rd  kill	(6)
8, 9, 12, 13, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 24
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 154 { d24(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 11
;;      reg 25 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 12
;;      reg 134 { d12(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 25 { d10(bb 0 insn -1) }
;;      reg 135 { d13(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 14
;;      reg 25 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 15
;;      reg 136 { d14(bb 3 insn 14) }
;;   UD chains for insn luid 6 uid 16
;;      reg 24 { d9(bb 3 insn 15) }

( 3 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ d5(bb 0 insn -1) }u19(13){ d6(bb 0 insn -1) }u20(25){ d10(bb 0 insn -1) }u21(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 148
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 24
;; rd  gen 	(2)
8, 18
;; rd  kill	(3)
8, 9, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 24
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 137 { d15(bb 3 insn 10) }
;;   UD chains for insn luid 1 uid 20
;;      reg 148 { d18(bb 4 insn 19) }
;;   UD chains for insn luid 2 uid 21
;;      reg 24 { d8(bb 4 insn 20) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(7){ d5(bb 0 insn -1) }u26(13){ d6(bb 0 insn -1) }u27(25){ d10(bb 0 insn -1) }u28(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 139 149 150 151 152 153
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 149 150 151 152 153
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 24
;; rd  gen 	(7)
0, 16, 19, 20, 21, 22, 23
;; rd  kill	(8)
0, 1, 16, 19, 20, 21, 22, 23
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 26
;;      reg 149 { d19(bb 5 insn 25) }
;;   UD chains for insn luid 2 uid 27
;;      reg 139 { d16(bb 5 insn 26) }
;;   UD chains for insn luid 3 uid 28
;;      reg 151 { d21(bb 5 insn 27) }
;;   UD chains for insn luid 4 uid 29
;;      reg 152 { d22(bb 5 insn 28) }
;;   UD chains for insn luid 5 uid 30
;;      reg 150 { d20(bb 5 insn 29) }
;;   UD chains for insn luid 6 uid 35
;;      reg 153 { d23(bb 5 insn 30) }
;;   UD chains for insn luid 7 uid 38
;;      reg 0 { d0(bb 5 insn 35) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u36(0){ d0(bb 5 insn 35) }u37(7){ d5(bb 0 insn -1) }u38(13){ d6(bb 0 insn -1) }u39(14){ d7(bb 0 insn -1) }u40(25){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(24)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 35) }
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 6 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 21 to worklist
  Adding insn 38 to worklist
  Adding insn 26 to worklist
Finished finding needed instructions:
  Adding insn 35 to worklist
Processing use of (reg 153) in insn 35:
  Adding insn 30 to worklist
Processing use of (reg 150) in insn 30:
  Adding insn 29 to worklist
Processing use of (subreg (reg 152) 0) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 151) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 139 [ statusreg ]) in insn 27:
Processing use of (reg 149) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 0 r0) in insn 38:
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 148) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 137 [ statusreg ]) in insn 19:
Processing use of (reg 154) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 25 sfp) in insn 11:
Processing use of (reg 25 sfp) in insn 13:
Processing use of (reg 135 [ startupcounter.3 ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ startupcounter.2 ]) in insn 12:
Processing use of (reg 25 sfp) in insn 14:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 136 [ startupcounter.4 ]) in insn 15:
Processing use of (reg 25 sfp) in insn 6:
Processing use of (reg 146) in insn 6:
  Adding insn 5 to worklist


RCC_WaitForHSEStartUp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={2d,2u} r25={1d,9u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 66{25d,41u,0e} in 21{21 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,2] 25[10,1] 26[11,1] 134[12,1] 135[13,1] 136[14,1] 137[15,1] 139[16,1] 146[17,1] 148[18,1] 149[19,1] 150[20,1] 151[21,1] 152[22,1] 153[23,1] 154[24,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146 154
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 146 154
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 10, 11
;; rd  gen 	(2)
17, 24
;; rd  kill	(2)
17, 24

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 (set (reg:SI 146)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:290 709 {*thumb2_movsi_insn}
     (nil))

(insn 6 5 9 2 (set (mem/v/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 startupcounter+0 S4 A32])
        (reg:SI 146)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:290 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 9 6 18 2 (set (reg/f:SI 154)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; rd  out 	(11)
1, 2, 3, 4, 5, 6, 7, 10, 11, 17, 24


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(7){ }u7(13){ }u8(25){ }u9(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 24 [cc] 134 135 136 137
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  gen 	 24 [cc] 134 135 136 137
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 24
;; rd  gen 	(5)
9, 12, 13, 14, 15
;; rd  kill	(6)
8, 9, 12, 13, 14, 15

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  4 [86.0%]  (dfs_back)
(code_label 18 9 7 3 5 "" [1 uses])

(note 7 18 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 7 11 3 (set (reg/v:SI 137 [ statusreg ])
        (mem/s/v:SI (reg/f:SI 154) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887232 [0x40023800]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (nil)))

(insn 11 10 12 3 (set (reg:SI 134 [ startupcounter.2 ])
        (mem/v/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 startupcounter+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:297 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 135 [ startupcounter.3 ])
        (plus:SI (reg:SI 134 [ startupcounter.2 ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:297 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 134 [ startupcounter.2 ])
        (nil)))

(insn 13 12 14 3 (set (mem/v/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 startupcounter+0 S4 A32])
        (reg:SI 135 [ startupcounter.3 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:297 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ startupcounter.3 ])
        (nil)))

(insn 14 13 15 3 (set (reg:SI 136 [ startupcounter.4 ])
        (mem/v/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [3 startupcounter+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 709 {*thumb2_movsi_insn}
     (nil))

(insn 15 14 16 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ startupcounter.4 ])
            (const_int 20480 [0x5000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 136 [ startupcounter.4 ])
        (nil)))

(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil)))
 -> 22)
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 24


;; Succ edge  4 [95.5%]  (fallthru)
;; Succ edge  5 [4.5%]  (loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(7){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 148
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 24
;; rd  gen 	(2)
8, 18
;; rd  kill	(3)
8, 9, 18

;; Pred edge  3 [95.5%]  (fallthru)
(note 17 16 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 17 20 4 (set (reg:SI 148)
        (and:SI (reg/v:SI 137 [ statusreg ])
            (const_int 131072 [0x20000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 137 [ statusreg ])
        (nil)))

(insn 20 19 21 4 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil)))
 -> 18)
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 24


;; Succ edge  3 [86.0%]  (dfs_back)
;; Succ edge  5 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(7){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 139 149 150 151 152 153
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 149 150 151 152 153
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 24
;; rd  gen 	(7)
0, 16, 19, 20, 21, 22, 23
;; rd  kill	(8)
0, 1, 16, 19, 20, 21, 22, 23

;; Pred edge  4 [14.0%]  (fallthru,loop_exit)
;; Pred edge  3 [4.5%]  (loop_exit)
(code_label 22 21 23 5 4 "" [1 uses])

(note 23 22 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 26 5 (set (reg/f:SI 149)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (nil))

(insn 26 25 27 5 (set (reg/v:SI 139 [ statusreg ])
        (mem/s/v:SI (reg/f:SI 149) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887232 [0x40023800]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
            (nil))))

(insn 27 26 28 5 (set (reg:SI 151)
        (lshiftrt:SI (reg/v:SI 139 [ statusreg ])
            (const_int 17 [0x11]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2118 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 139 [ statusreg ])
        (nil)))

(insn 28 27 29 5 (set (reg:SI 152)
        (and:SI (reg:SI 151)
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2118 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 29 28 30 5 (set (reg:QI 150)
        (subreg:QI (reg:SI 152) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:302 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 30 29 35 5 (set (reg:SI 153)
        (zero_extend:SI (reg:QI 150))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:308 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 150)
        (nil)))

(insn 35 30 38 5 (set (reg/i:SI 0 r0)
        (reg:SI 153)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:309 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(insn 38 35 0 5 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:309 -1
     (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AdjustHSICalibrationValue (RCC_AdjustHSICalibrationValue)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_AdjustHSICalibrationValue

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,1u} 
;;    total ref usage 31{15d,16u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 138[11,1] 139[12,1] 140[13,1] 141[14,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 138 139 140 141
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 138 139 140 141
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(6)
9, 10, 11, 12, 13, 14
;; rd  kill	(6)
9, 10, 11, 12, 13, 14
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 140 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 139 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 11
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 141 { d14(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 14
;;      reg 138 { d11(bb 2 insn 11) }
;;      reg 140 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(7){ d4(bb 0 insn -1) }u13(13){ d5(bb 0 insn -1) }u14(14){ d6(bb 0 insn -1) }u15(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 140) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 138 [ tmpreg ]) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 140) in insn 14:
Processing use of (reg 135 [ tmpreg ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 141) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 139 [ HSICalibrationValue ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_AdjustHSICalibrationValue

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,1u} 
;;    total ref usage 31{15d,16u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 138[11,1] 139[12,1] 140[13,1] 141[14,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 138 139 140 141
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 138 139 140 141
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(6)
9, 10, 11, 12, 13, 14
;; rd  kill	(6)
9, 10, 11, 12, 13, 14

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 139 [ HSICalibrationValue ])
        (reg:SI 0 r0 [ HSICalibrationValue ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:320 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ HSICalibrationValue ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 140)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:325 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (reg/f:SI 140) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:325 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -249 [0xffffffffffffff07]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:328 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 11 2 (set (reg:SI 141)
        (ashift:SI (reg/v:SI 139 [ HSICalibrationValue ])
            (const_int 3 [0x3]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:331 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 139 [ HSICalibrationValue ])
        (nil)))

(insn 11 10 14 2 (set (reg/v:SI 138 [ tmpreg ])
        (ior:SI (reg:SI 141)
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:331 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 14 11 0 2 (set (mem/s/v:SI (reg/f:SI 140) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (reg/v:SI 138 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:334 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_DEAD (reg/v:SI 138 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_HSICmd (RCC_HSICmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_HSICmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 135 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 135 [ NewState ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_HSICmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 135 [ NewState ])
        (reg:SI 0 r0 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:356 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ NewState ])
        (nil)))

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 9 2 (set (reg/f:SI 136)
        (const_int 1111949312 [0x42470000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:360 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111949312B]+0 S4 A32])
        (reg/v:SI 135 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:360 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 135 [ NewState ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_LSEConfig (RCC_LSEConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)


RCC_LSEConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,6u} r13={1d,6u} r14={1d,1u} r24={2d,2u} r25={1d,6u} r26={1d,5u} r134={1d,3u} r135={1d,4u} r136={1d,2u} r145={1d,1u} 
;;    total ref usage 52{15d,37u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7, 8
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,2] 25[9,1] 26[10,1] 134[11,1] 135[12,1] 136[13,1] 145[14,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 9, 10
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 9, 10
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 9, 10

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 9, 10
;; rd  gen 	(4)
8, 11, 12, 13
;; rd  kill	(5)
7, 8, 11, 12, 13
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 135 { d12(bb 2 insn 7) }
;;      reg 136 { d13(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 15
;;      reg 135 { d12(bb 2 insn 7) }
;;      reg 136 { d13(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 16
;;      reg 134 { d11(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 17
;;      reg 24 { d8(bb 2 insn 16) }

( 2 )->[3]->( 5 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(7){ d4(bb 0 insn -1) }u12(13){ d5(bb 0 insn -1) }u13(25){ d9(bb 0 insn -1) }u14(26){ d10(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13
;; rd  gen 	(1)
7
;; rd  kill	(2)
7, 8
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 134 { d11(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 19
;;      reg 24 { d7(bb 3 insn 18) }

( 2 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d9(bb 0 insn -1) }u20(26){ d10(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 134 { d11(bb 2 insn 2) }
;;      reg 135 { d12(bb 2 insn 7) }

( 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(7){ d4(bb 0 insn -1) }u24(13){ d5(bb 0 insn -1) }u25(25){ d9(bb 0 insn -1) }u26(26){ d10(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 145
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 145
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13
;; rd  gen 	(1)
14
;; rd  kill	(1)
14
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 37
;;      reg 135 { d12(bb 2 insn 7) }
;;      reg 145 { d14(bb 5 insn 35) }

( 5 3 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(7){ d4(bb 0 insn -1) }u30(13){ d5(bb 0 insn -1) }u31(25){ d9(bb 0 insn -1) }u32(26){ d10(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(7){ d4(bb 0 insn -1) }u34(13){ d5(bb 0 insn -1) }u35(14){ d6(bb 0 insn -1) }u36(25){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 28 to worklist
  Adding insn 37 to worklist
Finished finding needed instructions:
Processing use of (reg 135) in insn 37:
  Adding insn 7 to worklist
Processing use of (subreg (reg 145) 0) in insn 37:
  Adding insn 35 to worklist
Processing use of (subreg (reg 134 [ RCC_LSE ]) 0) in insn 28:
  Adding insn 2 to worklist
Processing use of (reg 135) in insn 28:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 134 [ RCC_LSE ]) in insn 18:
Processing use of (reg 135) in insn 10:
Processing use of (subreg (reg 136) 0) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 135) in insn 15:
Processing use of (subreg (reg 136) 0) in insn 15:
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 134 [ RCC_LSE ]) in insn 16:


RCC_LSEConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,6u} r13={1d,6u} r14={1d,1u} r24={2d,2u} r25={1d,6u} r26={1d,5u} r134={1d,3u} r135={1d,4u} r136={1d,2u} r145={1d,1u} 
;;    total ref usage 52{15d,37u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7, 8
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,2] 25[9,1] 26[10,1] 134[11,1] 135[12,1] 136[13,1] 145[14,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 9, 10
;; rd  gen 	(4)
8, 11, 12, 13
;; rd  kill	(5)
7, 8, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 134 [ RCC_LSE ])
        (reg:SI 0 r0 [ RCC_LSE ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:381 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_LSE ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 135)
        (const_int 1073887344 [0x40023870])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:387 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 10 2 (set (reg:SI 136)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:387 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 8 15 2 (set (mem/v:QI (reg/f:SI 135) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
        (subreg:QI (reg:SI 136) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:387 187 {*arm_movqi_insn}
     (nil))

(insn 15 10 16 2 (set (mem/v:QI (reg/f:SI 135) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
        (subreg:QI (reg:SI 136) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:390 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(insn 16 15 17 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ RCC_LSE ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:393 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 17 16 42 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:393 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil)))
 -> 22)
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13


;; Succ edge  4 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(7){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13
;; rd  gen 	(1)
7
;; rd  kill	(2)
7, 8

;; Pred edge  2 [71.0%]  (fallthru)
(note 42 17 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 42 19 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ RCC_LSE ])
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:393 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ RCC_LSE ])
        (nil)))

(jump_insn 19 18 22 3 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:393 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil)))
 -> 31)
;; End of basic block 3 -> ( 5 6)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13


;; Succ edge  5 [29.0%] 
;; Succ edge  6 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [29.0%] 
(code_label 22 19 23 4 12 "" [1 uses])

(note 23 22 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 23 31 4 (set (mem/v:QI (reg/f:SI 135) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
        (subreg:QI (reg/v:SI 134 [ RCC_LSE ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:397 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg/v:SI 134 [ RCC_LSE ])
            (nil))))
;; End of basic block 4 -> ( 6)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(7){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 145
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 145
;; live  kill	
;; rd  in  	(13)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13
;; rd  gen 	(1)
14
;; rd  kill	(1)
14

;; Pred edge  3 [29.0%] 
(code_label 31 28 32 5 13 "" [1 uses])

(note 32 31 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 32 37 5 (set (reg:SI 145)
        (const_int 5 [0x5])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:401 709 {*thumb2_movsi_insn}
     (nil))

(insn 37 35 40 5 (set (mem/v:QI (reg/f:SI 135) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
        (subreg:QI (reg:SI 145) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:401 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 3 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(7){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  3 [71.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 40 37 41 6 10 "" [0 uses])

(note 41 40 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_LSICmd (RCC_LSICmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_LSICmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 135 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 135 [ NewState ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_LSICmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 135 [ NewState ])
        (reg:SI 0 r0 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:421 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ NewState ])
        (nil)))

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 9 2 (set (reg/f:SI 136)
        (const_int 1111953024 [0x42470e80])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:425 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111953024B]+0 S4 A32])
        (reg/v:SI 135 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:425 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 135 [ NewState ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_PLLConfig (RCC_PLLConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d,1u} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,2u,1e} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 53{24d,28u,1e} in 16{16 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 142[9,1] 143[10,1] 144[11,1] 145[12,1] 146[13,1] 147[14,1] 148[15,1] 149[16,1] 150[17,1] 151[18,1] 152[19,1] 153[20,1] 154[21,1] 155[22,1] 157[23,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142 143 144 145 146 147 148 149 150 151 152 153 154 155 157
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142 143 144 145 146 147 148 149 150 151 152 153 154 155 157
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;; rd  kill	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 6
;;      reg 26 { d8(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 143 { d10(bb 2 insn 2) }
;;      reg 144 { d11(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 11
;;      reg 145 { d12(bb 2 insn 4) }
;;   UD chains for insn luid 7 uid 12
;;      reg 148 { d15(bb 2 insn 10) }
;;      reg 149 { d16(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 147 { d14(bb 2 insn 6) }
;;   UD chains for insn luid 9 uid 14
;;      reg 150 { d17(bb 2 insn 12) }
;;      reg 151 { d18(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 15
;;      reg 146 { d13(bb 2 insn 5) }
;;   UD chains for insn luid 11 uid 16
;;      reg 153 { d20(bb 2 insn 15) }
;;   UD chains for insn luid 12 uid 17
;;      reg 154 { d21(bb 2 insn 16) }
;;   UD chains for insn luid 13 uid 18
;;      reg 152 { d19(bb 2 insn 14) }
;;      reg 155 { d22(bb 2 insn 17) }
;;   UD chains for insn luid 15 uid 21
;;      reg 142 { d9(bb 2 insn 18) }
;;      reg 157 { d23(bb 2 insn 20) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(7){ d4(bb 0 insn -1) }u26(13){ d5(bb 0 insn -1) }u27(14){ d6(bb 0 insn -1) }u28(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 21 to worklist
Finished finding needed instructions:
Processing use of (reg 142 [ D.8070 ]) in insn 21:
  Adding insn 18 to worklist
Processing use of (reg 157) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 152) in insn 18:
  Adding insn 14 to worklist
Processing use of (reg 155) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 154) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 153) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 146 [ PLLP ]) in insn 15:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 150) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 151) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 147 [ PLLQ ]) in insn 13:
  Adding insn 6 to worklist
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 148) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 149) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 145 [ PLLN ]) in insn 11:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 143 [ RCC_PLLSource ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 144 [ PLLM ]) in insn 10:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 0 r0) in insn 2:


RCC_PLLConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d,1u} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,2u,1e} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 53{24d,28u,1e} in 16{16 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 142[9,1] 143[10,1] 144[11,1] 145[12,1] 146[13,1] 147[14,1] 148[15,1] 149[16,1] 150[17,1] 151[18,1] 152[19,1] 153[20,1] 154[21,1] 155[22,1] 157[23,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142 143 144 145 146 147 148 149 150 151 152 153 154 155 157
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142 143 144 145 146 147 148 149 150 151 152 153 154 155 157
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;; rd  kill	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 (set (reg/v:SI 143 [ RCC_PLLSource ])
        (reg:SI 0 r0 [ RCC_PLLSource ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:464 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_PLLSource ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 144 [ PLLM ])
        (reg:SI 1 r1 [ PLLM ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:464 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ PLLM ])
        (nil)))

(insn 4 3 5 2 (set (reg/v:SI 145 [ PLLN ])
        (reg:SI 2 r2 [ PLLN ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:464 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 2 r2 [ PLLN ])
        (nil)))

(insn 5 4 6 2 (set (reg/v:SI 146 [ PLLP ])
        (reg:SI 3 r3 [ PLLP ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:464 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 3 r3 [ PLLP ])
        (nil)))

(insn 6 5 7 2 (set (reg/v:SI 147 [ PLLQ ])
        (mem/c/i:SI (reg/f:SI 26 afp) [3 PLLQ+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:464 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 26 afp) [3 PLLQ+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 (set (reg:SI 148)
        (ior:SI (reg/v:SI 144 [ PLLM ])
            (reg/v:SI 143 [ RCC_PLLSource ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 144 [ PLLM ])
        (expr_list:REG_DEAD (reg/v:SI 143 [ RCC_PLLSource ])
            (nil))))

(insn 11 10 12 2 (set (reg:SI 149)
        (ashift:SI (reg/v:SI 145 [ PLLN ])
            (const_int 6 [0x6]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 145 [ PLLN ])
        (nil)))

(insn 12 11 13 2 (set (reg:SI 150)
        (ior:SI (reg:SI 148)
            (reg:SI 149))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg:SI 148)
            (nil))))

(insn 13 12 14 2 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 147 [ PLLQ ])
            (const_int 24 [0x18]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:473 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 147 [ PLLQ ])
        (nil)))

(insn 14 13 15 2 (set (reg:SI 152)
        (ior:SI (reg:SI 150)
            (reg:SI 151))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg:SI 150)
            (nil))))

(insn 15 14 16 2 (set (reg:SI 153)
        (lshiftrt:SI (reg/v:SI 146 [ PLLP ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 146 [ PLLP ])
        (nil)))

(insn 16 15 17 2 (set (reg:SI 154)
        (plus:SI (reg:SI 153)
            (const_int -1 [0xffffffffffffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(insn 17 16 18 2 (set (reg:SI 155)
        (ashift:SI (reg:SI 154)
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(insn 18 17 20 2 (set (reg:SI 142 [ D.8070 ])
        (ior:SI (reg:SI 152)
            (reg:SI 155))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg:SI 152)
            (nil))))

(insn 20 18 21 2 (set (reg/f:SI 157)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 709 {*thumb2_movsi_insn}
     (nil))

(insn 21 20 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 157)
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (reg:SI 142 [ D.8070 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_DEAD (reg:SI 142 [ D.8070 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_PLLCmd (RCC_PLLCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 135 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 135 [ NewState ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_PLLCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 135 [ NewState ])
        (reg:SI 0 r0 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:487 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ NewState ])
        (nil)))

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 9 2 (set (reg/f:SI 136)
        (const_int 1111949408 [0x42470060])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:490 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111949408B]+0 S4 A32])
        (reg/v:SI 135 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:490 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 135 [ NewState ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_PLLI2SConfig (RCC_PLLI2SConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLI2SConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} 
;;    total ref usage 38{18d,20u,0e} in 10{10 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 138[9,1] 139[10,1] 140[11,1] 141[12,1] 142[13,1] 143[14,1] 144[15,1] 145[16,1] 147[17,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 139 140 141 142 143 144 145 147
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138 139 140 141 142 143 144 145 147
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 140 { d11(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 9
;;      reg 139 { d10(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 10
;;      reg 142 { d13(bb 2 insn 8) }
;;      reg 143 { d14(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 141 { d12(bb 2 insn 4) }
;;   UD chains for insn luid 7 uid 12
;;      reg 144 { d15(bb 2 insn 10) }
;;      reg 145 { d16(bb 2 insn 11) }
;;   UD chains for insn luid 9 uid 15
;;      reg 138 { d9(bb 2 insn 12) }
;;      reg 147 { d17(bb 2 insn 14) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u16(7){ d4(bb 0 insn -1) }u17(13){ d5(bb 0 insn -1) }u18(14){ d6(bb 0 insn -1) }u19(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ D.8058 ]) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 147) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 144) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 145) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 141 [ PLLI2SR ]) in insn 11:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 142) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 143) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 139 [ PLLI2SN ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 140 [ PLLI2SQ ]) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_PLLI2SConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} 
;;    total ref usage 38{18d,20u,0e} in 10{10 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 138[9,1] 139[10,1] 140[11,1] 141[12,1] 142[13,1] 143[14,1] 144[15,1] 145[16,1] 147[17,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 139 140 141 142 143 144 145 147
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138 139 140 141 142 143 144 145 147
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (reg/v:SI 139 [ PLLI2SN ])
        (reg:SI 0 r0 [ PLLI2SN ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:553 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ PLLI2SN ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ PLLI2SQ ])
        (reg:SI 1 r1 [ PLLI2SQ ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:553 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ PLLI2SQ ])
        (nil)))

(insn 4 3 5 2 (set (reg/v:SI 141 [ PLLI2SR ])
        (reg:SI 2 r2 [ PLLI2SR ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:553 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 2 r2 [ PLLI2SR ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 140 [ PLLI2SQ ])
            (const_int 24 [0x18]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 140 [ PLLI2SQ ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 143)
        (ashift:SI (reg/v:SI 139 [ PLLI2SN ])
            (const_int 6 [0x6]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 139 [ PLLI2SN ])
        (nil)))

(insn 10 9 11 2 (set (reg:SI 144)
        (ior:SI (reg:SI 142)
            (reg:SI 143))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg:SI 142)
            (nil))))

(insn 11 10 12 2 (set (reg:SI 145)
        (ashift:SI (reg/v:SI 141 [ PLLI2SR ])
            (const_int 28 [0x1c]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 141 [ PLLI2SR ])
        (nil)))

(insn 12 11 14 2 (set (reg:SI 138 [ D.8058 ])
        (ior:SI (reg:SI 144)
            (reg:SI 145))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg:SI 144)
            (nil))))

(insn 14 12 15 2 (set (reg/f:SI 147)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 709 {*thumb2_movsi_insn}
     (nil))

(insn 15 14 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 147)
                (const_int 132 [0x84])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLI2SCFGR+0 S4 A32])
        (reg:SI 138 [ D.8058 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_DEAD (reg:SI 138 [ D.8058 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_PLLI2SCmd (RCC_PLLI2SCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLI2SCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 135 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 135 [ NewState ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_PLLI2SCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 135 [ NewState ])
        (reg:SI 0 r0 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:570 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ NewState ])
        (nil)))

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 9 2 (set (reg/f:SI 136)
        (const_int 1111949416 [0x42470068])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:573 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111949416B]+0 S4 A32])
        (reg/v:SI 135 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:573 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 135 [ NewState ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_PLLSAIConfig (RCC_PLLSAIConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLSAIConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} 
;;    total ref usage 38{18d,20u,0e} in 10{10 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 138[9,1] 139[10,1] 140[11,1] 141[12,1] 142[13,1] 143[14,1] 144[15,1] 145[16,1] 147[17,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 139 140 141 142 143 144 145 147
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138 139 140 141 142 143 144 145 147
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 140 { d11(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 9
;;      reg 139 { d10(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 10
;;      reg 142 { d13(bb 2 insn 8) }
;;      reg 143 { d14(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 141 { d12(bb 2 insn 4) }
;;   UD chains for insn luid 7 uid 12
;;      reg 144 { d15(bb 2 insn 10) }
;;      reg 145 { d16(bb 2 insn 11) }
;;   UD chains for insn luid 9 uid 15
;;      reg 138 { d9(bb 2 insn 12) }
;;      reg 147 { d17(bb 2 insn 14) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u16(7){ d4(bb 0 insn -1) }u17(13){ d5(bb 0 insn -1) }u18(14){ d6(bb 0 insn -1) }u19(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
Finished finding needed instructions:
Processing use of (reg 138 [ D.8050 ]) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 147) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 144) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 145) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 141 [ PLLSAIR ]) in insn 11:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 142) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 143) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 139 [ PLLSAIN ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 140 [ PLLSAIQ ]) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_PLLSAIConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} 
;;    total ref usage 38{18d,20u,0e} in 10{10 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 138[9,1] 139[10,1] 140[11,1] 141[12,1] 142[13,1] 143[14,1] 144[15,1] 145[16,1] 147[17,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 139 140 141 142 143 144 145 147
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138 139 140 141 142 143 144 145 147
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (reg/v:SI 139 [ PLLSAIN ])
        (reg:SI 0 r0 [ PLLSAIN ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:599 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ PLLSAIN ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ PLLSAIQ ])
        (reg:SI 1 r1 [ PLLSAIQ ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:599 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ PLLSAIQ ])
        (nil)))

(insn 4 3 5 2 (set (reg/v:SI 141 [ PLLSAIR ])
        (reg:SI 2 r2 [ PLLSAIR ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:599 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 2 r2 [ PLLSAIR ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 140 [ PLLSAIQ ])
            (const_int 24 [0x18]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 140 [ PLLSAIQ ])
        (nil)))

(insn 9 8 10 2 (set (reg:SI 143)
        (ashift:SI (reg/v:SI 139 [ PLLSAIN ])
            (const_int 6 [0x6]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 139 [ PLLSAIN ])
        (nil)))

(insn 10 9 11 2 (set (reg:SI 144)
        (ior:SI (reg:SI 142)
            (reg:SI 143))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg:SI 142)
            (nil))))

(insn 11 10 12 2 (set (reg:SI 145)
        (ashift:SI (reg/v:SI 141 [ PLLSAIR ])
            (const_int 28 [0x1c]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 141 [ PLLSAIR ])
        (nil)))

(insn 12 11 14 2 (set (reg:SI 138 [ D.8050 ])
        (ior:SI (reg:SI 144)
            (reg:SI 145))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg:SI 144)
            (nil))))

(insn 14 12 15 2 (set (reg/f:SI 147)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 709 {*thumb2_movsi_insn}
     (nil))

(insn 15 14 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 147)
                (const_int 136 [0x88])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLSAICFGR+0 S4 A32])
        (reg:SI 138 [ D.8050 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_DEAD (reg:SI 138 [ D.8050 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_PLLSAICmd (RCC_PLLSAICmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLSAICmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 135 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 135 [ NewState ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_PLLSAICmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 135 [ NewState ])
        (reg:SI 0 r0 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:617 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ NewState ])
        (nil)))

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 9 2 (set (reg/f:SI 136)
        (const_int 1111949424 [0x42470070])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:620 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111949424B]+0 S4 A32])
        (reg/v:SI 135 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:620 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 135 [ NewState ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_ClockSecuritySystemCmd (RCC_ClockSecuritySystemCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_ClockSecuritySystemCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 135 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 135 [ NewState ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_ClockSecuritySystemCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 135 [ NewState ])
        (reg:SI 0 r0 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:635 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ NewState ])
        (nil)))

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 9 2 (set (reg/f:SI 136)
        (const_int 1111949388 [0x4247004c])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:638 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111949388B]+0 S4 A32])
        (reg/v:SI 135 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:638 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 135 [ NewState ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_MCO1Config (RCC_MCO1Config)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_MCO1Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,1u} 
;;    total ref usage 34{16d,18u,0e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 137[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136 137 138 139 140 141
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136 137 138 139 140 141
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(7)
9, 10, 11, 12, 13, 14, 15
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 140 { d14(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 { d9(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 138 { d12(bb 2 insn 2) }
;;      reg 141 { d15(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 136 { d10(bb 2 insn 11) }
;;      reg 139 { d13(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 15
;;      reg 137 { d11(bb 2 insn 12) }
;;      reg 140 { d14(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(7){ d4(bb 0 insn -1) }u15(13){ d5(bb 0 insn -1) }u16(14){ d6(bb 0 insn -1) }u17(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 140) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 137 [ tmpreg ]) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 140) in insn 15:
Processing use of (reg 136 [ D.8040 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 139 [ RCC_MCO1Div ]) in insn 12:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 138 [ RCC_MCO1Source ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 141) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 134 [ tmpreg ]) in insn 10:
Processing use of (reg 0 r0) in insn 2:


RCC_MCO1Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,1u} 
;;    total ref usage 34{16d,18u,0e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 137[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136 137 138 139 140 141
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136 137 138 139 140 141
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(7)
9, 10, 11, 12, 13, 14, 15
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 138 [ RCC_MCO1Source ])
        (reg:SI 0 r0 [ RCC_MCO1Source ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:660 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_MCO1Source ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ RCC_MCO1Div ])
        (reg:SI 1 r1 [ RCC_MCO1Div ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:660 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ RCC_MCO1Div ])
        (nil)))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 (set (reg/f:SI 140)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:667 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:667 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 9 11 2 (set (reg:SI 141)
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -123731969 [0xfffffffff89fffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:670 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 11 10 12 2 (set (reg:SI 136 [ D.8040 ])
        (ior:SI (reg/v:SI 138 [ RCC_MCO1Source ])
            (reg:SI 141))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:673 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v:SI 138 [ RCC_MCO1Source ])
            (nil))))

(insn 12 11 15 2 (set (reg/v:SI 137 [ tmpreg ])
        (ior:SI (reg:SI 136 [ D.8040 ])
            (reg/v:SI 139 [ RCC_MCO1Div ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:673 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_MCO1Div ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.8040 ])
            (nil))))

(insn 15 12 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 137 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:676 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_DEAD (reg/v:SI 137 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_MCO2Config (RCC_MCO2Config)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_MCO2Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,1u} 
;;    total ref usage 34{16d,18u,0e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 137[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136 137 138 139 140 141
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136 137 138 139 140 141
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(7)
9, 10, 11, 12, 13, 14, 15
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 140 { d14(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 { d9(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 138 { d12(bb 2 insn 2) }
;;      reg 141 { d15(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 136 { d10(bb 2 insn 11) }
;;      reg 139 { d13(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 15
;;      reg 137 { d11(bb 2 insn 12) }
;;      reg 140 { d14(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(7){ d4(bb 0 insn -1) }u15(13){ d5(bb 0 insn -1) }u16(14){ d6(bb 0 insn -1) }u17(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 140) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 137 [ tmpreg ]) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 140) in insn 15:
Processing use of (reg 136 [ D.8038 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 139 [ RCC_MCO2Div ]) in insn 12:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 138 [ RCC_MCO2Source ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 141) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 134 [ tmpreg ]) in insn 10:
Processing use of (reg 0 r0) in insn 2:


RCC_MCO2Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,1u} 
;;    total ref usage 34{16d,18u,0e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 137[11,1] 138[12,1] 139[13,1] 140[14,1] 141[15,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136 137 138 139 140 141
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136 137 138 139 140 141
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(7)
9, 10, 11, 12, 13, 14, 15
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 138 [ RCC_MCO2Source ])
        (reg:SI 0 r0 [ RCC_MCO2Source ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:698 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_MCO2Source ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 139 [ RCC_MCO2Div ])
        (reg:SI 1 r1 [ RCC_MCO2Div ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:698 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ RCC_MCO2Div ])
        (nil)))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 (set (reg/f:SI 140)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:705 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:705 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 9 11 2 (set (reg:SI 141)
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int 134217727 [0x7ffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:708 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 11 10 12 2 (set (reg:SI 136 [ D.8038 ])
        (ior:SI (reg/v:SI 138 [ RCC_MCO2Source ])
            (reg:SI 141))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:711 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v:SI 138 [ RCC_MCO2Source ])
            (nil))))

(insn 12 11 15 2 (set (reg/v:SI 137 [ tmpreg ])
        (ior:SI (reg:SI 136 [ D.8038 ])
            (reg/v:SI 139 [ RCC_MCO2Div ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:711 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_MCO2Div ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.8038 ])
            (nil))))

(insn 15 12 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 137 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:714 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_DEAD (reg/v:SI 137 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_SYSCLKConfig (RCC_SYSCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SYSCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 138 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 137 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 13
;;      reg 136 { d11(bb 2 insn 10) }
;;      reg 138 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(7){ d4(bb 0 insn -1) }u12(13){ d5(bb 0 insn -1) }u13(14){ d6(bb 0 insn -1) }u14(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ tmpreg ]) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 138) in insn 13:
Processing use of (reg 135 [ tmpreg ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137 [ RCC_SYSCLKSource ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_SYSCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 137 [ RCC_SYSCLKSource ])
        (reg:SI 0 r0 [ RCC_SYSCLKSource ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:864 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_SYSCLKSource ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 138)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:870 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:870 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -4 [0xfffffffffffffffc]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:873 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 13 2 (set (reg/v:SI 136 [ tmpreg ])
        (ior:SI (reg/v:SI 137 [ RCC_SYSCLKSource ])
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:876 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 137 [ RCC_SYSCLKSource ])
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 13 10 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 136 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:879 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_DEAD (reg/v:SI 136 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_GetSYSCLKSource (RCC_GetSYSCLKSource)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_GetSYSCLKSource

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r138={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 28{14d,14u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 134[10,1] 138[11,1] 141[12,1] 142[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(7){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
1, 2, 3, 4, 5, 6, 7, 8, 9

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d5(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 134 138 141 142
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 138 141 142
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(5)
0, 10, 11, 12, 13
;; rd  kill	(6)
0, 1, 10, 11, 12, 13
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 138 { d11(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 9
;;      reg 134 { d10(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 10
;;      reg 141 { d12(bb 2 insn 9) }
;;   UD chains for insn luid 4 uid 15
;;      reg 142 { d13(bb 2 insn 10) }
;;   UD chains for insn luid 5 uid 18
;;      reg 0 { d0(bb 2 insn 15) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ d0(bb 2 insn 15) }u10(7){ d5(bb 0 insn -1) }u11(13){ d6(bb 0 insn -1) }u12(14){ d7(bb 0 insn -1) }u13(25){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 15) }
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
  Adding insn 15 to worklist
Processing use of (reg 142) in insn 15:
  Adding insn 10 to worklist
Processing use of (subreg (reg 141) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ D.8033 ]) in insn 9:
Processing use of (reg 138) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 18:


RCC_GetSYSCLKSource

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r138={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 28{14d,14u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 134[10,1] 138[11,1] 141[12,1] 142[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 134 138 141 142
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 138 141 142
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(5)
0, 10, 11, 12, 13
;; rd  kill	(6)
0, 1, 10, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 (set (reg/f:SI 138)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:893 709 {*thumb2_movsi_insn}
     (nil))

(insn 7 6 9 2 (set (reg:SI 134 [ D.8033 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:893 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))

(insn 9 7 10 2 (set (reg:SI 141)
        (and:SI (reg:SI 134 [ D.8033 ])
            (const_int 12 [0xc]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:893 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.8033 ])
        (nil)))

(insn 10 9 15 2 (set (reg:SI 142)
        (zero_extend:SI (subreg:QI (reg:SI 141) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:893 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 10 18 2 (set (reg/i:SI 0 r0)
        (reg:SI 142)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:894 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 18 15 0 2 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:894 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_HCLKConfig (RCC_HCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_HCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 138 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 137 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 13
;;      reg 136 { d11(bb 2 insn 10) }
;;      reg 138 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(7){ d4(bb 0 insn -1) }u12(13){ d5(bb 0 insn -1) }u13(14){ d6(bb 0 insn -1) }u14(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ tmpreg ]) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 138) in insn 13:
Processing use of (reg 135 [ tmpreg ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137 [ RCC_SYSCLK ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_HCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 137 [ RCC_SYSCLK ])
        (reg:SI 0 r0 [ RCC_SYSCLK ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:917 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_SYSCLK ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 138)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:923 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:923 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -241 [0xffffffffffffff0f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:926 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 13 2 (set (reg/v:SI 136 [ tmpreg ])
        (ior:SI (reg/v:SI 137 [ RCC_SYSCLK ])
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:929 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 137 [ RCC_SYSCLK ])
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 13 10 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 136 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:932 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_DEAD (reg/v:SI 136 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_PCLK1Config (RCC_PCLK1Config)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PCLK1Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 138 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 137 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 13
;;      reg 136 { d11(bb 2 insn 10) }
;;      reg 138 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(7){ d4(bb 0 insn -1) }u12(13){ d5(bb 0 insn -1) }u13(14){ d6(bb 0 insn -1) }u14(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ tmpreg ]) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 138) in insn 13:
Processing use of (reg 135 [ tmpreg ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137 [ RCC_HCLK ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_PCLK1Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 137 [ RCC_HCLK ])
        (reg:SI 0 r0 [ RCC_HCLK ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:949 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_HCLK ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 138)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:955 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:955 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -7169 [0xffffffffffffe3ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:958 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 13 2 (set (reg/v:SI 136 [ tmpreg ])
        (ior:SI (reg/v:SI 137 [ RCC_HCLK ])
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:961 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 137 [ RCC_HCLK ])
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 13 10 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 136 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:964 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_DEAD (reg/v:SI 136 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_PCLK2Config (RCC_PCLK2Config)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PCLK2Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} 
;;    total ref usage 31{15d,16u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 137[11,1] 138[12,1] 139[13,1] 140[14,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 137 138 139 140
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 137 138 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(6)
9, 10, 11, 12, 13, 14
;; rd  kill	(6)
9, 10, 11, 12, 13, 14
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 139 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 138 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 11
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 140 { d14(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 14
;;      reg 137 { d11(bb 2 insn 11) }
;;      reg 139 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(7){ d4(bb 0 insn -1) }u13(13){ d5(bb 0 insn -1) }u14(14){ d6(bb 0 insn -1) }u15(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 139) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 137 [ tmpreg ]) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 139) in insn 14:
Processing use of (reg 135 [ tmpreg ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 140) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 138 [ RCC_HCLK ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_PCLK2Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} 
;;    total ref usage 31{15d,16u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 137[11,1] 138[12,1] 139[13,1] 140[14,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 137 138 139 140
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 137 138 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(6)
9, 10, 11, 12, 13, 14
;; rd  kill	(6)
9, 10, 11, 12, 13, 14

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 138 [ RCC_HCLK ])
        (reg:SI 0 r0 [ RCC_HCLK ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:980 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_HCLK ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 139)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:986 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:986 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -57345 [0xffffffffffff1fff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:989 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 11 2 (set (reg:SI 140)
        (ashift:SI (reg/v:SI 138 [ RCC_HCLK ])
            (const_int 3 [0x3]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:992 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 138 [ RCC_HCLK ])
        (nil)))

(insn 11 10 14 2 (set (reg/v:SI 137 [ tmpreg ])
        (ior:SI (reg:SI 140)
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:992 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 14 11 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 137 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:995 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_DEAD (reg/v:SI 137 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_GetClocksFreq (RCC_GetClocksFreq)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 13 (    1)


RCC_GetClocksFreq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,12u} r13={1d,12u} r14={1d,1u} r24={4d,4u} r25={1d,12u} r26={1d,11u} r134={2d,1u} r135={1d,1u} r137={1d,1u} r140={1d,1u} r141={1d,2u,2e} r143={1d,1u,1e} r147={1d,1u,1e} r150={1d,1u} r155={4d,2u} r156={1d,1u} r157={1d,1u} r158={1d,1u,1e} r159={1d,1u} r162={1d,3u} r163={1d,1u} r164={1d,1u} r165={1d,1u,1e} r166={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u,1e} r173={1d,1u} r177={1d,7u} r178={1d,5u} r179={1d,3u} r180={1d,2u} r181={1d,2u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,2u} r206={1d,3u} r207={1d,3u} r208={1d,1u} r209={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} 
;;    total ref usage 206{70d,129u,7e} in 72{72 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7, 8, 9, 10
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,4] 25[11,1] 26[12,1] 134[13,2] 135[15,1] 137[16,1] 140[17,1] 141[18,1] 143[19,1] 147[20,1] 150[21,1] 155[22,4] 156[26,1] 157[27,1] 158[28,1] 159[29,1] 162[30,1] 163[31,1] 164[32,1] 165[33,1] 166[34,1] 170[35,1] 171[36,1] 172[37,1] 173[38,1] 177[39,1] 178[40,1] 179[41,1] 180[42,1] 181[43,1] 184[44,1] 185[45,1] 187[46,1] 189[47,1] 191[48,1] 192[49,1] 194[50,1] 196[51,1] 198[52,1] 199[53,1] 200[54,1] 201[55,1] 202[56,1] 203[57,1] 204[58,1] 205[59,1] 206[60,1] 207[61,1] 208[62,1] 209[63,1] 212[64,1] 213[65,1] 214[66,1] 217[67,1] 218[68,1] 219[69,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d11(25){ }d12(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 11, 12
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 11, 12
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 11, 12

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d11(bb 0 insn -1) }u3(26){ d12(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 177 178 179
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 177 178 179
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 11, 12
;; rd  gen 	(5)
10, 15, 39, 40, 41
;; rd  kill	(8)
7, 8, 9, 10, 15, 39, 40, 41
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 15, 39, 40, 41
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 14
;;      reg 178 { d40(bb 2 insn 13) }
;;   UD chains for insn luid 3 uid 15
;;      reg 135 { d15(bb 2 insn 14) }
;;   UD chains for insn luid 4 uid 16
;;      reg 179 { d41(bb 2 insn 15) }
;;   UD chains for insn luid 5 uid 17
;;      reg 24 { d10(bb 2 insn 16) }

( 2 )->[3]->( 7 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ d4(bb 0 insn -1) }u10(13){ d5(bb 0 insn -1) }u11(25){ d11(bb 0 insn -1) }u12(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 15, 39, 40, 41
;; rd  gen 	(1)
9
;; rd  kill	(4)
7, 8, 9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 15, 39, 40, 41
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 179 { d41(bb 2 insn 15) }
;;   UD chains for insn luid 1 uid 19
;;      reg 24 { d9(bb 3 insn 18) }

( 3 )->[4]->( 5 11 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(7){ d4(bb 0 insn -1) }u16(13){ d5(bb 0 insn -1) }u17(25){ d11(bb 0 insn -1) }u18(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 179
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 179
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 15, 39, 40, 41
;; rd  gen 	(1)
8
;; rd  kill	(4)
7, 8, 9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 39, 40, 41
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 179 { d41(bb 2 insn 15) }
;;   UD chains for insn luid 1 uid 21
;;      reg 24 { d8(bb 4 insn 20) }

( 4 )->[5]->( 12 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(7){ d4(bb 0 insn -1) }u22(13){ d5(bb 0 insn -1) }u23(25){ d11(bb 0 insn -1) }u24(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 155 180
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; live  gen 	 155 180
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 39, 40, 41
;; rd  gen 	(2)
24, 42
;; rd  kill	(5)
22, 23, 24, 25, 42
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 24, 39, 40, 41, 42
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 28
;;      reg 177 { d39(bb 2 insn 2) }
;;      reg 180 { d42(bb 5 insn 27) }
;;   UD chains for insn luid 2 uid 5
;;      reg 180 { d42(bb 5 insn 27) }

( 2 )->[6]->( 12 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(7){ d4(bb 0 insn -1) }u29(13){ d5(bb 0 insn -1) }u30(25){ d11(bb 0 insn -1) }u31(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 155 181
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; live  gen 	 155 181
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 15, 39, 40, 41
;; rd  gen 	(2)
23, 43
;; rd  kill	(5)
22, 23, 24, 25, 43
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 15, 23, 39, 40, 41, 43
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 35
;;      reg 177 { d39(bb 2 insn 2) }
;;      reg 181 { d43(bb 6 insn 34) }
;;   UD chains for insn luid 2 uid 7
;;      reg 181 { d43(bb 6 insn 34) }

( 3 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u35(7){ d4(bb 0 insn -1) }u36(13){ d5(bb 0 insn -1) }u37(25){ d11(bb 0 insn -1) }u38(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 137 140 141 184 185
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178
;; live  gen 	 24 [cc] 137 140 141 184 185
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 15, 39, 40, 41
;; rd  gen 	(6)
7, 16, 17, 18, 44, 45
;; rd  kill	(9)
7, 8, 9, 10, 16, 17, 18, 44, 45
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 15, 16, 17, 18, 39, 40, 41, 44, 45
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 42
;;      reg 178 { d40(bb 2 insn 13) }
;;   UD chains for insn luid 1 uid 45
;;      reg 178 { d40(bb 2 insn 13) }
;;   UD chains for insn luid 2 uid 46
;;      reg 140 { d17(bb 7 insn 45) }
;;   UD chains for insn luid 3 uid 47
;;      reg 137 { d16(bb 7 insn 42) }
;;   UD chains for insn luid 4 uid 48
;;      reg 184 { d44(bb 7 insn 47) }
;;   UD chains for insn luid 5 uid 49
;;      reg 185 { d45(bb 7 insn 48) }
;;   UD chains for insn luid 6 uid 50
;;      reg 24 { d7(bb 7 insn 49) }

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u46(7){ d4(bb 0 insn -1) }u47(13){ d5(bb 0 insn -1) }u48(25){ d11(bb 0 insn -1) }u49(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 178
;; lr  def 	 134 143 187 189 191 192
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; live  gen 	 134 143 187 189 191 192
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 15, 16, 17, 18, 39, 40, 41, 44, 45
;; rd  gen 	(6)
14, 19, 46, 47, 48, 49
;; rd  kill	(7)
13, 14, 19, 46, 47, 48, 49
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; rd  out 	(25)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 44, 45, 46, 47, 48, 49
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 54
;;      reg 178 { d40(bb 2 insn 13) }
;;   UD chains for insn luid 1 uid 56
;;      reg 143 { d19(bb 8 insn 54) }
;;   eq_note reg 143 { }
;;   UD chains for insn luid 2 uid 57
;;      reg 187 { d46(bb 8 insn 56) }
;;   UD chains for insn luid 4 uid 60
;;      reg 141 { d18(bb 7 insn 46) }
;;      reg 192 { d49(bb 8 insn 59) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 5 uid 61
;;      reg 189 { d47(bb 8 insn 57) }
;;      reg 191 { d48(bb 8 insn 60) }

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u59(7){ d4(bb 0 insn -1) }u60(13){ d5(bb 0 insn -1) }u61(25){ d11(bb 0 insn -1) }u62(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 178
;; lr  def 	 134 147 194 196 198 199
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; live  gen 	 134 147 194 196 198 199
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 15, 16, 17, 18, 39, 40, 41, 44, 45
;; rd  gen 	(6)
13, 20, 50, 51, 52, 53
;; rd  kill	(7)
13, 14, 20, 50, 51, 52, 53
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; rd  out 	(25)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 39, 40, 41, 44, 45, 50, 51, 52, 53
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 68
;;      reg 178 { d40(bb 2 insn 13) }
;;   UD chains for insn luid 1 uid 70
;;      reg 147 { d20(bb 9 insn 68) }
;;   eq_note reg 147 { }
;;   UD chains for insn luid 2 uid 71
;;      reg 194 { d50(bb 9 insn 70) }
;;   UD chains for insn luid 4 uid 74
;;      reg 141 { d18(bb 7 insn 46) }
;;      reg 199 { d53(bb 9 insn 73) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 5 uid 75
;;      reg 196 { d51(bb 9 insn 71) }
;;      reg 198 { d52(bb 9 insn 74) }

( 8 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u72(7){ d4(bb 0 insn -1) }u73(13){ d5(bb 0 insn -1) }u74(25){ d11(bb 0 insn -1) }u75(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 177
;; lr  def 	 150 155 200 201 202 203 204
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; live  gen 	 150 155 200 201 202 203 204
;; live  kill	
;; rd  in  	(31)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53
;; rd  gen 	(7)
21, 25, 54, 55, 56, 57, 58
;; rd  kill	(10)
21, 22, 23, 24, 25, 54, 55, 56, 57, 58
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; rd  out 	(38)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 80
;;      reg 200 { d54(bb 10 insn 79) }
;;   UD chains for insn luid 2 uid 81
;;      reg 150 { d21(bb 10 insn 80) }
;;   UD chains for insn luid 3 uid 82
;;      reg 201 { d55(bb 10 insn 81) }
;;   UD chains for insn luid 4 uid 83
;;      reg 202 { d56(bb 10 insn 82) }
;;   UD chains for insn luid 5 uid 84
;;      reg 203 { d57(bb 10 insn 83) }
;;   UD chains for insn luid 6 uid 85
;;      reg 134 { d14(bb 8 insn 61) d13(bb 9 insn 75) }
;;      reg 204 { d58(bb 10 insn 84) }
;;   UD chains for insn luid 7 uid 86
;;      reg 155 { d25(bb 10 insn 85) }
;;      reg 177 { d39(bb 2 insn 2) }

( 4 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u85(7){ d4(bb 0 insn -1) }u86(13){ d5(bb 0 insn -1) }u87(25){ d11(bb 0 insn -1) }u88(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 155 205
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; live  gen 	 155 205
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 39, 40, 41
;; rd  gen 	(2)
22, 59
;; rd  kill	(5)
22, 23, 24, 25, 59
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 22, 39, 40, 41, 59
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 93
;;      reg 177 { d39(bb 2 insn 2) }
;;      reg 205 { d59(bb 11 insn 92) }
;;   UD chains for insn luid 2 uid 9
;;      reg 205 { d59(bb 11 insn 92) }

( 5 6 10 11 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(7){ d4(bb 0 insn -1) }u93(13){ d5(bb 0 insn -1) }u94(25){ d11(bb 0 insn -1) }u95(26){ d12(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 155 177
;; lr  def 	 156 157 158 159 162 163 164 165 166 170 171 172 173 206 207 208 209 212 213 214 217 218 219
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  gen 	 156 157 158 159 162 163 164 165 166 170 171 172 173 206 207 208 209 212 213 214 217 218 219
;; live  kill	
;; rd  in  	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;; rd  gen 	(23)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69
;; rd  kill	(23)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(69)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 98
;;      reg 206 { d60(bb 12 insn 97) }
;;   UD chains for insn luid 2 uid 99
;;      reg 156 { d26(bb 12 insn 98) }
;;   UD chains for insn luid 3 uid 100
;;      reg 157 { d27(bb 12 insn 99) }
;;   UD chains for insn luid 5 uid 102
;;      reg 158 { d28(bb 12 insn 100) }
;;      reg 207 { d61(bb 12 insn 101) }
;;   eq_note reg 158 { }
;;   UD chains for insn luid 6 uid 103
;;      reg 209 { d63(bb 12 insn 102) }
;;   UD chains for insn luid 7 uid 104
;;      reg 208 { d62(bb 12 insn 103) }
;;   UD chains for insn luid 8 uid 105
;;      reg 155 { d25(bb 10 insn 85) d24(bb 5 insn 5) d23(bb 6 insn 7) d22(bb 11 insn 9) }
;;      reg 159 { d29(bb 12 insn 104) }
;;   UD chains for insn luid 9 uid 106
;;      reg 162 { d30(bb 12 insn 105) }
;;      reg 177 { d39(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 109
;;      reg 206 { d60(bb 12 insn 97) }
;;   UD chains for insn luid 11 uid 110
;;      reg 163 { d31(bb 12 insn 109) }
;;   UD chains for insn luid 12 uid 111
;;      reg 164 { d32(bb 12 insn 110) }
;;   UD chains for insn luid 13 uid 113
;;      reg 165 { d33(bb 12 insn 111) }
;;      reg 207 { d61(bb 12 insn 101) }
;;   eq_note reg 165 { }
;;   UD chains for insn luid 14 uid 114
;;      reg 213 { d65(bb 12 insn 113) }
;;   UD chains for insn luid 15 uid 115
;;      reg 212 { d64(bb 12 insn 114) }
;;   UD chains for insn luid 16 uid 116
;;      reg 162 { d30(bb 12 insn 105) }
;;      reg 166 { d34(bb 12 insn 115) }
;;   UD chains for insn luid 17 uid 117
;;      reg 177 { d39(bb 2 insn 2) }
;;      reg 214 { d66(bb 12 insn 116) }
;;   UD chains for insn luid 18 uid 120
;;      reg 206 { d60(bb 12 insn 97) }
;;   UD chains for insn luid 19 uid 121
;;      reg 170 { d35(bb 12 insn 120) }
;;   UD chains for insn luid 20 uid 122
;;      reg 171 { d36(bb 12 insn 121) }
;;   UD chains for insn luid 21 uid 124
;;      reg 172 { d37(bb 12 insn 122) }
;;      reg 207 { d61(bb 12 insn 101) }
;;   eq_note reg 172 { }
;;   UD chains for insn luid 22 uid 125
;;      reg 218 { d68(bb 12 insn 124) }
;;   UD chains for insn luid 23 uid 126
;;      reg 217 { d67(bb 12 insn 125) }
;;   UD chains for insn luid 24 uid 127
;;      reg 162 { d30(bb 12 insn 105) }
;;      reg 173 { d38(bb 12 insn 126) }
;;   UD chains for insn luid 25 uid 128
;;      reg 177 { d39(bb 2 insn 2) }
;;      reg 219 { d69(bb 12 insn 127) }

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u132(7){ d4(bb 0 insn -1) }u133(13){ d5(bb 0 insn -1) }u134(14){ d6(bb 0 insn -1) }u135(25){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(69)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(69)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 19 to worklist
  Adding insn 21 to worklist
  Adding insn 28 to worklist
  Adding insn 35 to worklist
  Adding insn 50 to worklist
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 54 to worklist
  Adding insn 68 to worklist
  Adding insn 86 to worklist
  Adding insn 80 to worklist
  Adding insn 93 to worklist
  Adding insn 128 to worklist
  Adding insn 124 to worklist
  Adding insn 120 to worklist
  Adding insn 117 to worklist
  Adding insn 113 to worklist
  Adding insn 109 to worklist
  Adding insn 106 to worklist
  Adding insn 102 to worklist
  Adding insn 98 to worklist
Finished finding needed instructions:
Processing use of (reg 206) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 158 [ tmp ]) in insn 102:
  Adding insn 100 to worklist
Processing use of (reg 207) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 157 [ tmp ]) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 156 [ D.8016 ]) in insn 99:
Processing use of (reg 162 [ D.8020 ]) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 177 [ RCC_Clocks ]) in insn 106:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 155 [ prephitmp.50 ]) in insn 105:
  Adding insn 85 to worklist
  Adding insn 5 to worklist
  Adding insn 7 to worklist
  Adding insn 9 to worklist
Processing use of (reg 159 [ D.8017 ]) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 208) in insn 104:
  Adding insn 103 to worklist
Processing use of (subreg (reg 209) 0) in insn 103:
Processing use of (reg 205) in insn 9:
  Adding insn 92 to worklist
Processing use of (reg 181) in insn 7:
  Adding insn 34 to worklist
Processing use of (reg 180) in insn 5:
  Adding insn 27 to worklist
Processing use of (reg 134 [ pllvco ]) in insn 85:
  Adding insn 61 to worklist
  Adding insn 75 to worklist
Processing use of (reg 204) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 203) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 202) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 201) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 150 [ D.8011 ]) in insn 81:
Processing use of (reg 196) in insn 75:
  Adding insn 71 to worklist
Processing use of (reg 198) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 141 [ pllm ]) in insn 74:
  Adding insn 46 to worklist
Processing use of (reg 199) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 140 [ D.7999 ]) in insn 46:
Processing use of (reg 194) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 147 [ D.8008 ]) in insn 70:
Processing use of (reg 189) in insn 61:
  Adding insn 57 to worklist
Processing use of (reg 191) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 141 [ pllm ]) in insn 60:
Processing use of (reg 192) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 187) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 143 [ D.8003 ]) in insn 56:
Processing use of (reg 206) in insn 109:
Processing use of (reg 165 [ tmp ]) in insn 113:
  Adding insn 111 to worklist
Processing use of (reg 207) in insn 113:
Processing use of (reg 164 [ tmp ]) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 163 [ D.8021 ]) in insn 110:
Processing use of (reg 177 [ RCC_Clocks ]) in insn 117:
Processing use of (reg 214) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 162 [ D.8020 ]) in insn 116:
Processing use of (reg 166 [ D.8022 ]) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 212) in insn 115:
  Adding insn 114 to worklist
Processing use of (subreg (reg 213) 0) in insn 114:
Processing use of (reg 206) in insn 120:
Processing use of (reg 172 [ tmp ]) in insn 124:
  Adding insn 122 to worklist
Processing use of (reg 207) in insn 124:
Processing use of (reg 171 [ tmp ]) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 170 [ D.8025 ]) in insn 121:
Processing use of (reg 177 [ RCC_Clocks ]) in insn 128:
Processing use of (reg 219) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 162 [ D.8020 ]) in insn 127:
Processing use of (reg 173 [ D.8026 ]) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 217) in insn 126:
  Adding insn 125 to worklist
Processing use of (subreg (reg 218) 0) in insn 125:
Processing use of (reg 177 [ RCC_Clocks ]) in insn 93:
Processing use of (reg 205) in insn 93:
Processing use of (reg 200) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 155 [ prephitmp.50 ]) in insn 86:
Processing use of (reg 177 [ RCC_Clocks ]) in insn 86:
Processing use of (reg 178) in insn 68:
  Adding insn 13 to worklist
Processing use of (reg 178) in insn 54:
Processing use of (reg 178) in insn 42:
Processing use of (reg 178) in insn 45:
Processing use of (reg 24 cc) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 185) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 184) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 137 [ D.7997 ]) in insn 47:
Processing use of (reg 177 [ RCC_Clocks ]) in insn 35:
Processing use of (reg 181) in insn 35:
Processing use of (reg 177 [ RCC_Clocks ]) in insn 28:
Processing use of (reg 180) in insn 28:
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 179) in insn 20:
  Adding insn 15 to worklist
Processing use of (reg 135 [ D.7996 ]) in insn 15:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 179) in insn 18:
Processing use of (reg 178) in insn 14:
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 179) in insn 16:


RCC_GetClocksFreq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,12u} r13={1d,12u} r14={1d,1u} r24={4d,4u} r25={1d,12u} r26={1d,11u} r134={2d,1u} r135={1d,1u} r137={1d,1u} r140={1d,1u} r141={1d,2u,2e} r143={1d,1u,1e} r147={1d,1u,1e} r150={1d,1u} r155={4d,2u} r156={1d,1u} r157={1d,1u} r158={1d,1u,1e} r159={1d,1u} r162={1d,3u} r163={1d,1u} r164={1d,1u} r165={1d,1u,1e} r166={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u,1e} r173={1d,1u} r177={1d,7u} r178={1d,5u} r179={1d,3u} r180={1d,2u} r181={1d,2u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,2u} r206={1d,3u} r207={1d,3u} r208={1d,1u} r209={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} 
;;    total ref usage 206{70d,129u,7e} in 72{72 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7, 8, 9, 10
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,4] 25[11,1] 26[12,1] 134[13,2] 135[15,1] 137[16,1] 140[17,1] 141[18,1] 143[19,1] 147[20,1] 150[21,1] 155[22,4] 156[26,1] 157[27,1] 158[28,1] 159[29,1] 162[30,1] 163[31,1] 164[32,1] 165[33,1] 166[34,1] 170[35,1] 171[36,1] 172[37,1] 173[38,1] 177[39,1] 178[40,1] 179[41,1] 180[42,1] 181[43,1] 184[44,1] 185[45,1] 187[46,1] 189[47,1] 191[48,1] 192[49,1] 194[50,1] 196[51,1] 198[52,1] 199[53,1] 200[54,1] 201[55,1] 202[56,1] 203[57,1] 204[58,1] 205[59,1] 206[60,1] 207[61,1] 208[62,1] 209[63,1] 212[64,1] 213[65,1] 214[66,1] 217[67,1] 218[68,1] 219[69,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 177 178 179
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 177 178 179
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 11, 12
;; rd  gen 	(5)
10, 15, 39, 40, 41
;; rd  kill	(8)
7, 8, 9, 10, 15, 39, 40, 41

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 10 3 2 (set (reg/v/f:SI 177 [ RCC_Clocks ])
        (reg:SI 0 r0 [ RCC_Clocks ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1032 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_Clocks ])
        (nil)))

(note 3 2 13 2 NOTE_INSN_FUNCTION_BEG)

(insn 13 3 14 2 (set (reg/f:SI 178)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1036 709 {*thumb2_movsi_insn}
     (nil))

(insn 14 13 15 2 (set (reg:SI 135 [ D.7996 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 178)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1036 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (nil)))

(insn 15 14 16 2 (set (reg:SI 179)
        (and:SI (reg:SI 135 [ D.7996 ])
            (const_int 12 [0xc]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1036 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 135 [ D.7996 ])
        (nil)))

(insn 16 15 17 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 17 16 131 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil)))
 -> 31)
;; End of basic block 2 -> ( 6 3)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 15, 39, 40, 41


;; Succ edge  6 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 15, 39, 40, 41
;; rd  gen 	(1)
9
;; rd  kill	(4)
7, 8, 9, 10

;; Pred edge  2 [71.0%]  (fallthru)
(note 131 17 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 131 19 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 19 18 132 3 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil)))
 -> 38)
;; End of basic block 3 -> ( 7 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178 179
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 15, 39, 40, 41


;; Succ edge  7 [29.0%] 
;; Succ edge  4 [71.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(7){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 179
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 179
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 15, 39, 40, 41
;; rd  gen 	(1)
8
;; rd  kill	(4)
7, 8, 9, 10

;; Pred edge  3 [71.0%]  (fallthru)
(note 132 19 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 132 21 4 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn 21 20 24 4 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 24)
;; End of basic block 4 -> ( 5 11)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 39, 40, 41


;; Succ edge  5 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(7){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 155 180
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; live  gen 	 155 180
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 39, 40, 41
;; rd  gen 	(2)
24, 42
;; rd  kill	(5)
22, 23, 24, 25, 42

;; Pred edge  4 [50.0%] 
(code_label 24 21 25 5 31 "" [1 uses])

(note 25 24 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 25 28 5 (set (reg:SI 180)
        (const_int 16000000 [0xf42400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1041 709 {*thumb2_movsi_insn}
     (nil))

(insn 28 27 5 5 (set (mem/s:SI (reg/v/f:SI 177 [ RCC_Clocks ]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
        (reg:SI 180)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1041 709 {*thumb2_movsi_insn}
     (nil))

(insn 5 28 31 5 (set (reg:SI 155 [ prephitmp.50 ])
        (reg:SI 180)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1042 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (const_int 16000000 [0xf42400])
            (nil))))
;; End of basic block 5 -> ( 12)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 24, 39, 40, 41, 42


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(7){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 155 181
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; live  gen 	 155 181
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 15, 39, 40, 41
;; rd  gen 	(2)
23, 43
;; rd  kill	(5)
22, 23, 24, 25, 43

;; Pred edge  2 [29.0%] 
(code_label 31 5 32 6 32 "" [1 uses])

(note 32 31 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 32 35 6 (set (reg:SI 181)
        (const_int 8000000 [0x7a1200])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1044 709 {*thumb2_movsi_insn}
     (nil))

(insn 35 34 7 6 (set (mem/s:SI (reg/v/f:SI 177 [ RCC_Clocks ]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
        (reg:SI 181)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1044 709 {*thumb2_movsi_insn}
     (nil))

(insn 7 35 38 6 (set (reg:SI 155 [ prephitmp.50 ])
        (reg:SI 181)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1045 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_EQUAL (const_int 8000000 [0x7a1200])
            (nil))))
;; End of basic block 6 -> ( 12)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 15, 23, 39, 40, 41, 43


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u35(7){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 137 140 141 184 185
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177 178
;; live  gen 	 24 [cc] 137 140 141 184 185
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 15, 39, 40, 41
;; rd  gen 	(6)
7, 16, 17, 18, 44, 45
;; rd  kill	(9)
7, 8, 9, 10, 16, 17, 18, 44, 45

;; Pred edge  3 [29.0%] 
(code_label 38 7 39 7 33 "" [1 uses])

(note 39 38 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 39 45 7 (set (reg:SI 137 [ D.7997 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 178)
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1051 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (nil)))

(insn 45 42 46 7 (set (reg:SI 140 [ D.7999 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 178)
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1052 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (nil)))

(insn 46 45 47 7 (set (reg/v:SI 141 [ pllm ])
        (and:SI (reg:SI 140 [ D.7999 ])
            (const_int 63 [0x3f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1052 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 140 [ D.7999 ])
        (nil)))

(insn 47 46 48 7 (set (reg:SI 184)
        (and:SI (reg:SI 137 [ D.7997 ])
            (const_int 4194304 [0x400000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1051 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 137 [ D.7997 ])
        (nil)))

(insn 48 47 49 7 (set (reg:SI 185)
        (lshiftrt:SI (reg:SI 184)
            (const_int 22 [0x16]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1051 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 49 48 50 7 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1054 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 50 49 51 7 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1054 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 64)
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 15, 16, 17, 18, 39, 40, 41, 44, 45


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u46(7){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 178
;; lr  def 	 134 143 187 189 191 192
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; live  gen 	 134 143 187 189 191 192
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 15, 16, 17, 18, 39, 40, 41, 44, 45
;; rd  gen 	(6)
14, 19, 46, 47, 48, 49
;; rd  kill	(7)
13, 14, 19, 46, 47, 48, 49

;; Pred edge  7 [50.0%]  (fallthru)
(note 51 50 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 54 51 56 8 (set (reg:SI 143 [ D.8003 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 178)
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
            (nil))))

(insn 56 54 57 8 (set (reg:SI 187)
        (and:SI (reg:SI 143 [ D.8003 ])
            (const_int 32704 [0x7fc0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 143 [ D.8003 ])
        (expr_list:REG_EQUAL (and:SI (reg:SI 143 [ D.8003 ])
                (const_int 32704 [0x7fc0]))
            (nil))))

(insn 57 56 59 8 (set (reg:SI 189)
        (lshiftrt:SI (reg:SI 187)
            (const_int 6 [0x6]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(insn 59 57 60 8 (set (reg:SI 192)
        (const_int 8000000 [0x7a1200])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 709 {*thumb2_movsi_insn}
     (nil))

(insn 60 59 61 8 (set (reg:SI 191)
        (udiv:SI (reg:SI 192)
            (reg/v:SI 141 [ pllm ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 133 {udivsi3}
     (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg/v:SI 141 [ pllm ])
            (expr_list:REG_EQUAL (udiv:SI (const_int 8000000 [0x7a1200])
                    (reg/v:SI 141 [ pllm ]))
                (nil)))))

(insn 61 60 64 8 (set (reg/v:SI 134 [ pllvco ])
        (mult:SI (reg:SI 191)
            (reg:SI 189))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 34 {*arm_mulsi3_v6}
     (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_DEAD (reg:SI 189)
            (nil))))
;; End of basic block 8 -> ( 10)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; rd  out 	(25)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 44, 45, 46, 47, 48, 49


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u59(7){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 141 178
;; lr  def 	 134 147 194 196 198 199
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 177 178
;; live  gen 	 134 147 194 196 198 199
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 15, 16, 17, 18, 39, 40, 41, 44, 45
;; rd  gen 	(6)
13, 20, 50, 51, 52, 53
;; rd  kill	(7)
13, 14, 20, 50, 51, 52, 53

;; Pred edge  7 [50.0%] 
(code_label 64 61 65 9 35 "" [1 uses])

(note 65 64 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 68 65 70 9 (set (reg:SI 147 [ D.8008 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 178)
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
            (nil))))

(insn 70 68 71 9 (set (reg:SI 194)
        (and:SI (reg:SI 147 [ D.8008 ])
            (const_int 32704 [0x7fc0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 147 [ D.8008 ])
        (expr_list:REG_EQUAL (and:SI (reg:SI 147 [ D.8008 ])
                (const_int 32704 [0x7fc0]))
            (nil))))

(insn 71 70 73 9 (set (reg:SI 196)
        (lshiftrt:SI (reg:SI 194)
            (const_int 6 [0x6]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 73 71 74 9 (set (reg:SI 199)
        (const_int 16000000 [0xf42400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 709 {*thumb2_movsi_insn}
     (nil))

(insn 74 73 75 9 (set (reg:SI 198)
        (udiv:SI (reg:SI 199)
            (reg/v:SI 141 [ pllm ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 133 {udivsi3}
     (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg/v:SI 141 [ pllm ])
            (expr_list:REG_EQUAL (udiv:SI (const_int 16000000 [0xf42400])
                    (reg/v:SI 141 [ pllm ]))
                (nil)))))

(insn 75 74 76 9 (set (reg/v:SI 134 [ pllvco ])
        (mult:SI (reg:SI 198)
            (reg:SI 196))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 34 {*arm_mulsi3_v6}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_DEAD (reg:SI 196)
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; rd  out 	(25)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 39, 40, 41, 44, 45, 50, 51, 52, 53


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u72(7){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 177
;; lr  def 	 150 155 200 201 202 203 204
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 177
;; live  gen 	 150 155 200 201 202 203 204
;; live  kill	
;; rd  in  	(31)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53
;; rd  gen 	(7)
21, 25, 54, 55, 56, 57, 58
;; rd  kill	(10)
21, 22, 23, 24, 25, 54, 55, 56, 57, 58

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 76 75 77 10 36 "" [0 uses])

(note 77 76 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 79 77 80 10 (set (reg/f:SI 200)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 709 {*thumb2_movsi_insn}
     (nil))

(insn 80 79 81 10 (set (reg:SI 150 [ D.8011 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 200)
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
            (nil))))

(insn 81 80 82 10 (set (reg:SI 201)
        (and:SI (reg:SI 150 [ D.8011 ])
            (const_int 196608 [0x30000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 150 [ D.8011 ])
        (nil)))

(insn 82 81 83 10 (set (reg:SI 202)
        (lshiftrt:SI (reg:SI 201)
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 83 82 84 10 (set (reg:SI 203)
        (plus:SI (reg:SI 202)
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 84 83 85 10 (set (reg:SI 204)
        (ashift:SI (reg:SI 203)
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn 85 84 86 10 (set (reg:SI 155 [ prephitmp.50 ])
        (udiv:SI (reg/v:SI 134 [ pllvco ])
            (reg:SI 204))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1066 133 {udivsi3}
     (expr_list:REG_DEAD (reg:SI 204)
        (expr_list:REG_DEAD (reg/v:SI 134 [ pllvco ])
            (nil))))

(insn 86 85 90 10 (set (mem/s:SI (reg/v/f:SI 177 [ RCC_Clocks ]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
        (reg:SI 155 [ prephitmp.50 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1066 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; rd  out 	(38)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u85(7){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 155 205
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; live  gen 	 155 205
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 39, 40, 41
;; rd  gen 	(2)
22, 59
;; rd  kill	(5)
22, 23, 24, 25, 59

;; Pred edge  4 [50.0%]  (fallthru)
(note 90 86 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 92 90 93 11 (set (reg:SI 205)
        (const_int 16000000 [0xf42400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1069 709 {*thumb2_movsi_insn}
     (nil))

(insn 93 92 9 11 (set (mem/s:SI (reg/v/f:SI 177 [ RCC_Clocks ]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
        (reg:SI 205)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1069 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 93 94 11 (set (reg:SI 155 [ prephitmp.50 ])
        (reg:SI 205)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1070 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_EQUAL (const_int 16000000 [0xf42400])
            (nil))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 15, 22, 39, 40, 41, 59


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(7){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 155 177
;; lr  def 	 156 157 158 159 162 163 164 165 166 170 171 172 173 206 207 208 209 212 213 214 217 218 219
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 177
;; live  gen 	 156 157 158 159 162 163 164 165 166 170 171 172 173 206 207 208 209 212 213 214 217 218 219
;; live  kill	
;; rd  in  	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;; rd  gen 	(23)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69
;; rd  kill	(23)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 94 9 95 12 34 "" [0 uses])

(note 95 94 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 97 95 98 12 (set (reg/f:SI 206)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1075 709 {*thumb2_movsi_insn}
     (nil))

(insn 98 97 99 12 (set (reg:SI 156 [ D.8016 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 206)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1075 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (nil)))

(insn 99 98 100 12 (set (reg/v:SI 157 [ tmp ])
        (and:SI (reg:SI 156 [ D.8016 ])
            (const_int 240 [0xf0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1075 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 156 [ D.8016 ])
        (nil)))

(insn 100 99 101 12 (set (reg/v:SI 158 [ tmp ])
        (lshiftrt:SI (reg/v:SI 157 [ tmp ])
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1076 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 157 [ tmp ])
        (nil)))

(insn 101 100 102 12 (set (reg/f:SI 207)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1077 709 {*thumb2_movsi_insn}
     (nil))

(insn 102 101 103 12 (set (reg:SI 209)
        (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/f:SI 207)
                    (reg/v:SI 158 [ tmp ])) [0 APBAHBPrescTable S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1077 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg/v:SI 158 [ tmp ])
        (expr_list:REG_EQUAL (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/v:SI 158 [ tmp ])
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 APBAHBPrescTable S1 A8]))
            (nil))))

(insn 103 102 104 12 (set (reg:QI 208)
        (subreg:QI (reg:SI 209) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1077 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 209)
        (nil)))

(insn 104 103 105 12 (set (reg:SI 159 [ D.8017 ])
        (zero_extend:SI (reg:QI 208))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1077 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 208)
        (nil)))

(insn 105 104 106 12 (set (reg:SI 162 [ D.8020 ])
        (lshiftrt:SI (reg:SI 155 [ prephitmp.50 ])
            (reg:SI 159 [ D.8017 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1079 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 159 [ D.8017 ])
        (expr_list:REG_DEAD (reg:SI 155 [ prephitmp.50 ])
            (nil))))

(insn 106 105 109 12 (set (mem/s:SI (plus:SI (reg/v/f:SI 177 [ RCC_Clocks ])
                (const_int 4 [0x4])) [3 RCC_Clocks_11(D)->HCLK_Frequency+0 S4 A32])
        (reg:SI 162 [ D.8020 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1079 709 {*thumb2_movsi_insn}
     (nil))

(insn 109 106 110 12 (set (reg:SI 163 [ D.8021 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 206)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1082 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (nil)))

(insn 110 109 111 12 (set (reg/v:SI 164 [ tmp ])
        (and:SI (reg:SI 163 [ D.8021 ])
            (const_int 7168 [0x1c00]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1082 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 163 [ D.8021 ])
        (nil)))

(insn 111 110 113 12 (set (reg/v:SI 165 [ tmp ])
        (lshiftrt:SI (reg/v:SI 164 [ tmp ])
            (const_int 10 [0xa]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1083 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 164 [ tmp ])
        (nil)))

(insn 113 111 114 12 (set (reg:SI 213)
        (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/f:SI 207)
                    (reg/v:SI 165 [ tmp ])) [0 APBAHBPrescTable S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1084 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg/v:SI 165 [ tmp ])
        (expr_list:REG_EQUAL (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/v:SI 165 [ tmp ])
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 APBAHBPrescTable S1 A8]))
            (nil))))

(insn 114 113 115 12 (set (reg:QI 212)
        (subreg:QI (reg:SI 213) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1084 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 213)
        (nil)))

(insn 115 114 116 12 (set (reg:SI 166 [ D.8022 ])
        (zero_extend:SI (reg:QI 212))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1084 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 212)
        (nil)))

(insn 116 115 117 12 (set (reg:SI 214)
        (lshiftrt:SI (reg:SI 162 [ D.8020 ])
            (reg:SI 166 [ D.8022 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1086 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 166 [ D.8022 ])
        (nil)))

(insn 117 116 120 12 (set (mem/s:SI (plus:SI (reg/v/f:SI 177 [ RCC_Clocks ])
                (const_int 8 [0x8])) [3 RCC_Clocks_11(D)->PCLK1_Frequency+0 S4 A32])
        (reg:SI 214)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1086 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(insn 120 117 121 12 (set (reg:SI 170 [ D.8025 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 206)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1089 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 206)
        (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
            (nil))))

(insn 121 120 122 12 (set (reg/v:SI 171 [ tmp ])
        (and:SI (reg:SI 170 [ D.8025 ])
            (const_int 57344 [0xe000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1089 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 170 [ D.8025 ])
        (nil)))

(insn 122 121 124 12 (set (reg/v:SI 172 [ tmp ])
        (lshiftrt:SI (reg/v:SI 171 [ tmp ])
            (const_int 13 [0xd]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1090 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 171 [ tmp ])
        (nil)))

(insn 124 122 125 12 (set (reg:SI 218)
        (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/f:SI 207)
                    (reg/v:SI 172 [ tmp ])) [0 APBAHBPrescTable S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1091 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg/f:SI 207)
        (expr_list:REG_DEAD (reg/v:SI 172 [ tmp ])
            (expr_list:REG_EQUAL (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/v:SI 172 [ tmp ])
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 APBAHBPrescTable S1 A8]))
                (nil)))))

(insn 125 124 126 12 (set (reg:QI 217)
        (subreg:QI (reg:SI 218) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1091 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 218)
        (nil)))

(insn 126 125 127 12 (set (reg:SI 173 [ D.8026 ])
        (zero_extend:SI (reg:QI 217))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1091 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 217)
        (nil)))

(insn 127 126 128 12 (set (reg:SI 219)
        (lshiftrt:SI (reg:SI 162 [ D.8020 ])
            (reg:SI 173 [ D.8026 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1093 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 173 [ D.8026 ])
        (expr_list:REG_DEAD (reg:SI 162 [ D.8020 ])
            (nil))))

(insn 128 127 0 12 (set (mem/s:SI (plus:SI (reg/v/f:SI 177 [ RCC_Clocks ])
                (const_int 12 [0xc])) [3 RCC_Clocks_11(D)->PCLK2_Frequency+0 S4 A32])
        (reg:SI 219)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1093 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 219)
        (expr_list:REG_DEAD (reg/v/f:SI 177 [ RCC_Clocks ])
            (nil))))
;; End of basic block 12 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(69)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_RTCCLKConfig (RCC_RTCCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


RCC_RTCCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,4u} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,3u,2e} r143={1d,1u} r144={1d,2u} r145={1d,1u} r146={1d,1u} r148={1d,2u} r149={1d,1u} r150={1d,1u} 
;;    total ref usage 60{23d,35u,2e} in 17{17 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 135[10,1] 136[11,1] 138[12,1] 139[13,1] 141[14,1] 142[15,1] 143[16,1] 144[17,1] 145[18,1] 146[19,1] 148[20,1] 149[21,1] 150[22,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 143
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 143
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 15, 16
;; rd  kill	(3)
7, 15, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 142 { d15(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 143 { d16(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 135 136 138 144 145 146
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 135 136 138 144 145 146
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16
;; rd  gen 	(6)
10, 11, 12, 17, 18, 19
;; rd  kill	(6)
10, 11, 12, 17, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 144 { d17(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 135 { d10(bb 3 insn 12) }
;;   UD chains for insn luid 3 uid 14
;;      reg 142 { d15(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 15
;;      reg 146 { d19(bb 3 insn 14) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 5 uid 16
;;      reg 136 { d11(bb 3 insn 13) }
;;      reg 145 { d18(bb 3 insn 15) }
;;   UD chains for insn luid 6 uid 19
;;      reg 138 { d12(bb 3 insn 16) }
;;      reg 144 { d17(bb 3 insn 11) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(7){ d4(bb 0 insn -1) }u22(13){ d5(bb 0 insn -1) }u23(25){ d8(bb 0 insn -1) }u24(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 139 141 148 149 150
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 139 141 148 149 150
;; live  kill	
;; rd  in  	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19
;; rd  gen 	(5)
13, 14, 20, 21, 22
;; rd  kill	(5)
13, 14, 20, 21, 22
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 24
;;      reg 148 { d20(bb 4 insn 23) }
;;   UD chains for insn luid 2 uid 25
;;      reg 142 { d15(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 26
;;      reg 150 { d22(bb 4 insn 25) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 4 uid 27
;;      reg 139 { d13(bb 4 insn 24) }
;;      reg 149 { d21(bb 4 insn 26) }
;;   UD chains for insn luid 5 uid 30
;;      reg 141 { d14(bb 4 insn 27) }
;;      reg 148 { d20(bb 4 insn 23) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(7){ d4(bb 0 insn -1) }u34(13){ d5(bb 0 insn -1) }u35(14){ d6(bb 0 insn -1) }u36(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 19 to worklist
  Adding insn 12 to worklist
  Adding insn 30 to worklist
  Adding insn 24 to worklist
Finished finding needed instructions:
Processing use of (reg 148) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 141 [ D.7994 ]) in insn 30:
  Adding insn 27 to worklist
Processing use of (reg 148) in insn 30:
Processing use of (reg 139 [ D.7992 ]) in insn 27:
Processing use of (reg 149) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 150) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 142 [ RCC_RTCCLKSource ]) in insn 25:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 144) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 138 [ tmpreg ]) in insn 19:
  Adding insn 16 to worklist
Processing use of (reg 144) in insn 19:
Processing use of (reg 136 [ tmpreg ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 145) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 146) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 142 [ RCC_RTCCLKSource ]) in insn 14:
Processing use of (reg 135 [ tmpreg ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 143) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 142 [ RCC_RTCCLKSource ]) in insn 6:


RCC_RTCCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,4u} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,3u,2e} r143={1d,1u} r144={1d,2u} r145={1d,1u} r146={1d,1u} r148={1d,2u} r149={1d,1u} r150={1d,1u} 
;;    total ref usage 60{23d,35u,2e} in 17{17 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 135[10,1] 136[11,1] 138[12,1] 139[13,1] 141[14,1] 142[15,1] 143[16,1] 144[17,1] 145[18,1] 146[19,1] 148[20,1] 149[21,1] 150[22,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 143
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 143
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 15, 16
;; rd  kill	(3)
7, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 142 [ RCC_RTCCLKSource ])
        (reg:SI 0 r0 [ RCC_RTCCLKSource ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1157 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_RTCCLKSource ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 (set (reg:SI 143)
        (and:SI (reg/v:SI 142 [ RCC_RTCCLKSource ])
            (const_int 768 [0x300]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1163 69 {*arm_andsi3_insn}
     (nil))

(insn 7 6 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 768 [0x300]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1163 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1163 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil)))
 -> 20)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16


;; Succ edge  3 [37.8%]  (fallthru)
;; Succ edge  4 [62.2%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 135 136 138 144 145 146
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 135 136 138 144 145 146
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16
;; rd  gen 	(6)
10, 11, 12, 17, 18, 19
;; rd  kill	(6)
10, 11, 12, 17, 18, 19

;; Pred edge  2 [37.8%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 144)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1165 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg/v:SI 135 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 144)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1165 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (nil)))

(insn 13 12 14 3 (set (reg/v:SI 136 [ tmpreg ])
        (and:SI (reg/v:SI 135 [ tmpreg ])
            (const_int -2031617 [0xffffffffffe0ffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1168 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
        (nil)))

(insn 14 13 15 3 (set (reg:SI 146)
        (and:SI (reg/v:SI 142 [ RCC_RTCCLKSource ])
            (const_int 268435455 [0xfffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1171 69 {*arm_andsi3_insn}
     (nil))

(insn 15 14 16 3 (set (reg:SI 145)
        (and:SI (reg:SI 146)
            (const_int -769 [0xfffffffffffffcff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1171 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 142 [ RCC_RTCCLKSource ])
                (const_int 268434687 [0xffffcff]))
            (nil))))

(insn 16 15 19 3 (set (reg/v:SI 138 [ tmpreg ])
        (ior:SI (reg:SI 145)
            (reg/v:SI 136 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1171 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/v:SI 136 [ tmpreg ])
            (nil))))

(insn 19 16 20 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 144)
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 138 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1174 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 144)
        (expr_list:REG_DEAD (reg/v:SI 138 [ tmpreg ])
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(7){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 139 141 148 149 150
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 139 141 148 149 150
;; live  kill	
;; rd  in  	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19
;; rd  gen 	(5)
13, 14, 20, 21, 22
;; rd  kill	(5)
13, 14, 20, 21, 22

;; Pred edge  2 [62.2%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 20 19 21 4 40 "" [1 uses])

(note 21 20 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 21 24 4 (set (reg/f:SI 148)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 709 {*thumb2_movsi_insn}
     (nil))

(insn 24 23 25 4 (set (reg:SI 139 [ D.7992 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 148)
                (const_int 112 [0x70])) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887344 [0x40023870]) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])
        (nil)))

(insn 25 24 26 4 (set (reg:SI 150)
        (ashift:SI (reg/v:SI 142 [ RCC_RTCCLKSource ])
            (const_int 20 [0x14]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg/v:SI 142 [ RCC_RTCCLKSource ])
        (nil)))

(insn 26 25 27 4 (set (reg:SI 149)
        (lshiftrt:SI (reg:SI 150)
            (const_int 20 [0x14]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 142 [ RCC_RTCCLKSource ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 27 26 30 4 (set (reg:SI 141 [ D.7994 ])
        (ior:SI (reg:SI 149)
            (reg:SI 139 [ D.7992 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg:SI 139 [ D.7992 ])
            (nil))))

(insn 30 27 0 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 148)
                (const_int 112 [0x70])) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])
        (reg:SI 141 [ D.7994 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_DEAD (reg:SI 141 [ D.7994 ])
            (nil))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_RTCCLKCmd (RCC_RTCCLKCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_RTCCLKCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 135 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 135 [ NewState ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_RTCCLKCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 135 [ NewState ])
        (reg:SI 0 r0 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1189 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ NewState ])
        (nil)))

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 9 2 (set (reg/f:SI 136)
        (const_int 1111952956 [0x42470e3c])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1193 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111952956B]+0 S4 A32])
        (reg/v:SI 135 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1193 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 135 [ NewState ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_BackupResetCmd (RCC_BackupResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_BackupResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 135 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 135 [ NewState ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_BackupResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 135[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 135 [ NewState ])
        (reg:SI 0 r0 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1206 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ NewState ])
        (nil)))

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 9 2 (set (reg/f:SI 136)
        (const_int 1111952960 [0x42470e40])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1209 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111952960B]+0 S4 A32])
        (reg/v:SI 135 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1209 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 135 [ NewState ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_I2SCLKConfig (RCC_I2SCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_I2SCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 134 [ RCC_I2SCLKSource ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_I2SCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 134 [ RCC_I2SCLKSource ])
        (reg:SI 0 r0 [ RCC_I2SCLKSource ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1223 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_I2SCLKSource ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 136)
        (const_int 1111949660 [0x4247015c])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1227 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111949660B]+0 S4 A32])
        (reg/v:SI 134 [ RCC_I2SCLKSource ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1227 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 134 [ RCC_I2SCLKSource ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_SAIPLLI2SClkDivConfig (RCC_SAIPLLI2SClkDivConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SAIPLLI2SClkDivConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} 
;;    total ref usage 31{15d,16u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 137[11,1] 138[12,1] 139[13,1] 140[14,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 137 138 139 140
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 137 138 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(6)
9, 10, 11, 12, 13, 14
;; rd  kill	(6)
9, 10, 11, 12, 13, 14
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 139 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 138 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 11
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 140 { d14(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 14
;;      reg 137 { d11(bb 2 insn 11) }
;;      reg 139 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(7){ d4(bb 0 insn -1) }u13(13){ d5(bb 0 insn -1) }u14(14){ d6(bb 0 insn -1) }u15(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 139) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 137 [ tmpreg ]) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 139) in insn 14:
Processing use of (reg 135 [ tmpreg ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 140) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 138 [ RCC_PLLI2SDivQ ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_SAIPLLI2SClkDivConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} 
;;    total ref usage 31{15d,16u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 137[11,1] 138[12,1] 139[13,1] 140[14,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 137 138 139 140
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 137 138 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(6)
9, 10, 11, 12, 13, 14
;; rd  kill	(6)
9, 10, 11, 12, 13, 14

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 138 [ RCC_PLLI2SDivQ ])
        (reg:SI 0 r0 [ RCC_PLLI2SDivQ ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1244 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_PLLI2SDivQ ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 139)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1250 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 139)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1250 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -32 [0xffffffffffffffe0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1253 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 11 2 (set (reg:SI 140)
        (plus:SI (reg/v:SI 138 [ RCC_PLLI2SDivQ ])
            (const_int -1 [0xffffffffffffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1256 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v:SI 138 [ RCC_PLLI2SDivQ ])
        (nil)))

(insn 11 10 14 2 (set (reg/v:SI 137 [ tmpreg ])
        (ior:SI (reg:SI 140)
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1256 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 14 11 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 139)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 137 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1259 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_DEAD (reg/v:SI 137 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_SAIPLLSAIClkDivConfig (RCC_SAIPLLSAIClkDivConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SAIPLLSAIClkDivConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 33{16d,17u,0e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 138[11,1] 139[12,1] 140[13,1] 141[14,1] 142[15,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 138 139 140 141 142
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 138 139 140 141 142
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(7)
9, 10, 11, 12, 13, 14, 15
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 140 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 139 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 11
;;      reg 141 { d14(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 142 { d15(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 15
;;      reg 138 { d11(bb 2 insn 12) }
;;      reg 140 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u13(7){ d4(bb 0 insn -1) }u14(13){ d5(bb 0 insn -1) }u15(14){ d6(bb 0 insn -1) }u16(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 140) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 138 [ tmpreg ]) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 140) in insn 15:
Processing use of (reg 135 [ tmpreg ]) in insn 12:
  Adding insn 9 to worklist
Processing use of (reg 142) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 141) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 139 [ RCC_PLLSAIDivQ ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_SAIPLLSAIClkDivConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 33{16d,17u,0e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 138[11,1] 139[12,1] 140[13,1] 141[14,1] 142[15,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 138 139 140 141 142
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 138 139 140 141 142
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(7)
9, 10, 11, 12, 13, 14, 15
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 139 [ RCC_PLLSAIDivQ ])
        (reg:SI 0 r0 [ RCC_PLLSAIDivQ ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1276 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_PLLSAIDivQ ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 140)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1282 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1282 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -7937 [0xffffffffffffe0ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1285 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 11 2 (set (reg:SI 141)
        (plus:SI (reg/v:SI 139 [ RCC_PLLSAIDivQ ])
            (const_int -1 [0xffffffffffffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1288 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_PLLSAIDivQ ])
        (nil)))

(insn 11 10 12 2 (set (reg:SI 142)
        (ashift:SI (reg:SI 141)
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1288 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 12 11 15 2 (set (reg/v:SI 138 [ tmpreg ])
        (ior:SI (reg:SI 142)
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1288 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 15 12 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 138 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1291 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_DEAD (reg/v:SI 138 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_SAIBlockACLKConfig (RCC_SAIBlockACLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SAIBlockACLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 138 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 137 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 13
;;      reg 136 { d11(bb 2 insn 10) }
;;      reg 138 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(7){ d4(bb 0 insn -1) }u12(13){ d5(bb 0 insn -1) }u13(14){ d6(bb 0 insn -1) }u14(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ tmpreg ]) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 138) in insn 13:
Processing use of (reg 135 [ tmpreg ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137 [ RCC_SAIBlockACLKSource ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_SAIBlockACLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 137 [ RCC_SAIBlockACLKSource ])
        (reg:SI 0 r0 [ RCC_SAIBlockACLKSource ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1312 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_SAIBlockACLKSource ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 138)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1318 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1318 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -3145729 [0xffffffffffcfffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1321 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 13 2 (set (reg/v:SI 136 [ tmpreg ])
        (ior:SI (reg/v:SI 137 [ RCC_SAIBlockACLKSource ])
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1324 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 137 [ RCC_SAIBlockACLKSource ])
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 13 10 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 136 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1327 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_DEAD (reg/v:SI 136 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_SAIBlockBCLKConfig (RCC_SAIBlockBCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SAIBlockBCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 138 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 137 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 13
;;      reg 136 { d11(bb 2 insn 10) }
;;      reg 138 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(7){ d4(bb 0 insn -1) }u12(13){ d5(bb 0 insn -1) }u13(14){ d6(bb 0 insn -1) }u14(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ tmpreg ]) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 138) in insn 13:
Processing use of (reg 135 [ tmpreg ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137 [ RCC_SAIBlockBCLKSource ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_SAIBlockBCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 137 [ RCC_SAIBlockBCLKSource ])
        (reg:SI 0 r0 [ RCC_SAIBlockBCLKSource ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1348 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_SAIBlockBCLKSource ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 138)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1354 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1354 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -12582913 [0xffffffffff3fffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1357 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 13 2 (set (reg/v:SI 136 [ tmpreg ])
        (ior:SI (reg/v:SI 137 [ RCC_SAIBlockBCLKSource ])
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1360 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 137 [ RCC_SAIBlockBCLKSource ])
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 13 10 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 136 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1363 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_DEAD (reg/v:SI 136 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_LTDCCLKDivConfig (RCC_LTDCCLKDivConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_LTDCCLKDivConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 138 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d9(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 135 { d10(bb 2 insn 9) }
;;      reg 137 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 13
;;      reg 136 { d11(bb 2 insn 10) }
;;      reg 138 { d13(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(7){ d4(bb 0 insn -1) }u12(13){ d5(bb 0 insn -1) }u13(14){ d6(bb 0 insn -1) }u14(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ tmpreg ]) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 138) in insn 13:
Processing use of (reg 135 [ tmpreg ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137 [ RCC_PLLSAIDivR ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tmpreg ]) in insn 9:


RCC_LTDCCLKDivConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 29{14d,15u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 137[12,1] 138[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 137 138
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 137 138
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(5)
9, 10, 11, 12, 13
;; rd  kill	(5)
9, 10, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 137 [ RCC_PLLSAIDivR ])
        (reg:SI 0 r0 [ RCC_PLLSAIDivR ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1381 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_PLLSAIDivR ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 138)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1387 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg/v:SI 134 [ tmpreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1387 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 135 [ tmpreg ])
        (and:SI (reg/v:SI 134 [ tmpreg ])
            (const_int -196609 [0xfffffffffffcffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1390 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 134 [ tmpreg ])
        (nil)))

(insn 10 9 13 2 (set (reg/v:SI 136 [ tmpreg ])
        (ior:SI (reg/v:SI 137 [ RCC_PLLSAIDivR ])
            (reg/v:SI 135 [ tmpreg ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1393 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 137 [ RCC_PLLSAIDivR ])
        (expr_list:REG_DEAD (reg/v:SI 135 [ tmpreg ])
            (nil))))

(insn 13 10 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 138)
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 136 [ tmpreg ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1396 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_DEAD (reg/v:SI 136 [ tmpreg ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_TIMCLKPresConfig (RCC_TIMCLKPresConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_TIMCLKPresConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 136 { d10(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 134 [ RCC_TIMCLKPrescaler ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_TIMCLKPresConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r136={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 136[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 134 [ RCC_TIMCLKPrescaler ])
        (reg:SI 0 r0 [ RCC_TIMCLKPrescaler ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1418 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_TIMCLKPrescaler ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 136)
        (const_int 1111953888 [0x424711e0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1422 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 0 2 (set (mem/v:SI (reg/f:SI 136) [3 MEM[(volatile uint32_t *)1111953888B]+0 S4 A32])
        (reg/v:SI 134 [ RCC_TIMCLKPrescaler ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1422 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/v:SI 134 [ RCC_TIMCLKPrescaler ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AHB1PeriphClockCmd (RCC_AHB1PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB1PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7972 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7970 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_AHB1Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7968 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7967 ]) in insn 13:
Processing use of (reg 139 [ RCC_AHB1Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_AHB1PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_AHB1Periph ])
        (reg:SI 0 r0 [ RCC_AHB1Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1461 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_AHB1Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1461 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1466 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1466 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1468 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7967 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1468 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887280 [0x40023830]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7968 ])
        (ior:SI (reg/v:SI 139 [ RCC_AHB1Periph ])
            (reg:SI 134 [ D.7967 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1468 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB1Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7967 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
        (reg:SI 135 [ D.7968 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1468 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7968 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 51 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7970 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887280 [0x40023830]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_AHB1Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB1Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7972 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7970 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7970 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
        (reg:SI 138 [ D.7972 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7972 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 50 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AHB2PeriphClockCmd (RCC_AHB2PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB2PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7963 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7961 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_AHB2Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7959 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7958 ]) in insn 13:
Processing use of (reg 139 [ RCC_AHB2Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_AHB2PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_AHB2Periph ])
        (reg:SI 0 r0 [ RCC_AHB2Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1493 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_AHB2Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1493 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1498 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1498 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1500 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7958 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1500 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887284 [0x40023834]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7959 ])
        (ior:SI (reg/v:SI 139 [ RCC_AHB2Periph ])
            (reg:SI 134 [ D.7958 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1500 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB2Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7958 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
        (reg:SI 135 [ D.7959 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1500 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7959 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 55 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7961 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887284 [0x40023834]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_AHB2Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB2Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7963 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7961 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7961 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
        (reg:SI 138 [ D.7963 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7963 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 54 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AHB3PeriphClockCmd (RCC_AHB3PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB3PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7954 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7952 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_AHB3Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7950 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7949 ]) in insn 13:
Processing use of (reg 139 [ RCC_AHB3Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_AHB3PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_AHB3Periph ])
        (reg:SI 0 r0 [ RCC_AHB3Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1521 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_AHB3Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1521 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1526 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1526 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1528 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7949 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1528 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887288 [0x40023838]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7950 ])
        (ior:SI (reg/v:SI 139 [ RCC_AHB3Periph ])
            (reg:SI 134 [ D.7949 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1528 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB3Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7949 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
        (reg:SI 135 [ D.7950 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1528 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7950 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 59 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7952 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887288 [0x40023838]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_AHB3Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB3Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7954 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7952 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7952 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
        (reg:SI 138 [ D.7954 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7954 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 58 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_APB1PeriphClockCmd (RCC_APB1PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB1PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7945 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7943 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_APB1Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7941 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7940 ]) in insn 13:
Processing use of (reg 139 [ RCC_APB1Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_APB1PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_APB1Periph ])
        (reg:SI 0 r0 [ RCC_APB1Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1573 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_APB1Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1573 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1578 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1578 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1580 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7940 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1580 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887296 [0x40023840]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7941 ])
        (ior:SI (reg/v:SI 139 [ RCC_APB1Periph ])
            (reg:SI 134 [ D.7940 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1580 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB1Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7940 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
        (reg:SI 135 [ D.7941 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1580 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7941 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 63 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7943 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887296 [0x40023840]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_APB1Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB1Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7945 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7943 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7943 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
        (reg:SI 138 [ D.7945 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7945 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 62 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_APB2PeriphClockCmd (RCC_APB2PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB2PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7936 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7934 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_APB2Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7932 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7931 ]) in insn 13:
Processing use of (reg 139 [ RCC_APB2Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_APB2PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_APB2Periph ])
        (reg:SI 0 r0 [ RCC_APB2Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1618 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_APB2Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1618 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1623 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1623 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1625 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7931 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1625 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887300 [0x40023844]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7932 ])
        (ior:SI (reg/v:SI 139 [ RCC_APB2Periph ])
            (reg:SI 134 [ D.7931 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1625 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB2Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7931 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
        (reg:SI 135 [ D.7932 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1625 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7932 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 67 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7934 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887300 [0x40023844]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_APB2Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB2Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7936 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7934 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7934 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
        (reg:SI 138 [ D.7936 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7936 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 66 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AHB1PeriphResetCmd (RCC_AHB1PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB1PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7927 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7925 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_AHB1Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7923 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7922 ]) in insn 13:
Processing use of (reg 139 [ RCC_AHB1Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_AHB1PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_AHB1Periph ])
        (reg:SI 0 r0 [ RCC_AHB1Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1660 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_AHB1Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1660 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1665 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1665 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1667 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7922 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1667 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887248 [0x40023810]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7923 ])
        (ior:SI (reg/v:SI 139 [ RCC_AHB1Periph ])
            (reg:SI 134 [ D.7922 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1667 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB1Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7922 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
        (reg:SI 135 [ D.7923 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1667 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7923 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 71 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7925 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887248 [0x40023810]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_AHB1Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB1Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7927 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7925 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7925 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
        (reg:SI 138 [ D.7927 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7927 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 70 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AHB2PeriphResetCmd (RCC_AHB2PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB2PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7918 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7916 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_AHB2Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7914 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7913 ]) in insn 13:
Processing use of (reg 139 [ RCC_AHB2Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_AHB2PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_AHB2Periph ])
        (reg:SI 0 r0 [ RCC_AHB2Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1689 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_AHB2Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1689 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1694 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1694 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1696 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7913 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1696 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887252 [0x40023814]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7914 ])
        (ior:SI (reg/v:SI 139 [ RCC_AHB2Periph ])
            (reg:SI 134 [ D.7913 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1696 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB2Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7913 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
        (reg:SI 135 [ D.7914 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1696 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7914 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 75 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7916 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887252 [0x40023814]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_AHB2Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB2Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7918 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7916 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7916 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
        (reg:SI 138 [ D.7918 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7918 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 74 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AHB3PeriphResetCmd (RCC_AHB3PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB3PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7909 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7907 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_AHB3Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7905 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7904 ]) in insn 13:
Processing use of (reg 139 [ RCC_AHB3Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_AHB3PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_AHB3Periph ])
        (reg:SI 0 r0 [ RCC_AHB3Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1714 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_AHB3Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1714 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1719 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1719 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1721 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7904 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1721 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887256 [0x40023818]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7905 ])
        (ior:SI (reg/v:SI 139 [ RCC_AHB3Periph ])
            (reg:SI 134 [ D.7904 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1721 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB3Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7904 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
        (reg:SI 135 [ D.7905 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1721 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7905 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 79 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7907 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887256 [0x40023818]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_AHB3Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB3Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7909 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7907 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7907 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
        (reg:SI 138 [ D.7909 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7909 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 78 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_APB1PeriphResetCmd (RCC_APB1PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB1PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7900 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7898 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_APB1Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7896 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7895 ]) in insn 13:
Processing use of (reg 139 [ RCC_APB1Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_APB1PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_APB1Periph ])
        (reg:SI 0 r0 [ RCC_APB1Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1763 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_APB1Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1763 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1767 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1767 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1769 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7895 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1769 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887264 [0x40023820]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7896 ])
        (ior:SI (reg/v:SI 139 [ RCC_APB1Periph ])
            (reg:SI 134 [ D.7895 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1769 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB1Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7895 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
        (reg:SI 135 [ D.7896 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1769 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7896 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 83 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7898 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887264 [0x40023820]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_APB1Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB1Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7900 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7898 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7898 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
        (reg:SI 138 [ D.7900 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7900 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 82 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_APB2PeriphResetCmd (RCC_APB2PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB2PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7891 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7889 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_APB2Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7887 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7886 ]) in insn 13:
Processing use of (reg 139 [ RCC_APB2Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_APB2PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_APB2Periph ])
        (reg:SI 0 r0 [ RCC_APB2Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1804 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_APB2Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1804 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1808 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1808 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1810 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7886 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1810 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887268 [0x40023824]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7887 ])
        (ior:SI (reg/v:SI 139 [ RCC_APB2Periph ])
            (reg:SI 134 [ D.7886 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1810 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB2Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7886 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
        (reg:SI 135 [ D.7887 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1810 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7887 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 87 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7889 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887268 [0x40023824]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_APB2Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB2Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7891 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7889 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7889 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
        (reg:SI 138 [ D.7891 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7891 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 86 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AHB1PeriphClockLPModeCmd (RCC_AHB1PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB1PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7882 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7880 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_AHB1Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7878 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7877 ]) in insn 13:
Processing use of (reg 139 [ RCC_AHB1Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_AHB1PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_AHB1Periph ])
        (reg:SI 0 r0 [ RCC_AHB1Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1853 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_AHB1Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1853 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1857 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1857 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1859 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7877 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1859 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887312 [0x40023850]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7878 ])
        (ior:SI (reg/v:SI 139 [ RCC_AHB1Periph ])
            (reg:SI 134 [ D.7877 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1859 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB1Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7877 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
        (reg:SI 135 [ D.7878 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1859 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7878 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 91 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7880 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887312 [0x40023850]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_AHB1Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB1Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7882 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7880 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7880 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
        (reg:SI 138 [ D.7882 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7882 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 90 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AHB2PeriphClockLPModeCmd (RCC_AHB2PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB2PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7873 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7871 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_AHB2Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7869 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7868 ]) in insn 13:
Processing use of (reg 139 [ RCC_AHB2Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_AHB2PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_AHB2Periph ])
        (reg:SI 0 r0 [ RCC_AHB2Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1885 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_AHB2Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1885 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1889 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1889 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1891 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7868 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1891 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887316 [0x40023854]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7869 ])
        (ior:SI (reg/v:SI 139 [ RCC_AHB2Periph ])
            (reg:SI 134 [ D.7868 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1891 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB2Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7868 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
        (reg:SI 135 [ D.7869 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1891 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7869 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 95 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7871 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887316 [0x40023854]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_AHB2Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB2Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7873 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7871 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7871 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
        (reg:SI 138 [ D.7873 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7873 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 94 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_AHB3PeriphClockLPModeCmd (RCC_AHB3PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB3PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7864 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7862 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_AHB3Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7860 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7859 ]) in insn 13:
Processing use of (reg 139 [ RCC_AHB3Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_AHB3PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_AHB3Periph ])
        (reg:SI 0 r0 [ RCC_AHB3Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1913 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_AHB3Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1913 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1917 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1917 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1919 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7859 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1919 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887320 [0x40023858]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7860 ])
        (ior:SI (reg/v:SI 139 [ RCC_AHB3Periph ])
            (reg:SI 134 [ D.7859 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1919 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB3Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7859 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
        (reg:SI 135 [ D.7860 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1919 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7860 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 99 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7862 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887320 [0x40023858]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_AHB3Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_AHB3Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7864 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7862 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7862 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
        (reg:SI 138 [ D.7864 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7864 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 98 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_APB1PeriphClockLPModeCmd (RCC_APB1PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB1PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7855 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7853 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_APB1Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7851 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7850 ]) in insn 13:
Processing use of (reg 139 [ RCC_APB1Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_APB1PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_APB1Periph ])
        (reg:SI 0 r0 [ RCC_APB1Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1965 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_APB1Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1965 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1969 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1969 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1971 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7850 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1971 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887328 [0x40023860]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7851 ])
        (ior:SI (reg/v:SI 139 [ RCC_APB1Periph ])
            (reg:SI 134 [ D.7850 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1971 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB1Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7850 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
        (reg:SI 135 [ D.7851 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1971 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7851 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 103 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7853 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887328 [0x40023860]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_APB1Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB1Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7855 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7853 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7853 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
        (reg:SI 138 [ D.7855 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7855 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 102 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_APB2PeriphClockLPModeCmd (RCC_APB2PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB2PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 134 { d10(bb 3 insn 12) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 16
;;      reg 135 { d11(bb 3 insn 13) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ d4(bb 0 insn -1) }u18(13){ d5(bb 0 insn -1) }u19(25){ d8(bb 0 insn -1) }u20(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 143 { d17(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 136 { d12(bb 4 insn 23) }
;;      reg 144 { d18(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 138 { d13(bb 4 insn 25) }
;;      reg 143 { d17(bb 4 insn 22) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ d4(bb 0 insn -1) }u28(13){ d5(bb 0 insn -1) }u29(25){ d8(bb 0 insn -1) }u30(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(7){ d4(bb 0 insn -1) }u32(13){ d5(bb 0 insn -1) }u33(14){ d6(bb 0 insn -1) }u34(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ D.7846 ]) in insn 28:
  Adding insn 25 to worklist
Processing use of (reg 143) in insn 28:
Processing use of (reg 136 [ D.7844 ]) in insn 25:
Processing use of (reg 144) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ RCC_APB2Periph ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ D.7842 ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 134 [ D.7841 ]) in insn 13:
Processing use of (reg 139 [ RCC_APB2Periph ]) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_APB2PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,2u} r144={1d,1u} 
;;    total ref usage 54{19d,35u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 143[17,1] 144[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_APB2Periph ])
        (reg:SI 0 r0 [ RCC_APB2Periph ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2010 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_APB2Periph ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2010 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2014 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2014 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(3)
10, 11, 16
;; rd  kill	(3)
10, 11, 16

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2016 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 134 [ D.7841 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2016 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887332 [0x40023864]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 135 [ D.7842 ])
        (ior:SI (reg/v:SI 139 [ RCC_APB2Periph ])
            (reg:SI 134 [ D.7841 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2016 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB2Periph ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7841 ])
            (nil))))

(insn 16 13 19 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 141)
                (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
        (reg:SI 135 [ D.7842 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2016 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7842 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(7){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(4)
12, 13, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 19 16 20 4 107 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 (set (reg/f:SI 143)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 24 4 (set (reg:SI 136 [ D.7844 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887332 [0x40023864]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
        (nil)))

(insn 24 23 25 4 (set (reg:SI 144)
        (not:SI (reg/v:SI 139 [ RCC_APB2Periph ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_APB2Periph ])
        (nil)))

(insn 25 24 28 4 (set (reg:SI 138 [ D.7846 ])
        (and:SI (reg:SI 144)
            (reg:SI 136 [ D.7844 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7844 ])
            (nil))))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 143)
                (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
        (reg:SI 138 [ D.7846 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7846 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(7){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 31 28 32 5 106 "" [0 uses])

(note 32 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_ITConfig (RCC_ITConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_ITConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} 
;;    total ref usage 66{25d,41u,0e} in 19{19 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 142[17,1] 143[18,1] 144[19,1] 147[20,1] 148[21,1] 149[22,1] 150[23,1] 152[24,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; lr  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d15(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d7(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(25){ d8(bb 0 insn -1) }u11(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141 142 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141 142 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(6)
10, 11, 16, 17, 18, 19
;; rd  kill	(6)
10, 11, 16, 17, 18, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 141 { d16(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 143 { d18(bb 3 insn 12) }
;;   UD chains for insn luid 3 uid 14
;;      reg 142 { d17(bb 3 insn 13) }
;;   UD chains for insn luid 4 uid 15
;;      reg 134 { d10(bb 3 insn 14) }
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 16
;;      reg 144 { d19(bb 3 insn 15) }
;;   UD chains for insn luid 6 uid 20
;;      reg 135 { d11(bb 3 insn 16) }
;;      reg 141 { d16(bb 3 insn 11) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(7){ d4(bb 0 insn -1) }u21(13){ d5(bb 0 insn -1) }u22(25){ d8(bb 0 insn -1) }u23(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 147 148 149 150 152
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 147 148 149 150 152
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(7)
12, 13, 20, 21, 22, 23, 24
;; rd  kill	(7)
12, 13, 20, 21, 22, 23, 24
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 20, 21, 22, 23, 24
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 27
;;      reg 147 { d20(bb 4 insn 26) }
;;   UD chains for insn luid 2 uid 28
;;      reg 149 { d22(bb 4 insn 27) }
;;   UD chains for insn luid 3 uid 29
;;      reg 148 { d21(bb 4 insn 28) }
;;   UD chains for insn luid 4 uid 30
;;      reg 139 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 32
;;      reg 136 { d12(bb 4 insn 29) }
;;      reg 150 { d23(bb 4 insn 30) }
;;   UD chains for insn luid 6 uid 33
;;      reg 152 { d24(bb 4 insn 32) }
;;   UD chains for insn luid 7 uid 37
;;      reg 138 { d13(bb 4 insn 33) }
;;      reg 147 { d20(bb 4 insn 26) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(7){ d4(bb 0 insn -1) }u34(13){ d5(bb 0 insn -1) }u35(25){ d8(bb 0 insn -1) }u36(26){ d9(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u37(7){ d4(bb 0 insn -1) }u38(13){ d5(bb 0 insn -1) }u39(14){ d6(bb 0 insn -1) }u40(25){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 20 to worklist
  Adding insn 12 to worklist
  Adding insn 37 to worklist
  Adding insn 27 to worklist
Finished finding needed instructions:
Processing use of (reg 147) in insn 27:
  Adding insn 26 to worklist
Processing use of (subreg (reg 138 [ D.7837 ]) 0) in insn 37:
  Adding insn 33 to worklist
Processing use of (reg 147) in insn 37:
Processing use of (subreg (reg 152) 0) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 136 [ D.7835 ]) in insn 32:
  Adding insn 29 to worklist
Processing use of (reg 150) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 139 [ RCC_IT ]) in insn 30:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 148 [ MEM[(volatile uint8_t *)1073887245B] ]) in insn 29:
  Adding insn 28 to worklist
Processing use of (subreg (reg 149 [ MEM[(volatile uint8_t *)1073887245B] ]) 0) in insn 28:
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (subreg (reg 135 [ D.7833 ]) 0) in insn 20:
  Adding insn 16 to worklist
Processing use of (reg 141) in insn 20:
Processing use of (subreg (reg 144) 0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 134 [ D.7832 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 139 [ RCC_IT ]) in insn 15:
Processing use of (reg 142 [ MEM[(volatile uint8_t *)1073887245B] ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (subreg (reg 143 [ MEM[(volatile uint8_t *)1073887245B] ]) 0) in insn 13:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ NewState ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


RCC_ITConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d} r3={1d} r7={1d,5u} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} 
;;    total ref usage 66{25d,41u,0e} in 19{19 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 24[7,1] 25[8,1] 26[9,1] 134[10,1] 135[11,1] 136[12,1] 138[13,1] 139[14,1] 140[15,1] 141[16,1] 142[17,1] 143[18,1] 144[19,1] 147[20,1] 148[21,1] 149[22,1] 150[23,1] 152[24,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 8, 9
;; rd  gen 	(3)
7, 14, 15
;; rd  kill	(3)
7, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (reg/v:SI 139 [ RCC_IT ])
        (reg:SI 0 r0 [ RCC_IT ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2056 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_IT ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 140 [ NewState ])
        (reg:SI 1 r1 [ NewState ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2056 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 1 r1 [ NewState ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ NewState ])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2060 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 140 [ NewState ])
        (nil)))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2060 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 23)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 134 135 141 142 143 144
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 134 135 141 142 143 144
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(6)
10, 11, 16, 17, 18, 19
;; rd  kill	(6)
10, 11, 16, 17, 18, 19

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 (set (reg/f:SI 141)
        (const_int 1073887245 [0x4002380d])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 143 [ MEM[(volatile uint8_t *)1073887245B] ])
        (zero_extend:SI (mem/v:QI (reg/f:SI 141) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/v:QI (const_int 1073887245 [0x4002380d]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8]))
        (nil)))

(insn 13 12 14 3 (set (reg:QI 142 [ MEM[(volatile uint8_t *)1073887245B] ])
        (subreg:QI (reg:SI 143 [ MEM[(volatile uint8_t *)1073887245B] ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 143 [ MEM[(volatile uint8_t *)1073887245B] ])
        (nil)))

(insn 14 13 15 3 (set (reg:SI 134 [ D.7832 ])
        (zero_extend:SI (reg:QI 142 [ MEM[(volatile uint8_t *)1073887245B] ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 142 [ MEM[(volatile uint8_t *)1073887245B] ])
        (nil)))

(insn 15 14 16 3 (set (reg:SI 144)
        (ior:SI (reg/v:SI 139 [ RCC_IT ])
            (reg:SI 134 [ D.7832 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_IT ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7832 ])
            (nil))))

(insn 16 15 20 3 (set (reg:SI 135 [ D.7833 ])
        (zero_extend:SI (subreg:QI (reg:SI 144) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 20 16 23 3 (set (mem/v:QI (reg/f:SI 141) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8])
        (subreg/s/u:QI (reg:SI 135 [ D.7833 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7833 ])
            (nil))))
;; End of basic block 3 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(7){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136 138 147 148 149 150 152
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 136 138 147 148 149 150 152
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15
;; rd  gen 	(7)
12, 13, 20, 21, 22, 23, 24
;; rd  kill	(7)
12, 13, 20, 21, 22, 23, 24

;; Pred edge  2 [61.0%] 
(code_label 23 20 24 4 111 "" [1 uses])

(note 24 23 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 24 27 4 (set (reg/f:SI 147)
        (const_int 1073887245 [0x4002380d])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 709 {*thumb2_movsi_insn}
     (nil))

(insn 27 26 28 4 (set (reg:SI 149 [ MEM[(volatile uint8_t *)1073887245B] ])
        (zero_extend:SI (mem/v:QI (reg/f:SI 147) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/v:QI (const_int 1073887245 [0x4002380d]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8]))
        (nil)))

(insn 28 27 29 4 (set (reg:QI 148 [ MEM[(volatile uint8_t *)1073887245B] ])
        (subreg:QI (reg:SI 149 [ MEM[(volatile uint8_t *)1073887245B] ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 149 [ MEM[(volatile uint8_t *)1073887245B] ])
        (nil)))

(insn 29 28 30 4 (set (reg:SI 136 [ D.7835 ])
        (zero_extend:SI (reg:QI 148 [ MEM[(volatile uint8_t *)1073887245B] ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 148 [ MEM[(volatile uint8_t *)1073887245B] ])
        (nil)))

(insn 30 29 32 4 (set (reg:SI 150)
        (not:SI (reg/v:SI 139 [ RCC_IT ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 143 {*arm_one_cmplsi2}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_IT ])
        (nil)))

(insn 32 30 33 4 (set (reg:SI 152)
        (and:SI (reg:SI 136 [ D.7835 ])
            (reg:SI 150))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_DEAD (reg:SI 136 [ D.7835 ])
            (nil))))

(insn 33 32 37 4 (set (reg:SI 138 [ D.7837 ])
        (zero_extend:SI (subreg:QI (reg:SI 152) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 37 33 40 4 (set (mem/v:QI (reg/f:SI 147) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8])
        (subreg/s/u:QI (reg:SI 138 [ D.7837 ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_DEAD (reg:SI 138 [ D.7837 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 20, 21, 22, 23, 24


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(7){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 40 37 41 5 110 "" [0 uses])

(note 41 40 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_GetFlagStatus (RCC_GetFlagStatus)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)


RCC_GetFlagStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r7={1d,7u} r13={1d,7u} r14={1d,1u} r24={2d,2u} r25={1d,7u} r26={1d,6u} r134={3d,1u} r137={1d,2u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} 
;;    total ref usage 73{26d,47u,0e} in 20{20 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,2] 25[10,1] 26[11,1] 134[12,3] 137[15,1] 154[16,1] 155[17,1] 156[18,1] 157[19,1] 158[20,1] 159[21,1] 160[22,1] 161[23,1] 162[24,1] 163[25,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(7){ }d6(13){ }d7(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
1, 2, 3, 4, 5, 6, 7, 10, 11
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 10, 11
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
1, 2, 3, 4, 5, 6, 7, 10, 11

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d5(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d10(bb 0 insn -1) }u3(26){ d11(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 154 155
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 154 155
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 10, 11
;; rd  gen 	(4)
9, 15, 16, 17
;; rd  kill	(5)
8, 9, 15, 16, 17
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 154 { d16(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 155 { d17(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 137 { d15(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 24 { d9(bb 2 insn 8) }

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ d5(bb 0 insn -1) }u10(13){ d6(bb 0 insn -1) }u11(25){ d10(bb 0 insn -1) }u12(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 156
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  gen 	 134 156
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17
;; rd  gen 	(2)
14, 18
;; rd  kill	(4)
12, 13, 14, 18
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 13
;;      reg 156 { d18(bb 3 insn 12) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(7){ d5(bb 0 insn -1) }u15(13){ d6(bb 0 insn -1) }u16(25){ d10(bb 0 insn -1) }u17(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17
;; rd  gen 	(1)
8
;; rd  kill	(2)
8, 9
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 137 { d15(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 19
;;      reg 24 { d8(bb 4 insn 18) }

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(7){ d5(bb 0 insn -1) }u21(13){ d6(bb 0 insn -1) }u22(25){ d10(bb 0 insn -1) }u23(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 157
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  gen 	 134 157
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 17
;; rd  gen 	(2)
13, 19
;; rd  kill	(4)
12, 13, 14, 19
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 19
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 157 { d19(bb 5 insn 22) }

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(7){ d5(bb 0 insn -1) }u26(13){ d6(bb 0 insn -1) }u27(25){ d10(bb 0 insn -1) }u28(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 158
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  gen 	 134 158
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 17
;; rd  gen 	(2)
12, 20
;; rd  kill	(4)
12, 13, 14, 20
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 20
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 30
;;      reg 158 { d20(bb 6 insn 29) }

( 3 5 6 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u30(7){ d5(bb 0 insn -1) }u31(13){ d6(bb 0 insn -1) }u32(25){ d10(bb 0 insn -1) }u33(26){ d11(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 154
;; lr  def 	 0 [r0] 159 160 161 162 163
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; live  gen 	 0 [r0] 159 160 161 162 163
;; live  kill	
;; rd  in  	(20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; rd  gen 	(6)
0, 21, 22, 23, 24, 25
;; rd  kill	(7)
0, 1, 21, 22, 23, 24, 25
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(25)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 33
;;      reg 154 { d16(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 34
;;      reg 134 { d14(bb 3 insn 13) d13(bb 5 insn 23) d12(bb 6 insn 30) }
;;      reg 160 { d22(bb 7 insn 33) }
;;   UD chains for insn luid 2 uid 35
;;      reg 161 { d23(bb 7 insn 34) }
;;   UD chains for insn luid 3 uid 36
;;      reg 162 { d24(bb 7 insn 35) }
;;   UD chains for insn luid 4 uid 37
;;      reg 159 { d21(bb 7 insn 36) }
;;   UD chains for insn luid 5 uid 42
;;      reg 163 { d25(bb 7 insn 37) }
;;   UD chains for insn luid 6 uid 45
;;      reg 0 { d0(bb 7 insn 42) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u42(0){ d0(bb 7 insn 42) }u43(7){ d5(bb 0 insn -1) }u44(13){ d6(bb 0 insn -1) }u45(14){ d7(bb 0 insn -1) }u46(25){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(25)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(25)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 7 insn 42) }
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 13 to worklist
  Adding insn 19 to worklist
  Adding insn 23 to worklist
  Adding insn 30 to worklist
  Adding insn 45 to worklist
Finished finding needed instructions:
  Adding insn 42 to worklist
Processing use of (reg 163) in insn 42:
  Adding insn 37 to worklist
Processing use of (reg 159) in insn 37:
  Adding insn 36 to worklist
Processing use of (subreg (reg 162) 0) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 161) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 134 [ statusreg ]) in insn 34:
Processing use of (reg 160) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 154 [ RCC_FLAG ]) in insn 33:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 45:
Processing use of (reg 158) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 157) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 137 [ tmp ]) in insn 18:
  Adding insn 7 to worklist
Processing use of (subreg (reg 155) 0) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 154 [ RCC_FLAG ]) in insn 6:
Processing use of (reg 156) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 137 [ tmp ]) in insn 8:


RCC_GetFlagStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r7={1d,7u} r13={1d,7u} r14={1d,1u} r24={2d,2u} r25={1d,7u} r26={1d,6u} r134={3d,1u} r137={1d,2u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} 
;;    total ref usage 73{26d,47u,0e} in 20{20 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,2] 25[10,1] 26[11,1] 134[12,3] 137[15,1] 154[16,1] 155[17,1] 156[18,1] 157[19,1] 158[20,1] 159[21,1] 160[22,1] 161[23,1] 162[24,1] 163[25,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 154 155
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 154 155
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 10, 11
;; rd  gen 	(4)
9, 15, 16, 17
;; rd  kill	(5)
8, 9, 15, 16, 17

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 154 [ RCC_FLAG ])
        (reg:SI 0 r0 [ RCC_FLAG ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2093 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_FLAG ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 (set (reg:SI 155)
        (lshiftrt:SI (reg/v:SI 154 [ RCC_FLAG ])
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2102 119 {*arm_shiftsi3}
     (nil))

(insn 7 6 8 2 (set (reg/v:SI 137 [ tmp ])
        (zero_extend:SI (subreg:QI (reg:SI 155) 0))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2102 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 8 7 9 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ tmp ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2103 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2103 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil)))
 -> 16)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 156
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  gen 	 134 156
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17
;; rd  gen 	(2)
14, 18
;; rd  kill	(4)
12, 13, 14, 18

;; Pred edge  2 [28.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 (set (reg/f:SI 156)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (nil))

(insn 13 12 16 3 (set (reg/v:SI 134 [ statusreg ])
        (mem/s/v:SI (reg/f:SI 156) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887232 [0x40023800]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
            (nil))))
;; End of basic block 3 -> ( 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(7){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 154
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17
;; rd  gen 	(1)
8
;; rd  kill	(2)
8, 9

;; Pred edge  2 [72.0%] 
(code_label 16 13 17 4 115 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ tmp ])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2107 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 137 [ tmp ])
        (nil)))

(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2107 218 {*arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil)))
 -> 26)
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 17


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(7){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 157
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  gen 	 134 157
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 17
;; rd  gen 	(2)
13, 19
;; rd  kill	(4)
12, 13, 14, 19

;; Pred edge  4 [28.0%]  (fallthru)
(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 5 (set (reg/f:SI 157)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2109 709 {*thumb2_movsi_insn}
     (nil))

(insn 23 22 26 5 (set (reg/v:SI 134 [ statusreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 157)
                (const_int 112 [0x70])) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2109 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887344 [0x40023870]) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])
            (nil))))
;; End of basic block 5 -> ( 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 19


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(7){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 158
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  gen 	 134 158
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 17
;; rd  gen 	(2)
12, 20
;; rd  kill	(4)
12, 13, 14, 20

;; Pred edge  4 [72.0%] 
(code_label 26 23 27 6 117 "" [1 uses])

(note 27 26 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 27 30 6 (set (reg/f:SI 158)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2113 709 {*thumb2_movsi_insn}
     (nil))

(insn 30 29 31 6 (set (reg/v:SI 134 [ statusreg ])
        (mem/s/v:SI (plus:SI (reg/f:SI 158)
                (const_int 116 [0x74])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2113 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 158)
        (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887348 [0x40023874]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 20


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u30(7){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp] 134 154
;; lr  def 	 0 [r0] 159 160 161 162 163
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 154
;; live  gen 	 0 [r0] 159 160 161 162 163
;; live  kill	
;; rd  in  	(20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; rd  gen 	(6)
0, 21, 22, 23, 24, 25
;; rd  kill	(7)
0, 1, 21, 22, 23, 24, 25

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 31 30 32 7 116 "" [0 uses])

(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 7 (set (reg:SI 160)
        (and:SI (reg/v:SI 154 [ RCC_FLAG ])
            (const_int 31 [0x1f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2117 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 154 [ RCC_FLAG ])
        (nil)))

(insn 34 33 35 7 (set (reg:SI 161)
        (lshiftrt:SI (reg/v:SI 134 [ statusreg ])
            (reg:SI 160))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2118 119 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg/v:SI 134 [ statusreg ])
            (nil))))

(insn 35 34 36 7 (set (reg:SI 162)
        (and:SI (reg:SI 161)
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2118 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 36 35 37 7 (set (reg:QI 159)
        (subreg:QI (reg:SI 162) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2120 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 37 36 42 7 (set (reg:SI 163)
        (zero_extend:SI (reg:QI 159))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2127 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 42 37 45 7 (set (reg/i:SI 0 r0)
        (reg:SI 163)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2128 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 45 42 0 7 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2128 -1
     (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(25)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_ClearFlag (RCC_ClearFlag)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_ClearFlag

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} 
;;    total ref usage 24{12d,12u,0e} in 4{4 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(3)
9, 10, 11
;; rd  kill	(3)
9, 10, 11
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 136 { d11(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 8
;;      reg 134 { d9(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 11
;;      reg 135 { d10(bb 2 insn 8) }
;;      reg 136 { d11(bb 2 insn 6) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(7){ d4(bb 0 insn -1) }u9(13){ d5(bb 0 insn -1) }u10(14){ d6(bb 0 insn -1) }u11(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 136) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135 [ D.7809 ]) in insn 11:
  Adding insn 8 to worklist
Processing use of (reg 136) in insn 11:
Processing use of (reg 134 [ D.7808 ]) in insn 8:


RCC_ClearFlag

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} 
;;    total ref usage 24{12d,12u,0e} in 4{4 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 136[11,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(3)
9, 10, 11
;; rd  kill	(3)
9, 10, 11

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 (set (reg/f:SI 136)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2140 709 {*thumb2_movsi_insn}
     (nil))

(insn 7 6 8 2 (set (reg:SI 134 [ D.7808 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 136)
                (const_int 116 [0x74])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2140 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 11 2 (set (reg:SI 135 [ D.7809 ])
        (ior:SI (reg:SI 134 [ D.7808 ])
            (const_int 16777216 [0x1000000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2140 91 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 134 [ D.7808 ])
        (nil)))

(insn 11 8 0 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 136)
                (const_int 116 [0x74])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])
        (reg:SI 135 [ D.7809 ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2140 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg:SI 135 [ D.7809 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_GetITStatus (RCC_GetITStatus)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_GetITStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r24={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 37{18d,19u,0e} in 10{10 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,1] 25[9,1] 26[10,1] 134[11,1] 139[12,1] 140[13,1] 141[14,1] 142[15,1] 143[16,1] 144[17,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(7){ }d6(13){ }d7(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
1, 2, 3, 4, 5, 6, 7, 9, 10

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d5(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 24 [cc] 134 139 140 141 142 143 144
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 139 140 141 142 143 144
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  gen 	(9)
0, 8, 11, 12, 13, 14, 15, 16, 17
;; rd  kill	(10)
0, 1, 8, 11, 12, 13, 14, 15, 16, 17
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 140 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d11(bb 2 insn 8) }
;;      reg 139 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 10
;;      reg 142 { d15(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 24 { d8(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 143 { d16(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 141 { d14(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 18
;;      reg 144 { d17(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 21
;;      reg 0 { d0(bb 2 insn 18) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(0){ d0(bb 2 insn 18) }u15(7){ d5(bb 0 insn -1) }u16(13){ d6(bb 0 insn -1) }u17(14){ d7(bb 0 insn -1) }u18(25){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 18) }
;;   reg 7 { d5(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
  Adding insn 18 to worklist
Processing use of (reg 144) in insn 18:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 13:
  Adding insn 12 to worklist
Processing use of (subreg (reg 143) 0) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 24 cc) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 142) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ D.7799 ]) in insn 9:
Processing use of (reg 139 [ RCC_IT ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 140) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 0 r0) in insn 21:


RCC_GetITStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r24={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 37{18d,19u,0e} in 10{10 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 7, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 7[5,1] 13[6,1] 14[7,1] 24[8,1] 25[9,1] 26[10,1] 134[11,1] 139[12,1] 140[13,1] 141[14,1] 142[15,1] 143[16,1] 144[17,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 24 [cc] 134 139 140 141 142 143 144
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 139 140 141 142 143 144
;; live  kill	
;; rd  in  	(9)
1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  gen 	(9)
0, 8, 11, 12, 13, 14, 15, 16, 17
;; rd  kill	(10)
0, 1, 8, 11, 12, 13, 14, 15, 16, 17

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 139 [ RCC_IT ])
        (reg:SI 0 r0 [ RCC_IT ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2158 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_IT ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 (set (reg/f:SI 140)
        (const_int 1073887232 [0x40023800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2165 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 9 2 (set (reg:SI 134 [ D.7799 ])
        (mem/s/v:SI (plus:SI (reg/f:SI 140)
                (const_int 12 [0xc])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CIR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2165 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (nil)))

(insn 9 8 10 2 (set (reg:SI 142)
        (and:SI (reg/v:SI 139 [ RCC_IT ])
            (reg:SI 134 [ D.7799 ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2165 69 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 139 [ RCC_IT ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.7799 ])
            (nil))))

(insn 10 9 11 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2167 206 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 11 10 12 2 (set (reg:SI 143)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2167 713 {*thumb2_mov_scc}
     (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 12 11 13 2 (set (reg:QI 141)
        (subreg:QI (reg:SI 143) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2167 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 13 12 18 2 (set (reg:SI 144)
        (zero_extend:SI (reg:QI 141))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2174 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:QI 141)
        (nil)))

(insn 18 13 21 2 (set (reg/i:SI 0 r0)
        (reg:SI 144)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2175 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 21 18 0 2 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2175 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function RCC_ClearITPendingBit (RCC_ClearITPendingBit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_ClearITPendingBit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(7){ }d5(13){ }d6(14){ }d7(25){ }d8(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ d4(bb 0 insn -1) }u1(13){ d5(bb 0 insn -1) }u2(25){ d7(bb 0 insn -1) }u3(26){ d8(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }
;;   reg 26 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 134 { d9(bb 2 insn 2) }
;;      reg 135 { d10(bb 2 insn 7) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(7){ d4(bb 0 insn -1) }u8(13){ d5(bb 0 insn -1) }u9(14){ d6(bb 0 insn -1) }u10(25){ d7(bb 0 insn -1) }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  UD chains for artificial uses
;;   reg 7 { d4(bb 0 insn -1) }
;;   reg 13 { d5(bb 0 insn -1) }
;;   reg 14 { d6(bb 0 insn -1) }
;;   reg 25 { d7(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (subreg (reg 134 [ RCC_IT ]) 0) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 135) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 0 r0) in insn 2:


RCC_ClearITPendingBit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 6
0[0,1] 1[1,1] 2[2,1] 3[3,1] 7[4,1] 13[5,1] 14[6,1] 25[7,1] 26[8,1] 134[9,1] 135[10,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135
;; live  kill	
;; rd  in  	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; rd  gen 	(2)
9, 10
;; rd  kill	(2)
9, 10

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 (set (reg/v:SI 134 [ RCC_IT ])
        (reg:SI 0 r0 [ RCC_IT ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2192 709 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ RCC_IT ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 9 2 (set (reg/f:SI 135)
        (const_int 1073887246 [0x4002380e])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2198 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 7 0 2 (set (mem/v:QI (reg/f:SI 135) [0 MEM[(volatile uint8_t *)1073887246B]+0 S1 A8])
        (subreg/s/u:QI (reg/v:SI 134 [ RCC_IT ]) 0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2198 187 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg/v:SI 134 [ RCC_IT ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 7 [r7] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
