
;; Function RCC_DeInit (RCC_DeInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 143: local to bb 2 def dominates all uses has unique first use
Reg 134 uninteresting
Reg 135 uninteresting
Reg 145: local to bb 2 def dominates all uses has unique first use
Reg 137: local to bb 2 def dominates all uses has unique first use
Reg 138 uninteresting
Reg 139 uninteresting
Examining insn 20, def for 137
  all ok
Ignoring reg 143 with equiv init insn
Examining insn 19, def for 145
  all ok
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 143: (insn_list:REG_DEP_TRUE 14 (nil))

Pass 0 for finding pseudo/allocno costs

    a4 (r152,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r150,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r148,l0) best LO_REGS, cover GENERAL_REGS
    a8 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r143,l0) best LO_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r139,l0) best LO_REGS, cover GENERAL_REGS
    a3 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a7 (r137,l0) best LO_REGS, cover GENERAL_REGS
    a9 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a10 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a11 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:170000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:6000,6000 GENERAL_REGS:6000,6000 MEM:40000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a3(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:60000
  a5(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:60000
  a6(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:60000
  a7(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a10(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a11(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r152: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r150: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r148: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r143: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r137: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:170000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:6000,6000 GENERAL_REGS:6000,6000 MEM:40000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a3(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:60000
  a5(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:60000
  a6(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:60000
  a7(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a10(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a11(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 53(l0): point = 0
   Insn 49(l0): point = 2
   Insn 45(l0): point = 4
   Insn 42(l0): point = 6
   Insn 41(l0): point = 8
   Insn 38(l0): point = 10
   Insn 33(l0): point = 12
   Insn 28(l0): point = 14
   Insn 23(l0): point = 16
   Insn 64(l0): point = 18
   Insn 62(l0): point = 20
   Insn 59(l0): point = 22
   Insn 20(l0): point = 24
   Insn 63(l0): point = 26
   Insn 61(l0): point = 28
   Insn 19(l0): point = 30
   Insn 58(l0): point = 32
   Insn 18(l0): point = 34
   Insn 15(l0): point = 36
   Insn 11(l0): point = 38
   Insn 8(l0): point = 40
   Insn 7(l0): point = 42
   Insn 14(l0): point = 44
   Insn 57(l0): point = 46
   Insn 56(l0): point = 48
 a0(r140): [1..48]
 a1(r143): [1..44]
 a2(r139): [5..6]
 a3(r138): [7..8]
 a4(r152): [11..26]
 a5(r150): [13..28]
 a6(r148): [15..32]
 a7(r137): [17..24]
 a8(r145): [25..30]
 a9(r136): [31..34]
 a10(r135): [39..40]
 a11(r134): [41..42]
Compressing live ranges: from 51 to 14 - 27%
Ranges after the compression:
 a0(r140): [0..13]
 a1(r143): [0..13]
 a2(r139): [0..1]
 a3(r138): [2..3]
 a4(r152): [4..7]
 a5(r150): [4..7]
 a6(r148): [4..9]
 a7(r137): [4..5]
 a8(r145): [6..7]
 a9(r136): [8..9]
 a10(r135): [10..11]
 a11(r134): [12..13]
+++Allocating 96 bytes for conflict table (uncompressed size 96)
;; a0(r140,l0) conflicts: a2(r139,l0) a1(r143,l0) a3(r138,l0) a7(r137,l0) a4(r152,l0) a5(r150,l0) a6(r148,l0) a8(r145,l0) a9(r136,l0) a10(r135,l0) a11(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r143,l0) conflicts: a2(r139,l0) a0(r140,l0) a3(r138,l0) a7(r137,l0) a4(r152,l0) a5(r150,l0) a6(r148,l0) a8(r145,l0) a9(r136,l0) a10(r135,l0) a11(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r139,l0) conflicts: a0(r140,l0) a1(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r138,l0) conflicts: a0(r140,l0) a1(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r152,l0) conflicts: a0(r140,l0) a1(r143,l0) a7(r137,l0) a5(r150,l0) a6(r148,l0) a8(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r150,l0) conflicts: a0(r140,l0) a1(r143,l0) a7(r137,l0) a4(r152,l0) a6(r148,l0) a8(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r148,l0) conflicts: a0(r140,l0) a1(r143,l0) a7(r137,l0) a4(r152,l0) a5(r150,l0) a8(r145,l0) a9(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r137,l0) conflicts: a0(r140,l0) a1(r143,l0) a4(r152,l0) a5(r150,l0) a6(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a8(r145,l0) conflicts: a0(r140,l0) a1(r143,l0) a4(r152,l0) a5(r150,l0) a6(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a9(r136,l0) conflicts: a0(r140,l0) a1(r143,l0) a6(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a10(r135,l0) conflicts: a0(r140,l0) a1(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a11(r134,l0) conflicts: a0(r140,l0) a1(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a10(r135)<->a11(r134)@125:shuffle
  cp1:a8(r145)<->a9(r136)@125:shuffle
  cp2:a7(r137)<->a8(r145)@125:shuffle
  cp3:a2(r139)<->a3(r138)@125:shuffle
  regions=1, blocks=3, points=14
    allocnos=12 (big 0), copies=4, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r143 2r139 3r138 4r152 5r150 6r148 7r137 8r145 9r136 10r135 11r134
    modified regnos: 134 135 136 137 138 139 140 143 145 148 150 152
    border:
    Pressure: GENERAL_REGS=7
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a11(r134,l0)
      Pushing a10(r135,l0)
      Pushing a9(r136,l0)
      Pushing a8(r145,l0)
      Pushing a7(r137,l0)
      Pushing a3(r138,l0)
      Pushing a2(r139,l0)
      Pushing a6(r148,l0)
      Pushing a5(r150,l0)
      Pushing a4(r152,l0)
      Pushing a1(r143,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 3
      Popping a1(r143,l0)  -- assign reg 2
      Popping a4(r152,l0)  -- assign reg 1
      Popping a5(r150,l0)  -- assign reg 0
      Popping a6(r148,l0)  -- assign reg 4
      Popping a2(r139,l0)  -- assign reg 1
      Popping a3(r138,l0)  -- assign reg 1
      Popping a7(r137,l0)  -- assign reg 5
      Popping a8(r145,l0)  -- assign reg 5
      Popping a9(r136,l0)  -- assign reg 5
      Popping a10(r135,l0)  -- assign reg 1
      Popping a11(r134,l0)  -- assign reg 1
Disposition:
   11:r134 l0     1   10:r135 l0     1    9:r136 l0     5    7:r137 l0     5
    3:r138 l0     1    2:r139 l0     1    0:r140 l0     3    1:r143 l0     2
    8:r145 l0     5    6:r148 l0     4    5:r150 l0     0    4:r152 l0     1
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=56, live_throughout: 13, 14, dead_or_set: 140
insn=57, live_throughout: 13, 14, 140, dead_or_set: 140
insn=14, live_throughout: 13, 14, 140, dead_or_set: 143
insn=7, live_throughout: 13, 14, 140, 143, dead_or_set: 134
insn=8, live_throughout: 13, 14, 140, 143, dead_or_set: 134, 135
insn=11, live_throughout: 13, 14, 140, 143, dead_or_set: 135
insn=15, live_throughout: 13, 14, 140, 143, dead_or_set: 
insn=18, live_throughout: 13, 14, 140, 143, dead_or_set: 136
insn=58, live_throughout: 13, 14, 136, 140, 143, dead_or_set: 148
insn=19, live_throughout: 13, 14, 140, 143, 148, dead_or_set: 136, 145
insn=61, live_throughout: 13, 14, 140, 143, 145, 148, dead_or_set: 150
insn=63, live_throughout: 13, 14, 140, 143, 145, 148, 150, dead_or_set: 152
insn=20, live_throughout: 13, 14, 140, 143, 148, 150, 152, dead_or_set: 137, 145
insn=59, live_throughout: 13, 14, 137, 140, 143, 148, 150, 152, dead_or_set: 148
insn=62, live_throughout: 13, 14, 137, 140, 143, 148, 150, 152, dead_or_set: 150
insn=64, live_throughout: 13, 14, 137, 140, 143, 148, 150, 152, dead_or_set: 152
insn=23, live_throughout: 13, 14, 140, 143, 148, 150, 152, dead_or_set: 137
insn=28, live_throughout: 13, 14, 140, 143, 150, 152, dead_or_set: 148
insn=33, live_throughout: 13, 14, 140, 143, 152, dead_or_set: 150
insn=38, live_throughout: 13, 14, 140, 143, dead_or_set: 152
insn=41, live_throughout: 13, 14, 140, 143, dead_or_set: 138
insn=42, live_throughout: 13, 14, 140, 143, dead_or_set: 138, 139
insn=45, live_throughout: 13, 14, 140, 143, dead_or_set: 139
insn=49, live_throughout: 13, 14, 140, 143, dead_or_set: 
insn=53, live_throughout: 13, 14, dead_or_set: 140, 143
init_insns for 143: (insn_list:REG_DEP_TRUE 14 (nil))
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 23
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 45
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 53
changing reg in insn 49
changing reg in insn 45
changing reg in insn 41
changing reg in insn 38
changing reg in insn 33
changing reg in insn 28
changing reg in insn 23
changing reg in insn 18
changing reg in insn 15
changing reg in insn 11
changing reg in insn 7
changing reg in insn 14
changing reg in insn 53
changing reg in insn 49
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 59
changing reg in insn 58
changing reg in insn 59
changing reg in insn 28
changing reg in insn 62
changing reg in insn 61
changing reg in insn 62
changing reg in insn 33
changing reg in insn 64
changing reg in insn 63
changing reg in insn 64
changing reg in insn 38
Spilling for insn 11.
Spilling for insn 15.
Spilling for insn 23.
Spilling for insn 28.
Spilling for insn 33.
Spilling for insn 38.
Spilling for insn 45.
Spilling for insn 49.
Spilling for insn 53.

Reloads for insn # 11
Reload 0: reload_out (SI) = (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])

Reloads for insn # 23
Reload 0: reload_out (SI) = (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])

Reloads for insn # 33
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 132 [0x84])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLI2SCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 132 [0x84])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLI2SCFGR+0 S4 A32])

Reloads for insn # 38
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 136 [0x88])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLSAICFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 136 [0x88])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLSAICFGR+0 S4 A32])

Reloads for insn # 45
Reload 0: reload_out (SI) = (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])

Reloads for insn # 49
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 12 [0xc])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CIR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 12 [0xc])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CIR+0 S4 A32])

Reloads for insn # 53
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_DeInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5]
;;  ref usage 	r0={3d,2u} r1={7d,6u} r2={2d,3u} r3={3d,13u} r4={2d,2u} r5={3d,3u,1e} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 55{22d,32u,1e} in 25{25 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 56 2 NOTE_INSN_FUNCTION_BEG)

(insn 56 2 57 2 (set (reg/f:SI 3 r3 [140])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:216 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 57 56 14 2 (set (zero_extract:SI (reg/f:SI 3 r3 [140])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:216 342 {*arm_movtas_ze}
     (nil))

(insn 14 57 7 2 (set (reg:SI 2 r2 [143])
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:219 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))

(insn 7 14 8 2 (set (reg:SI 1 r1 [orig:134 D.8093 ] [134])
        (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:216 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 11 2 (set (reg:SI 1 r1 [orig:135 D.8094 ] [135])
        (ior:SI (reg:SI 1 r1 [orig:134 D.8093 ] [134])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:216 91 {*iorsi3_insn}
     (nil))

(insn 11 8 15 2 (set (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (reg:SI 1 r1 [orig:135 D.8094 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:216 709 {*thumb2_movsi_insn}
     (nil))

(insn 15 11 18 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg:SI 2 r2 [143])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:219 709 {*thumb2_movsi_insn}
     (nil))

(insn 18 15 58 2 (set (reg:SI 5 r5 [orig:136 D.8095 ] [136])
        (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:222 709 {*thumb2_movsi_insn}
     (nil))

(insn 58 18 19 2 (set (reg:SI 4 r4 [148])
        (const_int 12304 [0x3010])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:225 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 12304 [0x3010])
        (nil)))

(insn 19 58 61 2 (set (reg:SI 5 r5 [145])
        (and:SI (reg:SI 5 r5 [orig:136 D.8095 ] [136])
            (const_int -352321537 [0xffffffffeaffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:222 69 {*arm_andsi3_insn}
     (nil))

(insn 61 19 63 2 (set (reg:SI 0 r0 [150])
        (const_int 12288 [0x3000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:228 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 12288 [0x3000])
        (nil)))

(insn 63 61 20 2 (set (reg:SI 1 r1 [152])
        (const_int 12288 [0x3000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:231 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 12288 [0x3000])
        (nil)))

(insn 20 63 59 2 (set (reg:SI 5 r5 [orig:137 D.8096 ] [137])
        (and:SI (reg:SI 5 r5 [145])
            (const_int -589825 [0xfffffffffff6ffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:222 69 {*arm_andsi3_insn}
     (expr_list:REG_EQUAL (and:SI (reg:SI 5 r5 [orig:136 D.8095 ] [136])
            (const_int -352911361 [0xffffffffeaf6ffff]))
        (nil)))

(insn 59 20 62 2 (set (zero_extract:SI (reg:SI 4 r4 [148])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 9216 [0x2400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:225 342 {*arm_movtas_ze}
     (nil))

(insn 62 59 64 2 (set (zero_extract:SI (reg:SI 0 r0 [150])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 8192 [0x2000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:228 342 {*arm_movtas_ze}
     (nil))

(insn 64 62 23 2 (set (zero_extract:SI (reg:SI 1 r1 [152])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 9216 [0x2400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:231 342 {*arm_movtas_ze}
     (nil))

(insn 23 64 28 2 (set (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (reg:SI 5 r5 [orig:137 D.8096 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:222 709 {*thumb2_movsi_insn}
     (nil))

(insn 28 23 33 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (reg:SI 4 r4 [148])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:225 709 {*thumb2_movsi_insn}
     (nil))

(insn 33 28 38 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 132 [0x84])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLI2SCFGR+0 S4 A32])
        (reg:SI 0 r0 [150])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:228 709 {*thumb2_movsi_insn}
     (nil))

(insn 38 33 41 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 136 [0x88])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLSAICFGR+0 S4 A32])
        (reg:SI 1 r1 [152])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:231 709 {*thumb2_movsi_insn}
     (nil))

(insn 41 38 42 2 (set (reg:SI 1 r1 [orig:138 D.8097 ] [138])
        (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:234 709 {*thumb2_movsi_insn}
     (nil))

(insn 42 41 45 2 (set (reg:SI 1 r1 [orig:139 D.8098 ] [139])
        (and:SI (reg:SI 1 r1 [orig:138 D.8097 ] [138])
            (const_int -262145 [0xfffffffffffbffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:234 69 {*arm_andsi3_insn}
     (nil))

(insn 45 42 49 2 (set (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (reg:SI 1 r1 [orig:139 D.8098 ] [139])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:234 709 {*thumb2_movsi_insn}
     (nil))

(insn 49 45 53 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 12 [0xc])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CIR+0 S4 A32])
        (reg:SI 2 r2 [143])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:237 709 {*thumb2_movsi_insn}
     (nil))

(insn 53 49 65 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg:SI 2 r2 [143])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:240 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 65 53 66 NOTE_INSN_DELETED)

(note 66 65 0 NOTE_INSN_DELETED)


;; Function RCC_HSEConfig (RCC_HSEConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134: local to bb 2 def dominates all uses has unique first use
Reg 136 uninteresting
Found def insn 2 for 134 to be not moveable
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 136: (insn_list:REG_DEP_TRUE 8 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 14(l0): point = 0
   Insn 10(l0): point = 2
   Insn 8(l0): point = 4
   Insn 2(l0): point = 6
   Insn 18(l0): point = 8
   Insn 17(l0): point = 10
 a0(r135): [1..10]
 a1(r134): [1..6]
 a2(r136): [3..4]
Compressing live ranges: from 13 to 2 - 15%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r134): [0..1]
 a2(r136): [0..1]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r135,l0) conflicts: a1(r134,l0) a2(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r134,l0) conflicts: a0(r135,l0) a2(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r135,l0) a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r134 2r136
    modified regnos: 134 135 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a2(r136,l0)
      Pushing a1(r134,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
Disposition:
    1:r134 l0     0    0:r135 l0     3    2:r136 l0     2
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=17, live_throughout: 0, 13, 14, dead_or_set: 135
insn=18, live_throughout: 0, 13, 14, 135, dead_or_set: 135
insn=2, live_throughout: 13, 14, 135, dead_or_set: 0, 134
insn=8, live_throughout: 13, 14, 134, 135, dead_or_set: 136
insn=10, live_throughout: 13, 14, 134, 135, dead_or_set: 136
insn=14, live_throughout: 13, 14, dead_or_set: 134, 135
init_insns for 136: (insn_list:REG_DEP_TRUE 8 (nil))
changing reg in insn 2
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 14
changing reg in insn 10
changing reg in insn 8
Spilling for insn 10.
Spilling for insn 14.

Reloads for insn # 10
Reload 0: reload_out (QI) = (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887234B]+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887234B]+0 S1 A8])

Reloads for insn # 14
Reload 0: reload_out (QI) = (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887234B]+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887234B]+0 S1 A8])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_HSEConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={2d,1u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{9d,8u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 17 2 NOTE_INSN_FUNCTION_BEG)

(insn 17 3 18 2 (set (reg/f:SI 3 r3 [135])
        (const_int 14338 [0x3802])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:270 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14338 [0x3802])
        (nil)))

(insn 18 17 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [135])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:270 342 {*arm_movtas_ze}
     (nil))

(insn 8 18 10 2 (set (reg:SI 2 r2 [136])
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:270 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))

(insn 10 8 14 2 (set (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887234B]+0 S1 A8])
        (reg:QI 2 r2 [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:270 187 {*arm_movqi_insn}
     (nil))

(insn 14 10 20 2 (set (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887234B]+0 S1 A8])
        (reg:QI 0 r0 [orig:134 RCC_HSE ] [134])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:273 187 {*arm_movqi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 14 21 NOTE_INSN_DELETED)

(note 21 20 0 NOTE_INSN_DELETED)


;; Function RCC_WaitForHSEStartUp (RCC_WaitForHSEStartUp)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 50.
verify found no changes in insn with uid = 50.
deleting insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)
Reg 146 uninteresting
Reg 137: def dominates all uses has unique first use
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 139 uninteresting
Reg 137 not local to one basic block
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 146: (insn_list:REG_DEP_TRUE 50 (nil))

Pass 0 for finding pseudo/allocno costs

    a4 (r154,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r146,l0) best LO_REGS, cover GENERAL_REGS
    a0 (r139,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r137,l1) best LO_REGS, cover GENERAL_REGS
    a6 (r136,l1) best LO_REGS, cover GENERAL_REGS
    a7 (r135,l1) best LO_REGS, cover GENERAL_REGS
    a8 (r134,l1) best LO_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:356,356 GENERAL_REGS:356,356 MEM:3560
  a1(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10680
  a2(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:8900
  a3(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:356,356 GENERAL_REGS:356,356 MEM:3560
  a4(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:19550
  a6(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a7(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a8(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r146: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r139: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r137: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:356,356 GENERAL_REGS:356,356 MEM:3560
  a1(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10680
  a2(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:8900
  a3(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:356,356 GENERAL_REGS:356,356 MEM:3560
  a4(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:19550
  a6(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a7(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a8(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 38(l0): point = 0
   Insn 35(l0): point = 2
   Insn 26(l0): point = 4
   Insn 46(l0): point = 6
   Insn 45(l0): point = 8
   Insn 48(l0): point = 11
   Insn 6(l0): point = 13
   Insn 50(l0): point = 15
   Insn 47(l0): point = 17
   Insn 21(l1): point = 20
   Insn 20(l1): point = 22
   Insn 16(l1): point = 25
   Insn 15(l1): point = 27
   Insn 14(l1): point = 29
   Insn 13(l1): point = 31
   Insn 12(l1): point = 33
   Insn 11(l1): point = 35
   Insn 10(l1): point = 37
 a0(r139): [3..4]
 a1(r149): [5..8]
 a2(r154): [11..17]
 a3(r146): [14..15]
 a4(r154): [20..39]
 a5(r137): [23..37]
 a6(r136): [28..29]
 a7(r135): [32..33]
 a8(r134): [34..35]
      Moving ranges of a4r154 to a2r154:  [20..39]
 Rebuilding regno allocno list for 137
 Rebuilding regno allocno list for 136
 Rebuilding regno allocno list for 135
 Rebuilding regno allocno list for 134
Compressing live ranges: from 40 to 12 - 30%
Ranges after the compression:
 a0(r139): [0..1]
 a1(r149): [2..3]
 a2(r154): [6..11] [4..5]
 a3(r146): [4..5]
 a5(r137): [6..11]
 a6(r136): [6..7]
 a7(r135): [8..9]
 a8(r134): [10..11]
+++Allocating 48 bytes for conflict table (uncompressed size 72)
;; a0(r139,l0) conflicts:;; a1(r149,l0) conflicts:;; a2(r154,l0) conflicts: a3(r146,l0) a6(r136,l0) a5(r137,l0) a7(r135,l0) a8(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r146,l0) conflicts: a2(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r137,l0) conflicts: a2(r154,l0) a6(r136,l0) a7(r135,l0) a8(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r136,l0) conflicts: a2(r154,l0) a5(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r135,l0) conflicts: a2(r154,l0) a5(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a8(r134,l0) conflicts: a2(r154,l0) a5(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a7(r135)<->a8(r134)@125:shuffle
  regions=2, blocks=6, points=12
    allocnos=9 (big 0), copies=1, conflicts=1, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r139 1r149 2r154 3r146 5r137 6r136 7r135 8r134
    modified regnos: 134 135 136 137 139 146 149 154
    border:
    Pressure: GENERAL_REGS=4
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a3(r146,l0)
      Pushing a0(r139,l0)
      Pushing a1(r149,l0)
      Pushing a2(r154,l0)
      Pushing a5(r137,l0)
      Pushing a8(r134,l0)
      Pushing a7(r135,l0)
      Pushing a6(r136,l0)
      Popping a6(r136,l0)  -- assign reg 3
      Popping a7(r135,l0)  -- assign reg 3
      Popping a8(r134,l0)  -- assign reg 3
      Popping a5(r137,l0)  -- assign reg 2
      Popping a2(r154,l0)  -- assign reg 1
      Popping a1(r149,l0)  -- assign reg 3
      Popping a0(r139,l0)  -- assign reg 0
      Popping a3(r146,l0)  -- assign reg 3
Disposition:
    8:r134 l0     3    7:r135 l0     3    6:r136 l0     3    5:r137 l0     2
    0:r139 l0     0    3:r146 l0     3    1:r149 l0     3    2:r154 l0     1
New iteration of spill/restore move
+++Costs: overall -44, reg -44, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=47, live_throughout: 13, 14, dead_or_set: 154
insn=50, live_throughout: 13, 14, 154, dead_or_set: 146
insn=6, live_throughout: 13, 14, 154, dead_or_set: 146
insn=48, live_throughout: 13, 14, 154, dead_or_set: 154
insn=18, live_throughout: 13, 14, 154, dead_or_set: 
insn=10, live_throughout: 13, 14, 154, dead_or_set: 137
insn=11, live_throughout: 13, 14, 137, 154, dead_or_set: 134
insn=12, live_throughout: 13, 14, 137, 154, dead_or_set: 134, 135
insn=13, live_throughout: 13, 14, 137, 154, dead_or_set: 135
insn=14, live_throughout: 13, 14, 137, 154, dead_or_set: 136
insn=15, live_throughout: 13, 14, 137, 154, dead_or_set: 136
insn=16, live_throughout: 13, 14, 137, 154, dead_or_set: 
insn=20, live_throughout: 13, 14, 154, dead_or_set: 137
insn=21, live_throughout: 13, 14, 154, dead_or_set: 
insn=22, live_throughout: 13, 14, dead_or_set: 
insn=45, live_throughout: 13, 14, dead_or_set: 149
insn=46, live_throughout: 13, 14, 149, dead_or_set: 149
insn=26, live_throughout: 13, 14, dead_or_set: 139, 149
insn=35, live_throughout: 13, 14, dead_or_set: 0, 139
insn=38, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 146: (insn_list:REG_DEP_TRUE 50 (nil))
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 10
changing reg in insn 20
changing reg in insn 26
changing reg in insn 35
changing reg in insn 50
changing reg in insn 6
changing reg in insn 46
changing reg in insn 45
changing reg in insn 46
changing reg in insn 26
changing reg in insn 48
changing reg in insn 47
changing reg in insn 48
changing reg in insn 10
Spilling for insn 6.
Spilling for insn 13.

Reloads for insn # 6
Reload 0: reload_out (SI) = (mem/v/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [3 startupcounter+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [3 startupcounter+0 S4 A32])

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/v/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [3 startupcounter+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [3 startupcounter+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)


RCC_WaitForHSEStartUp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d,1u} r3={7d,6u} r13={1d,9u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 43{19d,24u,0e} in 18{18 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 47 2 NOTE_INSN_FUNCTION_BEG)

(insn 47 2 50 2 (set (reg/f:SI 1 r1 [154])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 50 47 6 2 (set (reg:SI 3 r3 [146])
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:290 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))

(insn 6 50 48 2 (set (mem/v/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [3 startupcounter+0 S4 A32])
        (reg:SI 3 r3 [146])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:290 709 {*thumb2_movsi_insn}
     (nil))

(insn 48 6 18 2 (set (zero_extract:SI (reg/f:SI 1 r1 [154])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 342 {*arm_movtas_ze}
     (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  4 [86.0%]  (dfs_back)
(code_label 18 48 7 3 5 "" [1 uses])

(note 7 18 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 7 11 3 (set (reg/v:SI 2 r2 [orig:137 statusreg ] [137])
        (mem/s/v:SI (reg/f:SI 1 r1 [154]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887232 [0x40023800]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (nil)))

(insn 11 10 12 3 (set (reg:SI 3 r3 [orig:134 startupcounter.2 ] [134])
        (mem/v/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [3 startupcounter+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:297 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 3 r3 [orig:135 startupcounter.3 ] [135])
        (plus:SI (reg:SI 3 r3 [orig:134 startupcounter.2 ] [134])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:297 4 {*arm_addsi3}
     (nil))

(insn 13 12 14 3 (set (mem/v/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [3 startupcounter+0 S4 A32])
        (reg:SI 3 r3 [orig:135 startupcounter.3 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:297 709 {*thumb2_movsi_insn}
     (nil))

(insn 14 13 15 3 (set (reg:SI 3 r3 [orig:136 startupcounter.4 ] [136])
        (mem/v/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [3 startupcounter+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 709 {*thumb2_movsi_insn}
     (nil))

(insn 15 14 16 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:136 startupcounter.4 ] [136])
            (const_int 20480 [0x5000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 22)
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  4 [95.5%]  (fallthru)
;; Succ edge  5 [4.5%]  (loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [95.5%]  (fallthru)
(note 17 16 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 17 20 4 NOTE_INSN_DELETED)

(insn 20 19 21 4 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 statusreg ] [137])
                (const_int 1 [0x1])
                (const_int 17 [0x11]))
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 73 {*zeroextractsi_compare0_scratch}
     (nil))

(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:298 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil))
 -> 18)
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  3 [86.0%]  (dfs_back)
;; Succ edge  5 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  4 [14.0%]  (fallthru,loop_exit)
;; Pred edge  3 [4.5%]  (loop_exit)
(code_label 22 21 23 5 4 "" [1 uses])

(note 23 22 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 27 23 28 5 NOTE_INSN_DELETED)

(note 28 27 29 5 NOTE_INSN_DELETED)

(note 29 28 30 5 NOTE_INSN_DELETED)

(note 30 29 45 5 NOTE_INSN_DELETED)

(insn 45 30 46 5 (set (reg/f:SI 3 r3 [149])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 46 45 26 5 (set (zero_extract:SI (reg/f:SI 3 r3 [149])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 342 {*arm_movtas_ze}
     (nil))

(insn 26 46 35 5 (set (reg/v:SI 0 r0 [orig:139 statusreg ] [139])
        (mem/s/v:SI (reg/f:SI 3 r3 [149]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887232 [0x40023800]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (nil)))

(insn 35 26 38 5 (set (reg/i:SI 0 r0)
        (zero_extract:SI (reg/v:SI 0 r0 [orig:139 statusreg ] [139])
            (const_int 1 [0x1])
            (const_int 17 [0x11]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:309 131 {extzv_t2}
     (nil))

(insn 38 35 49 5 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:309 -1
     (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 49 38 51 NOTE_INSN_DELETED)

(note 51 49 0 NOTE_INSN_DELETED)


;; Function RCC_AdjustHSICalibrationValue (RCC_AdjustHSICalibrationValue)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 135 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 18(l0): point = 8
   Insn 17(l0): point = 10
 a0(r140): [1..10]
 a1(r138): [1..2]
 a2(r135): [3..4]
 a3(r134): [5..6]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r140): [0..5]
 a1(r138): [0..1]
 a2(r135): [2..3]
 a3(r134): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r140,l0) conflicts: a1(r138,l0) a2(r135,l0) a3(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r138,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a3(r134,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a2(r135)<->a3(r134)@125:shuffle
  cp1:a1(r138)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r138 2r135 3r134
    modified regnos: 134 135 138 140
    border:
    Pressure: GENERAL_REGS=4
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r138,l0)
      Pushing a3(r134,l0)
      Pushing a2(r135,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r134,l0)  -- assign reg 2
      Popping a1(r138,l0)  -- assign reg 2
Disposition:
    3:r134 l0     2    2:r135 l0     2    1:r138 l0     2    0:r140 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=17, live_throughout: 0, 13, 14, dead_or_set: 140
insn=18, live_throughout: 0, 13, 14, 140, dead_or_set: 140
insn=8, live_throughout: 0, 13, 14, 140, dead_or_set: 134
insn=9, live_throughout: 0, 13, 14, 140, dead_or_set: 134, 135
insn=11, live_throughout: 13, 14, 140, dead_or_set: 0, 135, 138
insn=14, live_throughout: 13, 14, dead_or_set: 138, 140
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 11
changing reg in insn 11
changing reg in insn 14
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 14
changing reg in insn 8
Spilling for insn 14.

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_AdjustHSICalibrationValue

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={4d,3u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 17 2 NOTE_INSN_DELETED)

(insn 17 10 18 2 (set (reg/f:SI 3 r3 [140])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:325 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 18 17 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [140])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:325 342 {*arm_movtas_ze}
     (nil))

(insn 8 18 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:325 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 11 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -249 [0xffffffffffffff07]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:328 69 {*arm_andsi3_insn}
     (nil))

(insn 11 9 14 2 (set (reg/v:SI 2 r2 [orig:138 tmpreg ] [138])
        (ior:SI (ashift:SI (reg:SI 0 r0 [ HSICalibrationValue ])
                (const_int 3 [0x3]))
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:331 262 {*arith_shiftsi}
     (nil))

(insn 14 11 19 2 (set (mem/s/v:SI (reg/f:SI 3 r3 [140]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:138 tmpreg ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:334 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 19 14 20 NOTE_INSN_DELETED)

(note 20 19 0 NOTE_INSN_DELETED)


;; Function RCC_HSICmd (RCC_HSICmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 9(l0): point = 0
   Insn 2(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
 a0(r136): [1..6]
 a1(r135): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r135): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 0
Disposition:
    1:r135 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 0, 13, 14, dead_or_set: 136
insn=13, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 135
insn=9, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 2
changing reg in insn 9
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949312B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949312B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_HSICmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 3 13 2 (set (reg/f:SI 3 r3 [136])
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:360 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))

(insn 13 12 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:360 342 {*arm_movtas_ze}
     (nil))

(insn 9 13 14 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949312B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:135 NewState ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:360 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 9 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function RCC_LSEConfig (RCC_LSEConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 136: local to bb 2 def dominates all uses has unique first use
Reg 134 uninteresting (no unique first use)
Reg 145 uninteresting
Ignoring reg 136 with equiv init insn
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 136: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 35 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:76660
  a1(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:6660
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30430
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding pseudo/allocno costs

    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:76660
  a1(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:6660
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30430
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 37(l0): point = 1
   Insn 35(l0): point = 3
   Insn 47(l0): point = 6
   Insn 28(l0): point = 8
   Insn 45(l0): point = 11
   Insn 19(l0): point = 14
   Insn 18(l0): point = 16
   Insn 17(l0): point = 19
   Insn 16(l0): point = 21
   Insn 15(l0): point = 23
   Insn 10(l0): point = 25
   Insn 2(l0): point = 27
   Insn 8(l0): point = 29
   Insn 50(l0): point = 31
   Insn 49(l0): point = 33
 a0(r135): [9..33] [2..5]
 a1(r145): [2..3]
 a2(r134): [17..27] [9..10]
 a3(r136): [24..29]
Compressing live ranges: from 36 to 6 - 16%
Ranges after the compression:
 a0(r135): [2..5] [0..1]
 a1(r145): [0..1]
 a2(r134): [4..5] [2..3]
 a3(r136): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r135,l0) conflicts: a1(r145,l0) a2(r134,l0) a3(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r145,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r134,l0) conflicts: a0(r135,l0) a3(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r136,l0) conflicts: a0(r135,l0) a2(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=8, points=6
    allocnos=4 (big 0), copies=0, conflicts=1, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r135 1r145 2r134 3r136
    modified regnos: 134 135 136 145
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a1(r145,l0)
      Pushing a2(r134,l0)
      Pushing a3(r136,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a3(r136,l0)  -- assign reg 2
      Popping a2(r134,l0)  -- assign reg 0
      Popping a1(r145,l0)  -- assign reg 2
Disposition:
    2:r134 l0     0    0:r135 l0     3    3:r136 l0     2    1:r145 l0     2
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=49, live_throughout: 0, 13, 14, dead_or_set: 135
insn=50, live_throughout: 0, 13, 14, 135, dead_or_set: 135
insn=8, live_throughout: 0, 13, 14, 135, dead_or_set: 136
insn=2, live_throughout: 13, 14, 135, 136, dead_or_set: 0, 134
insn=10, live_throughout: 13, 14, 134, 135, 136, dead_or_set: 
insn=15, live_throughout: 13, 14, 134, 135, dead_or_set: 136
insn=16, live_throughout: 13, 14, 134, 135, dead_or_set: 
insn=17, live_throughout: 13, 14, 134, 135, dead_or_set: 
insn=18, live_throughout: 13, 14, 135, dead_or_set: 134
insn=19, live_throughout: 13, 14, 135, dead_or_set: 
insn=45, live_throughout: 13, 14, 135, dead_or_set: 
insn=22, live_throughout: 13, 14, 134, 135, dead_or_set: 
insn=28, live_throughout: 13, 14, dead_or_set: 134, 135
insn=47, live_throughout: 13, 14, dead_or_set: 
insn=31, live_throughout: 13, 14, 135, dead_or_set: 
insn=35, live_throughout: 13, 14, 135, dead_or_set: 145
insn=37, live_throughout: 13, 14, dead_or_set: 135, 145
insn=40, live_throughout: 13, 14, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 35 (nil))
changing reg in insn 2
changing reg in insn 18
changing reg in insn 16
changing reg in insn 50
changing reg in insn 49
changing reg in insn 50
changing reg in insn 37
changing reg in insn 28
changing reg in insn 15
changing reg in insn 10
changing reg in insn 8
changing reg in insn 35
Spilling for insn 10.
Spilling for insn 15.
Spilling for insn 28.
Spilling for insn 37.

Reloads for insn # 10
Reload 0: reload_out (QI) = (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])

Reloads for insn # 15
Reload 0: reload_out (QI) = (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])

Reloads for insn # 28
Reload 0: reload_out (QI) = (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])

Reloads for insn # 37
Reload 0: reload_out (QI) = (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

Forwarding edge 3->4 to 6 failed.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)


RCC_LSEConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d,3u} r1={1d} r2={3d,3u} r3={3d,5u} r13={1d,7u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 33{12d,21u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 49 2 NOTE_INSN_FUNCTION_BEG)

(insn 49 3 50 2 (set (reg/f:SI 3 r3 [135])
        (const_int 14448 [0x3870])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:387 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14448 [0x3870])
        (nil)))

(insn 50 49 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [135])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:387 342 {*arm_movtas_ze}
     (nil))

(insn 8 50 10 2 (set (reg:SI 2 r2 [136])
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:387 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))

(insn 10 8 15 2 (set (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
        (reg:QI 2 r2 [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:387 187 {*arm_movqi_insn}
     (nil))

(insn 15 10 16 2 (set (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
        (reg:QI 2 r2 [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:390 187 {*arm_movqi_insn}
     (nil))

(insn 16 15 17 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:134 RCC_LSE ] [134])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:393 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 17 16 42 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:393 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil))
 -> 22)
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%]  (fallthru)
(note 42 17 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 42 19 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:134 RCC_LSE ] [134])
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:393 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 19 18 44 3 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 40)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:393 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 40)
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [29.0%]  (fallthru)
(note 44 19 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 45 44 46 4 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 4 -> ( 6)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%] 

(barrier 46 45 22)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [29.0%] 
(code_label 22 46 23 5 12 "" [1 uses])

(note 23 22 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 23 47 5 (set (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
        (reg:QI 0 r0 [orig:134 RCC_LSE ] [134])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:397 187 {*arm_movqi_insn}
     (nil))

(jump_insn 47 28 48 5 (set (pc)
        (label_ref 40)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:398 230 {*arm_jump}
     (nil)
 -> 40)
;; End of basic block 5 -> ( 7)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 48 47 31)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 31 48 32 6 13 "" [1 uses])

(note 32 31 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 32 37 6 (set (reg:SI 2 r2 [145])
        (const_int 5 [0x5])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:401 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 5 [0x5])
        (nil)))

(insn 37 35 40 6 (set (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887344B]+0 S1 A8])
        (reg:QI 2 r2 [145])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:401 187 {*arm_movqi_insn}
     (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [71.0%] 
;; Pred edge  5 [100.0%] 
(code_label 40 37 41 7 10 "" [2 uses])

(note 41 40 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 52 41 53 NOTE_INSN_DELETED)

(note 53 52 0 NOTE_INSN_DELETED)


;; Function RCC_LSICmd (RCC_LSICmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 9(l0): point = 0
   Insn 2(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
 a0(r136): [1..6]
 a1(r135): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r135): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 0
Disposition:
    1:r135 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 0, 13, 14, dead_or_set: 136
insn=13, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 135
insn=9, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 2
changing reg in insn 9
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111953024B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111953024B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_LSICmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 3 13 2 (set (reg/f:SI 3 r3 [136])
        (const_int 3712 [0xe80])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:425 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 3712 [0xe80])
        (nil)))

(insn 13 12 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:425 342 {*arm_movtas_ze}
     (nil))

(insn 9 13 14 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111953024B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:135 NewState ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:425 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 9 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function RCC_PLLConfig (RCC_PLLConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 27.
rescanning insn with uid = 27.
deleting insn with uid = 27.
deleting insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 148 uninteresting
Reg 150: local to bb 2 def dominates all uses has unique first use
Reg 153: local to bb 2 def dominates all uses has unique first use
Ignoring reg 147, has equiv memory
Reg 152: local to bb 2 def dominates all uses has unique first use
Reg 154: local to bb 2 def dominates all uses has unique first use
Reg 142 uninteresting
Found def insn 12 for 150 to be not moveable
Examining insn 14, def for 152
  found unusable input reg 147.
Found def insn 15 for 153 to be not moveable
Examining insn 16, def for 154
  all ok
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 147: (insn_list:REG_DEP_TRUE 27 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r147,l0) best LO_REGS, cover GENERAL_REGS
    a1 (r142,l0) best LO_REGS, cover GENERAL_REGS

  a0(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:10000
  a7(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r157: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r147: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r142: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:10000
  a7(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 21(l0): point = 0
   Insn 18(l0): point = 2
   Insn 25(l0): point = 4
   Insn 16(l0): point = 6
   Insn 14(l0): point = 8
   Insn 27(l0): point = 10
   Insn 24(l0): point = 12
   Insn 15(l0): point = 14
   Insn 12(l0): point = 16
   Insn 10(l0): point = 18
 a0(r157): [1..12]
 a1(r142): [1..2]
 a2(r152): [3..8]
 a3(r154): [3..6]
 a4(r153): [7..14]
 a5(r150): [9..16]
 a6(r147): [9..10]
 a7(r148): [17..18]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r157): [0..7]
 a1(r142): [0..1]
 a2(r152): [2..5]
 a3(r154): [2..3]
 a4(r153): [4..7]
 a5(r150): [6..7]
 a6(r147): [6..7]
 a7(r148): [8..9]
+++Allocating 56 bytes for conflict table (uncompressed size 64)
;; a0(r157,l0) conflicts: a1(r142,l0) a3(r154,l0) a2(r152,l0) a4(r153,l0) a5(r150,l0) a6(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r142,l0) conflicts: a0(r157,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r152,l0) conflicts: a0(r157,l0) a3(r154,l0) a4(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r154,l0) conflicts: a0(r157,l0) a2(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r153,l0) conflicts: a0(r157,l0) a2(r152,l0) a5(r150,l0) a6(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r150,l0) conflicts: a0(r157,l0) a4(r153,l0) a6(r147,l0)
;;     total conflict hard regs: 3 14
;;     conflict hard regs: 3 14

;; a6(r147,l0) conflicts: a0(r157,l0) a4(r153,l0) a5(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r148,l0) conflicts:  cp0:a5(r150)<->a7(r148)@125:shuffle
  cp1:a2(r152)<->a5(r150)@125:shuffle
  cp2:a2(r152)<->a6(r147)@125:shuffle
  cp3:a3(r154)<->a4(r153)@125:shuffle
  cp4:a1(r142)<->a2(r152)@125:shuffle
  cp5:a1(r142)<->a3(r154)@125:shuffle
  regions=1, blocks=3, points=10
    allocnos=8 (big 0), copies=6, conflicts=1, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r157 1r142 2r152 3r154 4r153 5r150 6r147 7r148
    modified regnos: 142 147 148 150 152 153 154 157
    border:
    Pressure: GENERAL_REGS=5
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 2 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 3 regs less
      Pushing a6(r147,l0)
      Pushing a4(r153,l0)
      Pushing a3(r154,l0)
      Pushing a2(r152,l0)
      Pushing a1(r142,l0)
      Pushing a0(r157,l0)
      Pushing a5(r150,l0)
      Pushing a7(r148,l0)
      Popping a7(r148,l0)  -- assign reg 1
      Popping a5(r150,l0)  -- assign reg 2
      Popping a0(r157,l0)  -- assign reg 0
      Popping a1(r142,l0)  -- assign reg 2
      Popping a2(r152,l0)  -- assign reg 2
      Popping a3(r154,l0)  -- assign reg 3
      Popping a4(r153,l0)  -- assign reg 3
      Popping a6(r147,l0)  -- assign reg 1
Disposition:
    1:r142 l0     2    6:r147 l0     1    7:r148 l0     1    5:r150 l0     2
    2:r152 l0     2    4:r153 l0     3    3:r154 l0     3    0:r157 l0     0
New iteration of spill/restore move
+++Costs: overall -750, reg -750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=10, live_throughout: 2, 3, 13, 14, dead_or_set: 0, 1, 148
insn=12, live_throughout: 3, 13, 14, dead_or_set: 2, 148, 150
insn=15, live_throughout: 13, 14, 150, dead_or_set: 3, 153
insn=24, live_throughout: 13, 14, 150, 153, dead_or_set: 157
insn=27, live_throughout: 13, 14, 150, 153, 157, dead_or_set: 147
insn=14, live_throughout: 13, 14, 153, 157, dead_or_set: 147, 150, 152
insn=16, live_throughout: 13, 14, 152, 157, dead_or_set: 153, 154
insn=25, live_throughout: 13, 14, 152, 154, 157, dead_or_set: 157
insn=18, live_throughout: 13, 14, 157, dead_or_set: 142, 152, 154
insn=21, live_throughout: 13, 14, dead_or_set: 142, 157
init_insns for 147: (insn_list:REG_DEP_TRUE 27 (nil))
changing reg in insn 18
changing reg in insn 21
changing reg in insn 27
changing reg in insn 14
changing reg in insn 10
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 14
changing reg in insn 18
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 18
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 21
Spilling for insn 21.

Reloads for insn # 21
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 0 r0 [157])
                                                        (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 0 r0 [157])
                                                        (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={3d,3u} r1={3d,3u} r2={4d,4u} r3={3d,3u} r13={1d,3u,1e} r14={1d,1u} 
;;    total ref usage 33{15d,17u,1e} in 10{10 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 8 3 2 NOTE_INSN_DELETED)

(note 3 2 4 2 NOTE_INSN_DELETED)

(note 4 3 5 2 NOTE_INSN_DELETED)

(note 5 4 7 2 NOTE_INSN_DELETED)

(note 7 5 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 7 13 2 NOTE_INSN_DELETED)

(note 13 11 17 2 NOTE_INSN_DELETED)

(note 17 13 10 2 NOTE_INSN_DELETED)

(insn 10 17 12 2 (set (reg:SI 1 r1 [148])
        (ior:SI (reg:SI 1 r1 [ PLLM ])
            (reg:SI 0 r0 [ RCC_PLLSource ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 91 {*iorsi3_insn}
     (nil))

(insn 12 10 15 2 (set (reg:SI 2 r2 [150])
        (ior:SI (ashift:SI (reg:SI 2 r2 [ PLLN ])
                (const_int 6 [0x6]))
            (reg:SI 1 r1 [148]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 262 {*arith_shiftsi}
     (nil))

(insn 15 12 24 2 (set (reg:SI 3 r3 [153])
        (lshiftrt:SI (reg:SI 3 r3 [ PLLP ])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 119 {*arm_shiftsi3}
     (nil))

(insn 24 15 27 2 (set (reg/f:SI 0 r0 [157])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 27 24 14 2 (set (reg/v:SI 1 r1 [orig:147 PLLQ ] [147])
        (mem/c/i:SI (reg/f:SI 13 sp) [3 PLLQ+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 13 sp) [3 PLLQ+0 S4 A32])
        (nil)))

(insn 14 27 16 2 (set (reg:SI 2 r2 [152])
        (ior:SI (ashift:SI (reg/v:SI 1 r1 [orig:147 PLLQ ] [147])
                (const_int 24 [0x18]))
            (reg:SI 2 r2 [150]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 262 {*arith_shiftsi}
     (nil))

(insn 16 14 25 2 (set (reg:SI 3 r3 [154])
        (plus:SI (reg:SI 3 r3 [153])
            (const_int -1 [0xffffffffffffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 4 {*arm_addsi3}
     (nil))

(insn 25 16 18 2 (set (zero_extract:SI (reg/f:SI 0 r0 [157])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 342 {*arm_movtas_ze}
     (nil))

(insn 18 25 21 2 (set (reg:SI 2 r2 [orig:142 D.8070 ] [142])
        (ior:SI (ashift:SI (reg:SI 3 r3 [154])
                (const_int 16 [0x10]))
            (reg:SI 2 r2 [152]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 262 {*arith_shiftsi}
     (nil))

(insn 21 18 26 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 0 r0 [157])
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (reg:SI 2 r2 [orig:142 D.8070 ] [142])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:472 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 21 28 NOTE_INSN_DELETED)

(note 28 26 0 NOTE_INSN_DELETED)


;; Function RCC_PLLCmd (RCC_PLLCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 9(l0): point = 0
   Insn 2(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
 a0(r136): [1..6]
 a1(r135): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r135): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 0
Disposition:
    1:r135 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 0, 13, 14, dead_or_set: 136
insn=13, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 135
insn=9, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 2
changing reg in insn 9
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949408B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949408B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 3 13 2 (set (reg/f:SI 3 r3 [136])
        (const_int 96 [0x60])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:490 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 96 [0x60])
        (nil)))

(insn 13 12 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:490 342 {*arm_movtas_ze}
     (nil))

(insn 9 13 14 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949408B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:135 NewState ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:490 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 9 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function RCC_PLLI2SConfig (RCC_PLLI2SConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 143: local to bb 2 def dominates all uses has unique first use
Reg 144: local to bb 2 def dominates all uses has unique first use
Reg 138 uninteresting
Found def insn 9 for 143 to be not moveable
Found def insn 10 for 144 to be not moveable
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 19(l0): point = 4
   Insn 10(l0): point = 6
   Insn 18(l0): point = 8
   Insn 9(l0): point = 10
 a0(r147): [1..8]
 a1(r138): [1..2]
 a2(r144): [3..6]
 a3(r143): [7..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r147): [0..5]
 a1(r138): [0..1]
 a2(r144): [2..3]
 a3(r143): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r147,l0) conflicts: a1(r138,l0) a2(r144,l0) a3(r143,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14

;; a1(r138,l0) conflicts: a0(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r144,l0) conflicts: a0(r147,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14

;; a3(r143,l0) conflicts: a0(r147,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14

  cp0:a2(r144)<->a3(r143)@125:shuffle
  cp1:a1(r138)<->a2(r144)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r147 1r138 2r144 3r143
    modified regnos: 138 143 144 147
    border:
    Pressure: GENERAL_REGS=5
    Reg 147 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 3 regs less
      Pushing a1(r138,l0)
      Pushing a2(r144,l0)
      Pushing a3(r143,l0)
      Pushing a0(r147,l0)
      Popping a0(r147,l0)  -- assign reg 3
      Popping a3(r143,l0)  -- assign reg 0
      Popping a2(r144,l0)  -- assign reg 0
      Popping a1(r138,l0)  -- assign reg 0
Disposition:
    1:r138 l0     0    3:r143 l0     0    2:r144 l0     0    0:r147 l0     3
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=9, live_throughout: 1, 2, 13, 14, dead_or_set: 0, 143
insn=18, live_throughout: 1, 2, 13, 14, 143, dead_or_set: 147
insn=10, live_throughout: 2, 13, 14, 147, dead_or_set: 1, 143, 144
insn=19, live_throughout: 2, 13, 14, 144, 147, dead_or_set: 147
insn=12, live_throughout: 13, 14, 147, dead_or_set: 2, 138, 144
insn=15, live_throughout: 13, 14, dead_or_set: 138, 147
changing reg in insn 12
changing reg in insn 15
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 15
Spilling for insn 15.

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [147])
                                                        (const_int 132 [0x84])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLI2SCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [147])
                                                        (const_int 132 [0x84])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLI2SCFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLI2SConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3]
;;  ref usage 	r0={4d,4u} r1={1d,1u} r2={1d,1u} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 3 2 NOTE_INSN_DELETED)

(note 3 2 4 2 NOTE_INSN_DELETED)

(note 4 3 5 2 NOTE_INSN_DELETED)

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 11 2 NOTE_INSN_DELETED)

(note 11 8 9 2 NOTE_INSN_DELETED)

(insn 9 11 18 2 (set (reg:SI 0 r0 [143])
        (ashift:SI (reg:SI 0 r0 [ PLLI2SN ])
            (const_int 6 [0x6]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 119 {*arm_shiftsi3}
     (nil))

(insn 18 9 10 2 (set (reg/f:SI 3 r3 [147])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 10 18 19 2 (set (reg:SI 0 r0 [144])
        (ior:SI (ashift:SI (reg:SI 1 r1 [ PLLI2SQ ])
                (const_int 24 [0x18]))
            (reg:SI 0 r0 [143]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 262 {*arith_shiftsi}
     (nil))

(insn 19 10 12 2 (set (zero_extract:SI (reg/f:SI 3 r3 [147])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 342 {*arm_movtas_ze}
     (nil))

(insn 12 19 15 2 (set (reg:SI 0 r0 [orig:138 D.8058 ] [138])
        (ior:SI (ashift:SI (reg:SI 2 r2 [ PLLI2SR ])
                (const_int 28 [0x1c]))
            (reg:SI 0 r0 [144]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 262 {*arith_shiftsi}
     (nil))

(insn 15 12 20 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [147])
                (const_int 132 [0x84])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLI2SCFGR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.8058 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:559 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 15 21 NOTE_INSN_DELETED)

(note 21 20 0 NOTE_INSN_DELETED)


;; Function RCC_PLLI2SCmd (RCC_PLLI2SCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 9(l0): point = 0
   Insn 2(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
 a0(r136): [1..6]
 a1(r135): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r135): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 0
Disposition:
    1:r135 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 0, 13, 14, dead_or_set: 136
insn=13, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 135
insn=9, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 2
changing reg in insn 9
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949416B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949416B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLI2SCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 3 13 2 (set (reg/f:SI 3 r3 [136])
        (const_int 104 [0x68])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:573 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 104 [0x68])
        (nil)))

(insn 13 12 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:573 342 {*arm_movtas_ze}
     (nil))

(insn 9 13 14 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949416B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:135 NewState ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:573 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 9 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function RCC_PLLSAIConfig (RCC_PLLSAIConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 143: local to bb 2 def dominates all uses has unique first use
Reg 144: local to bb 2 def dominates all uses has unique first use
Reg 138 uninteresting
Found def insn 9 for 143 to be not moveable
Found def insn 10 for 144 to be not moveable
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 19(l0): point = 4
   Insn 10(l0): point = 6
   Insn 18(l0): point = 8
   Insn 9(l0): point = 10
 a0(r147): [1..8]
 a1(r138): [1..2]
 a2(r144): [3..6]
 a3(r143): [7..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r147): [0..5]
 a1(r138): [0..1]
 a2(r144): [2..3]
 a3(r143): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r147,l0) conflicts: a1(r138,l0) a2(r144,l0) a3(r143,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14

;; a1(r138,l0) conflicts: a0(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r144,l0) conflicts: a0(r147,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14

;; a3(r143,l0) conflicts: a0(r147,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14

  cp0:a2(r144)<->a3(r143)@125:shuffle
  cp1:a1(r138)<->a2(r144)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r147 1r138 2r144 3r143
    modified regnos: 138 143 144 147
    border:
    Pressure: GENERAL_REGS=5
    Reg 147 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 3 regs less
      Pushing a1(r138,l0)
      Pushing a2(r144,l0)
      Pushing a3(r143,l0)
      Pushing a0(r147,l0)
      Popping a0(r147,l0)  -- assign reg 3
      Popping a3(r143,l0)  -- assign reg 0
      Popping a2(r144,l0)  -- assign reg 0
      Popping a1(r138,l0)  -- assign reg 0
Disposition:
    1:r138 l0     0    3:r143 l0     0    2:r144 l0     0    0:r147 l0     3
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=9, live_throughout: 1, 2, 13, 14, dead_or_set: 0, 143
insn=18, live_throughout: 1, 2, 13, 14, 143, dead_or_set: 147
insn=10, live_throughout: 2, 13, 14, 147, dead_or_set: 1, 143, 144
insn=19, live_throughout: 2, 13, 14, 144, 147, dead_or_set: 147
insn=12, live_throughout: 13, 14, 147, dead_or_set: 2, 138, 144
insn=15, live_throughout: 13, 14, dead_or_set: 138, 147
changing reg in insn 12
changing reg in insn 15
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 15
Spilling for insn 15.

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [147])
                                                        (const_int 136 [0x88])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLSAICFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [147])
                                                        (const_int 136 [0x88])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLSAICFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLSAIConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3]
;;  ref usage 	r0={4d,4u} r1={1d,1u} r2={1d,1u} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 22{11d,11u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 3 2 NOTE_INSN_DELETED)

(note 3 2 4 2 NOTE_INSN_DELETED)

(note 4 3 5 2 NOTE_INSN_DELETED)

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 11 2 NOTE_INSN_DELETED)

(note 11 8 9 2 NOTE_INSN_DELETED)

(insn 9 11 18 2 (set (reg:SI 0 r0 [143])
        (ashift:SI (reg:SI 0 r0 [ PLLSAIN ])
            (const_int 6 [0x6]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 119 {*arm_shiftsi3}
     (nil))

(insn 18 9 10 2 (set (reg/f:SI 3 r3 [147])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 10 18 19 2 (set (reg:SI 0 r0 [144])
        (ior:SI (ashift:SI (reg:SI 1 r1 [ PLLSAIQ ])
                (const_int 24 [0x18]))
            (reg:SI 0 r0 [143]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 262 {*arith_shiftsi}
     (nil))

(insn 19 10 12 2 (set (zero_extract:SI (reg/f:SI 3 r3 [147])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 342 {*arm_movtas_ze}
     (nil))

(insn 12 19 15 2 (set (reg:SI 0 r0 [orig:138 D.8050 ] [138])
        (ior:SI (ashift:SI (reg:SI 2 r2 [ PLLSAIR ])
                (const_int 28 [0x1c]))
            (reg:SI 0 r0 [144]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 262 {*arith_shiftsi}
     (nil))

(insn 15 12 20 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [147])
                (const_int 136 [0x88])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLSAICFGR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.8050 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:604 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 15 21 NOTE_INSN_DELETED)

(note 21 20 0 NOTE_INSN_DELETED)


;; Function RCC_PLLSAICmd (RCC_PLLSAICmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 9(l0): point = 0
   Insn 2(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
 a0(r136): [1..6]
 a1(r135): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r135): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 0
Disposition:
    1:r135 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 0, 13, 14, dead_or_set: 136
insn=13, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 135
insn=9, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 2
changing reg in insn 9
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949424B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949424B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PLLSAICmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 3 13 2 (set (reg/f:SI 3 r3 [136])
        (const_int 112 [0x70])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:620 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 112 [0x70])
        (nil)))

(insn 13 12 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:620 342 {*arm_movtas_ze}
     (nil))

(insn 9 13 14 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949424B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:135 NewState ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:620 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 9 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function RCC_ClockSecuritySystemCmd (RCC_ClockSecuritySystemCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 9(l0): point = 0
   Insn 2(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
 a0(r136): [1..6]
 a1(r135): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r135): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 0
Disposition:
    1:r135 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 0, 13, 14, dead_or_set: 136
insn=13, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 135
insn=9, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 2
changing reg in insn 9
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949388B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949388B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_ClockSecuritySystemCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 3 13 2 (set (reg/f:SI 3 r3 [136])
        (const_int 76 [0x4c])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:638 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 76 [0x4c])
        (nil)))

(insn 13 12 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:638 342 {*arm_movtas_ze}
     (nil))

(insn 9 13 14 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949388B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:135 NewState ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:638 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 9 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function RCC_MCO1Config (RCC_MCO1Config)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 141 uninteresting
Reg 136 uninteresting
Reg 137 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
 a0(r140): [1..12]
 a1(r137): [1..2]
 a2(r136): [3..4]
 a3(r141): [5..6]
 a4(r134): [7..8]
Compressing live ranges: from 15 to 8 - 53%
Ranges after the compression:
 a0(r140): [0..7]
 a1(r137): [0..1]
 a2(r136): [2..3]
 a3(r141): [4..5]
 a4(r134): [6..7]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r140,l0) conflicts: a1(r137,l0) a2(r136,l0) a3(r141,l0) a4(r134,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

;; a1(r137,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a3(r141,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

;; a4(r134,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  cp0:a3(r141)<->a4(r134)@125:shuffle
  cp1:a2(r136)<->a3(r141)@125:shuffle
  cp2:a1(r137)<->a2(r136)@125:shuffle
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=3, conflicts=4, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r137 2r136 3r141 4r134
    modified regnos: 134 136 137 140 141
    border:
    Pressure: GENERAL_REGS=5
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
      Pushing a1(r137,l0)
      Pushing a2(r136,l0)
      Pushing a4(r134,l0)
      Pushing a3(r141,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 3
      Popping a3(r141,l0)  -- assign reg 2
      Popping a4(r134,l0)  -- assign reg 2
      Popping a2(r136,l0)  -- assign reg 2
      Popping a1(r137,l0)  -- assign reg 2
Disposition:
    4:r134 l0     2    2:r136 l0     2    1:r137 l0     2    0:r140 l0     3
    3:r141 l0     2
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=18, live_throughout: 0, 1, 13, 14, dead_or_set: 140
insn=19, live_throughout: 0, 1, 13, 14, 140, dead_or_set: 140
insn=9, live_throughout: 0, 1, 13, 14, 140, dead_or_set: 134
insn=10, live_throughout: 0, 1, 13, 14, 140, dead_or_set: 134, 141
insn=11, live_throughout: 1, 13, 14, 140, dead_or_set: 0, 136, 141
insn=12, live_throughout: 13, 14, 140, dead_or_set: 1, 136, 137
insn=15, live_throughout: 13, 14, dead_or_set: 137, 140
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 15
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 15
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
Spilling for insn 15.

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_MCO1Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={5d,4u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 24{12d,12u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 3 2 NOTE_INSN_DELETED)

(note 3 2 4 2 NOTE_INSN_DELETED)

(note 4 3 18 2 NOTE_INSN_FUNCTION_BEG)

(insn 18 4 19 2 (set (reg/f:SI 3 r3 [140])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:667 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 19 18 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [140])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:667 342 {*arm_movtas_ze}
     (nil))

(insn 9 19 10 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:667 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 9 11 2 (set (reg:SI 2 r2 [141])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -123731969 [0xfffffffff89fffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:670 69 {*arm_andsi3_insn}
     (nil))

(insn 11 10 12 2 (set (reg:SI 2 r2 [orig:136 D.8040 ] [136])
        (ior:SI (reg:SI 0 r0 [ RCC_MCO1Source ])
            (reg:SI 2 r2 [141]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:673 91 {*iorsi3_insn}
     (nil))

(insn 12 11 15 2 (set (reg/v:SI 2 r2 [orig:137 tmpreg ] [137])
        (ior:SI (reg:SI 2 r2 [orig:136 D.8040 ] [136])
            (reg:SI 1 r1 [ RCC_MCO1Div ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:673 91 {*iorsi3_insn}
     (nil))

(insn 15 12 20 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:137 tmpreg ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:676 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 15 21 NOTE_INSN_DELETED)

(note 21 20 0 NOTE_INSN_DELETED)


;; Function RCC_MCO2Config (RCC_MCO2Config)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 141 uninteresting
Reg 136 uninteresting
Reg 137 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
 a0(r140): [1..12]
 a1(r137): [1..2]
 a2(r136): [3..4]
 a3(r141): [5..6]
 a4(r134): [7..8]
Compressing live ranges: from 15 to 8 - 53%
Ranges after the compression:
 a0(r140): [0..7]
 a1(r137): [0..1]
 a2(r136): [2..3]
 a3(r141): [4..5]
 a4(r134): [6..7]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r140,l0) conflicts: a1(r137,l0) a2(r136,l0) a3(r141,l0) a4(r134,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

;; a1(r137,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a3(r141,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

;; a4(r134,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  cp0:a3(r141)<->a4(r134)@125:shuffle
  cp1:a2(r136)<->a3(r141)@125:shuffle
  cp2:a1(r137)<->a2(r136)@125:shuffle
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=3, conflicts=4, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r137 2r136 3r141 4r134
    modified regnos: 134 136 137 140 141
    border:
    Pressure: GENERAL_REGS=5
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
      Pushing a1(r137,l0)
      Pushing a2(r136,l0)
      Pushing a4(r134,l0)
      Pushing a3(r141,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 3
      Popping a3(r141,l0)  -- assign reg 2
      Popping a4(r134,l0)  -- assign reg 2
      Popping a2(r136,l0)  -- assign reg 2
      Popping a1(r137,l0)  -- assign reg 2
Disposition:
    4:r134 l0     2    2:r136 l0     2    1:r137 l0     2    0:r140 l0     3
    3:r141 l0     2
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=18, live_throughout: 0, 1, 13, 14, dead_or_set: 140
insn=19, live_throughout: 0, 1, 13, 14, 140, dead_or_set: 140
insn=9, live_throughout: 0, 1, 13, 14, 140, dead_or_set: 134
insn=10, live_throughout: 0, 1, 13, 14, 140, dead_or_set: 134, 141
insn=11, live_throughout: 1, 13, 14, 140, dead_or_set: 0, 136, 141
insn=12, live_throughout: 13, 14, 140, dead_or_set: 1, 136, 137
insn=15, live_throughout: 13, 14, dead_or_set: 137, 140
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 15
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 15
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
Spilling for insn 15.

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_MCO2Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={5d,4u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 24{12d,12u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 3 2 NOTE_INSN_DELETED)

(note 3 2 4 2 NOTE_INSN_DELETED)

(note 4 3 18 2 NOTE_INSN_FUNCTION_BEG)

(insn 18 4 19 2 (set (reg/f:SI 3 r3 [140])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:705 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 19 18 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [140])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:705 342 {*arm_movtas_ze}
     (nil))

(insn 9 19 10 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:705 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 9 11 2 (set (reg:SI 2 r2 [141])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int 134217727 [0x7ffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:708 69 {*arm_andsi3_insn}
     (nil))

(insn 11 10 12 2 (set (reg:SI 2 r2 [orig:136 D.8038 ] [136])
        (ior:SI (reg:SI 0 r0 [ RCC_MCO2Source ])
            (reg:SI 2 r2 [141]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:711 91 {*iorsi3_insn}
     (nil))

(insn 12 11 15 2 (set (reg/v:SI 2 r2 [orig:137 tmpreg ] [137])
        (ior:SI (reg:SI 2 r2 [orig:136 D.8038 ] [136])
            (reg:SI 1 r1 [ RCC_MCO2Div ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:711 91 {*iorsi3_insn}
     (nil))

(insn 15 12 20 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:137 tmpreg ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:714 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 15 21 NOTE_INSN_DELETED)

(note 21 20 0 NOTE_INSN_DELETED)


;; Function RCC_SYSCLKConfig (RCC_SYSCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
 a0(r138): [1..10]
 a1(r136): [1..2]
 a2(r135): [3..4]
 a3(r134): [5..6]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r138): [0..5]
 a1(r136): [0..1]
 a2(r135): [2..3]
 a3(r134): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r138,l0) conflicts: a1(r136,l0) a2(r135,l0) a3(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a3(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a2(r135)<->a3(r134)@125:shuffle
  cp1:a1(r136)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r136 2r135 3r134
    modified regnos: 134 135 136 138
    border:
    Pressure: GENERAL_REGS=4
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a3(r134,l0)
      Pushing a2(r135,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r134,l0)  -- assign reg 2
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    3:r134 l0     2    2:r135 l0     2    1:r136 l0     2    0:r138 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=16, live_throughout: 0, 13, 14, dead_or_set: 138
insn=17, live_throughout: 0, 13, 14, 138, dead_or_set: 138
insn=8, live_throughout: 0, 13, 14, 138, dead_or_set: 134
insn=9, live_throughout: 0, 13, 14, 138, dead_or_set: 134, 135
insn=10, live_throughout: 13, 14, 138, dead_or_set: 0, 135, 136
insn=13, live_throughout: 13, 14, dead_or_set: 136, 138
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 13
changing reg in insn 8
Spilling for insn 13.

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SYSCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={4d,3u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 16 2 NOTE_INSN_FUNCTION_BEG)

(insn 16 3 17 2 (set (reg/f:SI 3 r3 [138])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:870 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 17 16 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:870 342 {*arm_movtas_ze}
     (nil))

(insn 8 17 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:870 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -4 [0xfffffffffffffffc]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:873 69 {*arm_andsi3_insn}
     (nil))

(insn 10 9 13 2 (set (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])
        (ior:SI (reg:SI 0 r0 [ RCC_SYSCLKSource ])
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:876 91 {*iorsi3_insn}
     (nil))

(insn 13 10 18 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:879 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 13 19 NOTE_INSN_DELETED)

(note 19 18 0 NOTE_INSN_DELETED)


;; Function RCC_GetSYSCLKSource (RCC_GetSYSCLKSource)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000


Pass 1 for finding pseudo/allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000

   Insn 18(l0): point = 0
   Insn 15(l0): point = 2
   Insn 7(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
 a0(r134): [3..4]
 a1(r138): [5..8]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r134): [0..1]
 a1(r138): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r134,l0) conflicts:;; a1(r138,l0) conflicts:  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134 1r138
    modified regnos: 134 138
    border:
    Pressure: GENERAL_REGS=2
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a0(r134,l0)
      Pushing a1(r138,l0)
      Popping a1(r138,l0)  -- assign reg 3
      Popping a0(r134,l0)  -- assign reg 0
Disposition:
    0:r134 l0     0    1:r138 l0     3
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=21, live_throughout: 13, 14, dead_or_set: 138
insn=22, live_throughout: 13, 14, 138, dead_or_set: 138
insn=7, live_throughout: 13, 14, dead_or_set: 134, 138
insn=15, live_throughout: 13, 14, dead_or_set: 0, 134
insn=18, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 7
changing reg in insn 15
changing reg in insn 22
changing reg in insn 21
changing reg in insn 22
changing reg in insn 7


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_GetSYSCLKSource

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={3d,3u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 2 10 2 NOTE_INSN_DELETED)

(note 10 9 21 2 NOTE_INSN_DELETED)

(insn 21 10 22 2 (set (reg/f:SI 3 r3 [138])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:893 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 22 21 7 2 (set (zero_extract:SI (reg/f:SI 3 r3 [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:893 342 {*arm_movtas_ze}
     (nil))

(insn 7 22 15 2 (set (reg:SI 0 r0 [orig:134 D.8033 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:893 709 {*thumb2_movsi_insn}
     (nil))

(insn 15 7 18 2 (set (reg/i:SI 0 r0)
        (and:SI (reg:SI 0 r0 [orig:134 D.8033 ] [134])
            (const_int 12 [0xc]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:894 69 {*arm_andsi3_insn}
     (nil))

(insn 18 15 23 2 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:894 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 18 24 NOTE_INSN_DELETED)

(note 24 23 0 NOTE_INSN_DELETED)


;; Function RCC_HCLKConfig (RCC_HCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
 a0(r138): [1..10]
 a1(r136): [1..2]
 a2(r135): [3..4]
 a3(r134): [5..6]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r138): [0..5]
 a1(r136): [0..1]
 a2(r135): [2..3]
 a3(r134): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r138,l0) conflicts: a1(r136,l0) a2(r135,l0) a3(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a3(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a2(r135)<->a3(r134)@125:shuffle
  cp1:a1(r136)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r136 2r135 3r134
    modified regnos: 134 135 136 138
    border:
    Pressure: GENERAL_REGS=4
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a3(r134,l0)
      Pushing a2(r135,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r134,l0)  -- assign reg 2
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    3:r134 l0     2    2:r135 l0     2    1:r136 l0     2    0:r138 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=16, live_throughout: 0, 13, 14, dead_or_set: 138
insn=17, live_throughout: 0, 13, 14, 138, dead_or_set: 138
insn=8, live_throughout: 0, 13, 14, 138, dead_or_set: 134
insn=9, live_throughout: 0, 13, 14, 138, dead_or_set: 134, 135
insn=10, live_throughout: 13, 14, 138, dead_or_set: 0, 135, 136
insn=13, live_throughout: 13, 14, dead_or_set: 136, 138
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 13
changing reg in insn 8
Spilling for insn 13.

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_HCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={4d,3u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 16 2 NOTE_INSN_FUNCTION_BEG)

(insn 16 3 17 2 (set (reg/f:SI 3 r3 [138])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:923 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 17 16 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:923 342 {*arm_movtas_ze}
     (nil))

(insn 8 17 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:923 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -241 [0xffffffffffffff0f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:926 69 {*arm_andsi3_insn}
     (nil))

(insn 10 9 13 2 (set (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])
        (ior:SI (reg:SI 0 r0 [ RCC_SYSCLK ])
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:929 91 {*iorsi3_insn}
     (nil))

(insn 13 10 18 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:932 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 13 19 NOTE_INSN_DELETED)

(note 19 18 0 NOTE_INSN_DELETED)


;; Function RCC_PCLK1Config (RCC_PCLK1Config)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
 a0(r138): [1..10]
 a1(r136): [1..2]
 a2(r135): [3..4]
 a3(r134): [5..6]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r138): [0..5]
 a1(r136): [0..1]
 a2(r135): [2..3]
 a3(r134): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r138,l0) conflicts: a1(r136,l0) a2(r135,l0) a3(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a3(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a2(r135)<->a3(r134)@125:shuffle
  cp1:a1(r136)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r136 2r135 3r134
    modified regnos: 134 135 136 138
    border:
    Pressure: GENERAL_REGS=4
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a3(r134,l0)
      Pushing a2(r135,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r134,l0)  -- assign reg 2
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    3:r134 l0     2    2:r135 l0     2    1:r136 l0     2    0:r138 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=16, live_throughout: 0, 13, 14, dead_or_set: 138
insn=17, live_throughout: 0, 13, 14, 138, dead_or_set: 138
insn=8, live_throughout: 0, 13, 14, 138, dead_or_set: 134
insn=9, live_throughout: 0, 13, 14, 138, dead_or_set: 134, 135
insn=10, live_throughout: 13, 14, 138, dead_or_set: 0, 135, 136
insn=13, live_throughout: 13, 14, dead_or_set: 136, 138
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 13
changing reg in insn 8
Spilling for insn 13.

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PCLK1Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={4d,3u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 16 2 NOTE_INSN_FUNCTION_BEG)

(insn 16 3 17 2 (set (reg/f:SI 3 r3 [138])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:955 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 17 16 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:955 342 {*arm_movtas_ze}
     (nil))

(insn 8 17 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:955 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -7169 [0xffffffffffffe3ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:958 69 {*arm_andsi3_insn}
     (nil))

(insn 10 9 13 2 (set (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])
        (ior:SI (reg:SI 0 r0 [ RCC_HCLK ])
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:961 91 {*iorsi3_insn}
     (nil))

(insn 13 10 18 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:964 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 13 19 NOTE_INSN_DELETED)

(note 19 18 0 NOTE_INSN_DELETED)


;; Function RCC_PCLK2Config (RCC_PCLK2Config)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 135 uninteresting
Reg 137 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 18(l0): point = 8
   Insn 17(l0): point = 10
 a0(r139): [1..10]
 a1(r137): [1..2]
 a2(r135): [3..4]
 a3(r134): [5..6]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r139): [0..5]
 a1(r137): [0..1]
 a2(r135): [2..3]
 a3(r134): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r139,l0) conflicts: a1(r137,l0) a2(r135,l0) a3(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r137,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a3(r134,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a2(r135)<->a3(r134)@125:shuffle
  cp1:a1(r137)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r139 1r137 2r135 3r134
    modified regnos: 134 135 137 139
    border:
    Pressure: GENERAL_REGS=4
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r137,l0)
      Pushing a3(r134,l0)
      Pushing a2(r135,l0)
      Pushing a0(r139,l0)
      Popping a0(r139,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r134,l0)  -- assign reg 2
      Popping a1(r137,l0)  -- assign reg 2
Disposition:
    3:r134 l0     2    2:r135 l0     2    1:r137 l0     2    0:r139 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=17, live_throughout: 0, 13, 14, dead_or_set: 139
insn=18, live_throughout: 0, 13, 14, 139, dead_or_set: 139
insn=8, live_throughout: 0, 13, 14, 139, dead_or_set: 134
insn=9, live_throughout: 0, 13, 14, 139, dead_or_set: 134, 135
insn=11, live_throughout: 13, 14, 139, dead_or_set: 0, 135, 137
insn=14, live_throughout: 13, 14, dead_or_set: 137, 139
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 11
changing reg in insn 11
changing reg in insn 14
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 14
changing reg in insn 8
Spilling for insn 14.

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_PCLK2Config

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={4d,3u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 17 2 NOTE_INSN_DELETED)

(insn 17 10 18 2 (set (reg/f:SI 3 r3 [139])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:986 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 18 17 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [139])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:986 342 {*arm_movtas_ze}
     (nil))

(insn 8 18 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:986 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 11 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -57345 [0xffffffffffff1fff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:989 69 {*arm_andsi3_insn}
     (nil))

(insn 11 9 14 2 (set (reg/v:SI 2 r2 [orig:137 tmpreg ] [137])
        (ior:SI (ashift:SI (reg:SI 0 r0 [ RCC_HCLK ])
                (const_int 3 [0x3]))
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:992 262 {*arith_shiftsi}
     (nil))

(insn 14 11 19 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:137 tmpreg ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:995 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 19 14 20 NOTE_INSN_DELETED)

(note 20 19 0 NOTE_INSN_DELETED)


;; Function RCC_GetClocksFreq (RCC_GetClocksFreq)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135 uninteresting
Reg 179 uninteresting
Reg 137: local to bb 7 def dominates all uses has unique first use
Reg 140 uninteresting
Reg 143: local to bb 8 def dominates all uses has unique first use
Reg 189: local to bb 8 def dominates all uses has unique first use
Reg 191 uninteresting
Reg 147: local to bb 9 def dominates all uses has unique first use
Reg 196: local to bb 9 def dominates all uses has unique first use
Reg 198 uninteresting
Reg 150 uninteresting
Reg 202 uninteresting
Reg 203 uninteresting
Reg 204 uninteresting
Reg 156: local to bb 12 def dominates all uses has unique first use
Reg 209 uninteresting
Reg 162 uninteresting
Reg 163 uninteresting
Reg 213 uninteresting
Ignoring reg 214, has equiv memory
Reg 170 uninteresting
Reg 218 uninteresting
Ignoring reg 219, has equiv memory
Found def insn 42 for 137 to be not moveable
Found def insn 54 for 143 to be not moveable
Found def insn 68 for 147 to be not moveable
Found def insn 98 for 156 to be not moveable
Examining insn 57, def for 189
  all ok
Examining insn 71, def for 196
  all ok
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 214: (insn_list:REG_DEP_TRUE 117 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 128 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r219,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r218,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r214,l0) best LO_REGS, cover GENERAL_REGS
    a9 (r213,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r209,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r207,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r206,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r205,l0) best LO_REGS, cover GENERAL_REGS
    a17 (r204,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r203,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r202,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r200,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r199,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r181,l0) best LO_REGS, cover GENERAL_REGS
    a36 (r180,l0) best LO_REGS, cover GENERAL_REGS
    a37 (r179,l0) best LO_REGS, cover GENERAL_REGS
    a28 (r178,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r170,l0) best LO_REGS, cover GENERAL_REGS
    a10 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r163,l0) best LO_REGS, cover GENERAL_REGS
    a3 (r162,l0) best LO_REGS, cover GENERAL_REGS
    a14 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r156,l0) best LO_REGS, cover GENERAL_REGS
    a13 (r155,l0) best LO_REGS, cover GENERAL_REGS
    a21 (r150,l0) best LO_REGS, cover GENERAL_REGS
    a27 (r147,l0) best LO_REGS, cover GENERAL_REGS
    a32 (r143,l0) best LO_REGS, cover GENERAL_REGS
    a25 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r140,l0) best LO_REGS, cover GENERAL_REGS
    a33 (r137,l0) best LO_REGS, cover GENERAL_REGS
    a38 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a18 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r218,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:40000
  a4(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a6(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a7(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a8(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a9(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a12(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:22500
  a14(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a16(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:17500
  a17(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a18(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a19(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a20(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a21(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:5000
  a22(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:15000
  a23(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:2500
  a24(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:2500
  a25(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a26(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7500
  a27(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:250,250 GENERAL_REGS:250,250 MEM:2500
  a28(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:67500
  a29(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:2500
  a30(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:2500
  a31(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7500
  a32(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:250,250 GENERAL_REGS:250,250 MEM:2500
  a33(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:5000
  a34(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:5000
  a35(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:17500
  a36(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:17500
  a37(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1008,1008 GENERAL_REGS:1008,1008 MEM:32140
  a38(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r219: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r214: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r205: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r181: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r180: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r179: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r170: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r163: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r162: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r156: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r155: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r150: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r147: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r143: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r137: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r218,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:40000
  a4(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a6(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a7(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a8(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a9(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a12(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:22500
  a14(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a16(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:17500
  a17(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a18(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a19(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a20(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a21(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:5000
  a22(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:15000
  a23(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:2500
  a24(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:2500
  a25(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5000
  a26(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7500
  a27(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:250,250 GENERAL_REGS:250,250 MEM:2500
  a28(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:67500
  a29(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:2500
  a30(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:2500
  a31(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7500
  a32(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:250,250 GENERAL_REGS:250,250 MEM:2500
  a33(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:5000
  a34(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:5000
  a35(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:17500
  a36(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:500,500 GENERAL_REGS:500,500 MEM:17500
  a37(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1008,1008 GENERAL_REGS:1008,1008 MEM:32140
  a38(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 128(l0): point = 0
   Insn 127(l0): point = 2
   Insn 124(l0): point = 4
   Insn 122(l0): point = 6
   Insn 120(l0): point = 8
   Insn 117(l0): point = 10
   Insn 116(l0): point = 12
   Insn 113(l0): point = 14
   Insn 111(l0): point = 16
   Insn 109(l0): point = 18
   Insn 106(l0): point = 20
   Insn 105(l0): point = 22
   Insn 102(l0): point = 24
   Insn 100(l0): point = 26
   Insn 146(l0): point = 28
   Insn 98(l0): point = 30
   Insn 145(l0): point = 32
   Insn 144(l0): point = 34
   Insn 143(l0): point = 36
   Insn 9(l0): point = 39
   Insn 93(l0): point = 41
   Insn 148(l0): point = 43
   Insn 147(l0): point = 45
   Insn 141(l0): point = 48
   Insn 86(l0): point = 50
   Insn 85(l0): point = 52
   Insn 84(l0): point = 54
   Insn 83(l0): point = 56
   Insn 82(l0): point = 58
   Insn 80(l0): point = 60
   Insn 150(l0): point = 62
   Insn 149(l0): point = 64
   Insn 75(l0): point = 67
   Insn 74(l0): point = 69
   Insn 71(l0): point = 71
   Insn 152(l0): point = 73
   Insn 151(l0): point = 75
   Insn 68(l0): point = 77
   Insn 139(l0): point = 80
   Insn 61(l0): point = 82
   Insn 60(l0): point = 84
   Insn 57(l0): point = 86
   Insn 154(l0): point = 88
   Insn 153(l0): point = 90
   Insn 54(l0): point = 92
   Insn 50(l0): point = 95
   Insn 49(l0): point = 97
   Insn 46(l0): point = 99
   Insn 45(l0): point = 101
   Insn 42(l0): point = 103
   Insn 137(l0): point = 106
   Insn 7(l0): point = 108
   Insn 35(l0): point = 110
   Insn 156(l0): point = 112
   Insn 155(l0): point = 114
   Insn 135(l0): point = 117
   Insn 5(l0): point = 119
   Insn 28(l0): point = 121
   Insn 158(l0): point = 123
   Insn 157(l0): point = 125
   Insn 21(l0): point = 128
   Insn 19(l0): point = 131
   Insn 18(l0): point = 133
   Insn 17(l0): point = 136
   Insn 16(l0): point = 138
   Insn 15(l0): point = 140
   Insn 14(l0): point = 142
   Insn 2(l0): point = 144
   Insn 160(l0): point = 146
   Insn 159(l0): point = 148
 a0(r177): [1..144]
 a1(r219): [1..2]
 a2(r218): [3..4]
 a3(r162): [3..22]
 a4(r172): [5..6]
 a5(r207): [5..32]
 a6(r170): [7..8]
 a7(r206): [9..36]
 a8(r214): [11..12]
 a9(r213): [13..14]
 a10(r165): [15..16]
 a11(r163): [17..18]
 a12(r209): [23..24]
 a13(r155): [117..119] [106..108] [48..52] [23..39]
 a14(r158): [25..26]
 a15(r156): [27..30]
 a16(r205): [40..45]
 a17(r204): [53..54]
 a18(r134): [80..82] [53..67]
 a19(r203): [55..56]
 a20(r202): [57..58]
 a21(r150): [59..60]
 a22(r200): [61..64]
 a23(r196): [68..71]
 a24(r198): [68..69]
 a25(r141): [85..99] [70..79]
 a26(r199): [70..75]
 a27(r147): [72..77]
 a28(r178): [131..148] [93..105] [78..79]
 a29(r189): [83..86]
 a30(r191): [83..84]
 a31(r192): [85..90]
 a32(r143): [87..92]
 a33(r137): [98..103]
 a34(r140): [100..101]
 a35(r181): [109..114]
 a36(r180): [120..125]
 a37(r179): [129..140]
 a38(r135): [141..142]
Compressing live ranges: from 151 to 68 - 45%
Ranges after the compression:
 a0(r177): [0..67]
 a1(r219): [0..1]
 a2(r218): [2..3]
 a3(r162): [2..15]
 a4(r172): [4..5]
 a5(r207): [4..21]
 a6(r170): [6..7]
 a7(r206): [8..21]
 a8(r214): [8..9]
 a9(r213): [10..11]
 a10(r165): [12..13]
 a11(r163): [14..15]
 a12(r209): [16..17]
 a13(r155): [60..61] [56..57] [24..25] [16..21]
 a14(r158): [18..19]
 a15(r156): [20..21]
 a16(r205): [22..23]
 a17(r204): [26..27]
 a18(r134): [44..45] [26..35]
 a19(r203): [28..29]
 a20(r202): [30..31]
 a21(r150): [32..33]
 a22(r200): [34..35]
 a23(r196): [36..39]
 a24(r198): [36..37]
 a25(r141): [48..53] [38..43]
 a26(r199): [38..41]
 a27(r147): [40..41]
 a28(r178): [64..67] [52..55] [42..43]
 a29(r189): [46..49]
 a30(r191): [46..47]
 a31(r192): [48..51]
 a32(r143): [50..51]
 a33(r137): [52..55]
 a34(r140): [54..55]
 a35(r181): [58..59]
 a36(r180): [62..63]
 a37(r179): [64..65]
 a38(r135): [66..67]
+++Allocating 312 bytes for conflict table (uncompressed size 312)
;; a0(r177,l0) conflicts: a1(r219,l0) a2(r218,l0) a3(r162,l0) a4(r172,l0) a5(r207,l0) a6(r170,l0) a8(r214,l0) a7(r206,l0) a9(r213,l0) a10(r165,l0) a11(r163,l0) a12(r209,l0) a13(r155,l0) a14(r158,l0) a15(r156,l0) a16(r205,l0) a17(r204,l0) a18(r134,l0) a19(r203,l0) a20(r202,l0) a21(r150,l0) a22(r200,l0) a24(r198,l0) a23(r196,l0) a26(r199,l0) a25(r141,l0) a27(r147,l0) a28(r178,l0) a30(r191,l0) a29(r189,l0) a31(r192,l0) a32(r143,l0) a33(r137,l0) a34(r140,l0) a35(r181,l0) a36(r180,l0) a37(r179,l0) a38(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r219,l0) conflicts: a0(r177,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r218,l0) conflicts: a0(r177,l0) a3(r162,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r162,l0) conflicts: a0(r177,l0) a2(r218,l0) a4(r172,l0) a5(r207,l0) a6(r170,l0) a8(r214,l0) a7(r206,l0) a9(r213,l0) a10(r165,l0) a11(r163,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r172,l0) conflicts: a0(r177,l0) a3(r162,l0) a5(r207,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r207,l0) conflicts: a0(r177,l0) a3(r162,l0) a4(r172,l0) a6(r170,l0) a8(r214,l0) a7(r206,l0) a9(r213,l0) a10(r165,l0) a11(r163,l0) a12(r209,l0) a13(r155,l0) a14(r158,l0) a15(r156,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r170,l0) conflicts: a0(r177,l0) a3(r162,l0) a5(r207,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r206,l0) conflicts: a0(r177,l0) a3(r162,l0) a5(r207,l0) a8(r214,l0) a9(r213,l0) a10(r165,l0) a11(r163,l0) a12(r209,l0) a13(r155,l0) a14(r158,l0) a15(r156,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a8(r214,l0) conflicts: a0(r177,l0) a3(r162,l0) a5(r207,l0) a7(r206,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a9(r213,l0) conflicts: a0(r177,l0) a3(r162,l0) a5(r207,l0) a7(r206,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a10(r165,l0) conflicts: a0(r177,l0) a3(r162,l0) a5(r207,l0) a7(r206,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a11(r163,l0) conflicts: a0(r177,l0) a3(r162,l0) a5(r207,l0) a7(r206,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a12(r209,l0) conflicts: a0(r177,l0) a5(r207,l0) a7(r206,l0) a13(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a13(r155,l0) conflicts: a0(r177,l0) a5(r207,l0) a7(r206,l0) a12(r209,l0) a14(r158,l0) a15(r156,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a14(r158,l0) conflicts: a0(r177,l0) a5(r207,l0) a7(r206,l0) a13(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a15(r156,l0) conflicts: a0(r177,l0) a5(r207,l0) a7(r206,l0) a13(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a16(r205,l0) conflicts: a0(r177,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a17(r204,l0) conflicts: a0(r177,l0) a18(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a18(r134,l0) conflicts: a0(r177,l0) a17(r204,l0) a19(r203,l0) a20(r202,l0) a21(r150,l0) a22(r200,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a19(r203,l0) conflicts: a0(r177,l0) a18(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a20(r202,l0) conflicts: a0(r177,l0) a18(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a21(r150,l0) conflicts: a0(r177,l0) a18(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a22(r200,l0) conflicts: a0(r177,l0) a18(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a23(r196,l0) conflicts: a0(r177,l0) a24(r198,l0) a26(r199,l0) a25(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a24(r198,l0) conflicts: a0(r177,l0) a23(r196,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a25(r141,l0) conflicts: a0(r177,l0) a23(r196,l0) a26(r199,l0) a27(r147,l0) a28(r178,l0) a29(r189,l0) a31(r192,l0) a32(r143,l0) a33(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a26(r199,l0) conflicts: a0(r177,l0) a23(r196,l0) a25(r141,l0) a27(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a27(r147,l0) conflicts: a0(r177,l0) a26(r199,l0) a25(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a28(r178,l0) conflicts: a0(r177,l0) a25(r141,l0) a33(r137,l0) a34(r140,l0) a37(r179,l0) a38(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a29(r189,l0) conflicts: a0(r177,l0) a25(r141,l0) a30(r191,l0) a31(r192,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a30(r191,l0) conflicts: a0(r177,l0) a29(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a31(r192,l0) conflicts: a0(r177,l0) a25(r141,l0) a29(r189,l0) a32(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a32(r143,l0) conflicts: a0(r177,l0) a25(r141,l0) a31(r192,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a33(r137,l0) conflicts: a0(r177,l0) a25(r141,l0) a28(r178,l0) a34(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a34(r140,l0) conflicts: a0(r177,l0) a28(r178,l0) a33(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a35(r181,l0) conflicts: a0(r177,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a36(r180,l0) conflicts: a0(r177,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a37(r179,l0) conflicts: a0(r177,l0) a28(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a38(r135,l0) conflicts: a0(r177,l0) a28(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a14(r158)<->a15(r156)@125:shuffle
  cp1:a3(r162)<->a13(r155)@125:shuffle
  cp2:a3(r162)<->a12(r209)@125:shuffle
  cp3:a10(r165)<->a11(r163)@125:shuffle
  cp4:a8(r214)<->a9(r213)@125:shuffle
  cp5:a4(r172)<->a6(r170)@125:shuffle
  cp6:a1(r219)<->a3(r162)@125:shuffle
  cp7:a1(r219)<->a2(r218)@125:shuffle
  cp8:a13(r155)<->a16(r205)@250:move
  cp9:a20(r202)<->a21(r150)@31:shuffle
  cp10:a19(r203)<->a20(r202)@31:shuffle
  cp11:a17(r204)<->a19(r203)@31:shuffle
  cp12:a13(r155)<->a18(r134)@31:shuffle
  cp13:a13(r155)<->a17(r204)@31:shuffle
  cp14:a23(r196)<->a27(r147)@15:shuffle
  cp15:a24(r198)<->a26(r199)@15:shuffle
  cp16:a24(r198)<->a25(r141)@15:shuffle
  cp17:a18(r134)<->a24(r198)@15:shuffle
  cp18:a18(r134)<->a23(r196)@15:shuffle
  cp19:a29(r189)<->a32(r143)@15:shuffle
  cp20:a30(r191)<->a31(r192)@15:shuffle
  cp21:a25(r141)<->a30(r191)@15:shuffle
  cp22:a18(r134)<->a30(r191)@15:shuffle
  cp23:a18(r134)<->a29(r189)@15:shuffle
  cp24:a25(r141)<->a34(r140)@31:shuffle
  cp25:a13(r155)<->a35(r181)@250:move
  cp26:a13(r155)<->a36(r180)@250:move
  cp27:a37(r179)<->a38(r135)@125:shuffle
  regions=1, blocks=13, points=68
    allocnos=39 (big 0), copies=28, conflicts=4, ranges=46

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 12 11 10 9 8 7 6 5 4 3 2
    all: 0r177 1r219 2r218 3r162 4r172 5r207 6r170 7r206 8r214 9r213 10r165 11r163 12r209 13r155 14r158 15r156 16r205 17r204 18r134 19r203 20r202 21r150 22r200 23r196 24r198 25r141 26r199 27r147 28r178 29r189 30r191 31r192 32r143 33r137 34r140 35r181 36r180 37r179 38r135
    modified regnos: 134 135 137 140 141 143 147 150 155 156 158 162 163 165 170 172 177 178 179 180 181 189 191 192 196 198 199 200 202 203 204 205 206 207 209 213 214 218 219
    border:
    Pressure: GENERAL_REGS=6
    Reg 177 of GENERAL_REGS has 1 regs less
    Reg 219 of GENERAL_REGS has 1 regs less
    Reg 218 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 172 of GENERAL_REGS has 1 regs less
    Reg 207 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
    Reg 206 of GENERAL_REGS has 1 regs less
    Reg 214 of GENERAL_REGS has 1 regs less
    Reg 213 of GENERAL_REGS has 1 regs less
    Reg 165 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 209 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 205 of GENERAL_REGS has 1 regs less
    Reg 204 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 203 of GENERAL_REGS has 1 regs less
    Reg 202 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 200 of GENERAL_REGS has 1 regs less
    Reg 196 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 199 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 178 of GENERAL_REGS has 2 regs less
    Reg 189 of GENERAL_REGS has 1 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 192 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 181 of GENERAL_REGS has 1 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 179 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a32(r143,l0)
      Pushing a30(r191,l0)
      Pushing a29(r189,l0)
      Pushing a27(r147,l0)
      Pushing a24(r198,l0)
      Pushing a23(r196,l0)
      Pushing a31(r192,l0)
      Pushing a26(r199,l0)
      Pushing a34(r140,l0)
      Pushing a33(r137,l0)
      Pushing a25(r141,l0)
      Pushing a21(r150,l0)
      Pushing a20(r202,l0)
      Pushing a19(r203,l0)
      Pushing a18(r134,l0)
      Pushing a17(r204,l0)
      Pushing a22(r200,l0)
      Pushing a36(r180,l0)
      Pushing a35(r181,l0)
      Pushing a16(r205,l0)
      Pushing a38(r135,l0)
      Pushing a15(r156,l0)
      Pushing a14(r158,l0)
      Pushing a12(r209,l0)
      Pushing a11(r163,l0)
      Pushing a10(r165,l0)
      Pushing a9(r213,l0)
      Pushing a8(r214,l0)
      Pushing a6(r170,l0)
      Pushing a4(r172,l0)
      Pushing a2(r218,l0)
      Pushing a1(r219,l0)
      Pushing a13(r155,l0)
      Pushing a37(r179,l0)
      Pushing a3(r162,l0)
      Pushing a7(r206,l0)
      Pushing a0(r177,l0)
      Pushing a5(r207,l0)
      Pushing a28(r178,l0)
      Popping a28(r178,l0)  -- assign reg 3
      Popping a5(r207,l0)  -- assign reg 3
      Popping a0(r177,l0)  -- assign reg 0
      Popping a7(r206,l0)  -- assign reg 2
      Popping a3(r162,l0)  -- assign reg 1
      Popping a37(r179,l0)  -- assign reg 2
      Popping a13(r155,l0)  -- assign reg 1
      Popping a1(r219,l0)  -- assign reg 1
      Popping a2(r218,l0)  -- assign reg 3
      Popping a4(r172,l0)  -- assign reg 2
      Popping a6(r170,l0)  -- assign reg 2
      Popping a8(r214,l0)  -- assign reg 4
      Popping a9(r213,l0)  -- assign reg 4
      Popping a10(r165,l0)  -- assign reg 4
      Popping a11(r163,l0)  -- assign reg 4
      Popping a12(r209,l0)  -- assign reg 4
      Popping a14(r158,l0)  -- assign reg 4
      Popping a15(r156,l0)  -- assign reg 4
      Popping a38(r135,l0)  -- assign reg 2
      Popping a16(r205,l0)  -- assign reg 1
      Popping a35(r181,l0)  -- assign reg 1
      Popping a36(r180,l0)  -- assign reg 1
      Popping a22(r200,l0)  -- assign reg 3
      Popping a17(r204,l0)  -- assign reg 3
      Popping a18(r134,l0)  -- assign reg 1
      Popping a19(r203,l0)  -- assign reg 3
      Popping a20(r202,l0)  -- assign reg 3
      Popping a21(r150,l0)  -- assign reg 3
      Popping a25(r141,l0)  -- assign reg 2
      Popping a33(r137,l0)  -- assign reg 4
      Popping a34(r140,l0)  -- assign reg 2
      Popping a26(r199,l0)  -- assign reg 3
      Popping a31(r192,l0)  -- assign reg 3
      Popping a23(r196,l0)  -- assign reg 4
      Popping a24(r198,l0)  -- assign reg 1
      Popping a27(r147,l0)  -- assign reg 4
      Popping a29(r189,l0)  -- assign reg 4
      Popping a30(r191,l0)  -- assign reg 1
      Popping a32(r143,l0)  -- assign reg 4
Disposition:
   18:r134 l0     1   38:r135 l0     2   33:r137 l0     4   34:r140 l0     2
   25:r141 l0     2   32:r143 l0     4   27:r147 l0     4   21:r150 l0     3
   13:r155 l0     1   15:r156 l0     4   14:r158 l0     4    3:r162 l0     1
   11:r163 l0     4   10:r165 l0     4    6:r170 l0     2    4:r172 l0     2
    0:r177 l0     0   28:r178 l0     3   37:r179 l0     2   36:r180 l0     1
   35:r181 l0     1   29:r189 l0     4   30:r191 l0     1   31:r192 l0     3
   23:r196 l0     4   24:r198 l0     1   26:r199 l0     3   22:r200 l0     3
   20:r202 l0     3   19:r203 l0     3   17:r204 l0     3   16:r205 l0     1
    7:r206 l0     2    5:r207 l0     3   12:r209 l0     4    9:r213 l0     4
    8:r214 l0     4    2:r218 l0     3    1:r219 l0     1
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=159, live_throughout: 0, 13, 14, dead_or_set: 178
insn=160, live_throughout: 0, 13, 14, 178, dead_or_set: 178
insn=2, live_throughout: 13, 14, 178, dead_or_set: 0, 177
insn=14, live_throughout: 13, 14, 177, 178, dead_or_set: 135
insn=15, live_throughout: 13, 14, 177, 178, dead_or_set: 135, 179
insn=16, live_throughout: 13, 14, 177, 178, 179, dead_or_set: 
insn=17, live_throughout: 13, 14, 177, 178, 179, dead_or_set: 
insn=18, live_throughout: 13, 14, 177, 178, 179, dead_or_set: 
insn=19, live_throughout: 13, 14, 177, 178, 179, dead_or_set: 
insn=21, live_throughout: 13, 14, 177, dead_or_set: 179
insn=24, live_throughout: 13, 14, 177, dead_or_set: 
insn=157, live_throughout: 13, 14, 177, dead_or_set: 180
insn=158, live_throughout: 13, 14, 177, 180, dead_or_set: 180
insn=28, live_throughout: 13, 14, 177, 180, dead_or_set: 
insn=5, live_throughout: 13, 14, 177, dead_or_set: 155, 180
insn=135, live_throughout: 13, 14, 155, 177, dead_or_set: 
insn=31, live_throughout: 13, 14, 177, dead_or_set: 
insn=155, live_throughout: 13, 14, 177, dead_or_set: 181
insn=156, live_throughout: 13, 14, 177, 181, dead_or_set: 181
insn=35, live_throughout: 13, 14, 177, 181, dead_or_set: 
insn=7, live_throughout: 13, 14, 177, dead_or_set: 155, 181
insn=137, live_throughout: 13, 14, 155, 177, dead_or_set: 
insn=38, live_throughout: 13, 14, 177, 178, dead_or_set: 
insn=42, live_throughout: 13, 14, 177, 178, dead_or_set: 137
insn=45, live_throughout: 13, 14, 137, 177, 178, dead_or_set: 140
insn=46, live_throughout: 13, 14, 137, 177, 178, dead_or_set: 140, 141
insn=49, live_throughout: 13, 14, 141, 177, 178, dead_or_set: 137
insn=50, live_throughout: 13, 14, 141, 177, 178, dead_or_set: 
insn=54, live_throughout: 13, 14, 141, 177, dead_or_set: 143, 178
insn=153, live_throughout: 13, 14, 141, 143, 177, dead_or_set: 192
insn=154, live_throughout: 13, 14, 141, 143, 177, 192, dead_or_set: 192
insn=57, live_throughout: 13, 14, 141, 177, 192, dead_or_set: 143, 189
insn=60, live_throughout: 13, 14, 177, 189, dead_or_set: 141, 191, 192
insn=61, live_throughout: 13, 14, 177, dead_or_set: 134, 189, 191
insn=139, live_throughout: 13, 14, 134, 177, dead_or_set: 
insn=64, live_throughout: 13, 14, 141, 177, 178, dead_or_set: 
insn=68, live_throughout: 13, 14, 141, 177, dead_or_set: 147, 178
insn=151, live_throughout: 13, 14, 141, 147, 177, dead_or_set: 199
insn=152, live_throughout: 13, 14, 141, 147, 177, 199, dead_or_set: 199
insn=71, live_throughout: 13, 14, 141, 177, 199, dead_or_set: 147, 196
insn=74, live_throughout: 13, 14, 177, 196, dead_or_set: 141, 198, 199
insn=75, live_throughout: 13, 14, 177, dead_or_set: 134, 196, 198
insn=76, live_throughout: 13, 14, 134, 177, dead_or_set: 
insn=149, live_throughout: 13, 14, 134, 177, dead_or_set: 200
insn=150, live_throughout: 13, 14, 134, 177, 200, dead_or_set: 200
insn=80, live_throughout: 13, 14, 134, 177, dead_or_set: 150, 200
insn=82, live_throughout: 13, 14, 134, 177, dead_or_set: 150, 202
insn=83, live_throughout: 13, 14, 134, 177, dead_or_set: 202, 203
insn=84, live_throughout: 13, 14, 134, 177, dead_or_set: 203, 204
insn=85, live_throughout: 13, 14, 177, dead_or_set: 134, 155, 204
insn=86, live_throughout: 13, 14, 155, 177, dead_or_set: 
insn=141, live_throughout: 13, 14, 155, 177, dead_or_set: 
insn=134, live_throughout: 13, 14, 177, dead_or_set: 
insn=147, live_throughout: 13, 14, 177, dead_or_set: 205
insn=148, live_throughout: 13, 14, 177, 205, dead_or_set: 205
insn=93, live_throughout: 13, 14, 177, 205, dead_or_set: 
insn=9, live_throughout: 13, 14, 177, dead_or_set: 155, 205
insn=94, live_throughout: 13, 14, 155, 177, dead_or_set: 
insn=143, live_throughout: 13, 14, 155, 177, dead_or_set: 206
insn=144, live_throughout: 13, 14, 155, 177, 206, dead_or_set: 206
insn=145, live_throughout: 13, 14, 155, 177, 206, dead_or_set: 207
insn=98, live_throughout: 13, 14, 155, 177, 206, 207, dead_or_set: 156
insn=146, live_throughout: 13, 14, 155, 156, 177, 206, dead_or_set: 207
insn=100, live_throughout: 13, 14, 155, 177, 206, 207, dead_or_set: 156, 158
insn=102, live_throughout: 13, 14, 155, 177, 206, 207, dead_or_set: 158, 209
insn=105, live_throughout: 13, 14, 177, 206, 207, dead_or_set: 155, 162, 209
insn=106, live_throughout: 13, 14, 162, 177, 206, 207, dead_or_set: 
insn=109, live_throughout: 13, 14, 162, 177, 206, 207, dead_or_set: 163
insn=111, live_throughout: 13, 14, 162, 177, 206, 207, dead_or_set: 163, 165
insn=113, live_throughout: 13, 14, 162, 177, 206, 207, dead_or_set: 165, 213
insn=116, live_throughout: 13, 14, 162, 177, 206, 207, dead_or_set: 213, 214
insn=117, live_throughout: 13, 14, 162, 177, 206, 207, dead_or_set: 214
insn=120, live_throughout: 13, 14, 162, 177, 207, dead_or_set: 170, 206
insn=122, live_throughout: 13, 14, 162, 177, 207, dead_or_set: 170, 172
insn=124, live_throughout: 13, 14, 162, 177, dead_or_set: 172, 207, 218
insn=127, live_throughout: 13, 14, 177, dead_or_set: 162, 218, 219
insn=128, live_throughout: 13, 14, dead_or_set: 177, 219
init_insns for 214: (insn_list:REG_DEP_TRUE 117 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 128 (nil))
changing reg in insn 75
changing reg in insn 61
changing reg in insn 85
changing reg in insn 14
changing reg in insn 15
changing reg in insn 42
changing reg in insn 49
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 74
changing reg in insn 60
changing reg in insn 74
changing reg in insn 60
changing reg in insn 54
changing reg in insn 57
changing reg in insn 68
changing reg in insn 71
changing reg in insn 80
changing reg in insn 82
changing reg in insn 9
changing reg in insn 7
changing reg in insn 5
changing reg in insn 85
changing reg in insn 105
changing reg in insn 86
changing reg in insn 98
changing reg in insn 100
changing reg in insn 100
changing reg in insn 102
changing reg in insn 102
changing reg in insn 105
changing reg in insn 127
changing reg in insn 116
changing reg in insn 106
changing reg in insn 109
changing reg in insn 111
changing reg in insn 111
changing reg in insn 113
changing reg in insn 113
changing reg in insn 120
changing reg in insn 122
changing reg in insn 122
changing reg in insn 124
changing reg in insn 124
changing reg in insn 2
changing reg in insn 128
changing reg in insn 117
changing reg in insn 106
changing reg in insn 93
changing reg in insn 86
changing reg in insn 35
changing reg in insn 28
changing reg in insn 127
changing reg in insn 116
changing reg in insn 160
changing reg in insn 159
changing reg in insn 160
changing reg in insn 68
changing reg in insn 54
changing reg in insn 45
changing reg in insn 42
changing reg in insn 14
changing reg in insn 15
changing reg in insn 21
changing reg in insn 18
changing reg in insn 16
changing reg in insn 158
changing reg in insn 157
changing reg in insn 158
changing reg in insn 5
changing reg in insn 28
changing reg in insn 156
changing reg in insn 155
changing reg in insn 156
changing reg in insn 7
changing reg in insn 35
changing reg in insn 57
changing reg in insn 61
changing reg in insn 60
changing reg in insn 61
changing reg in insn 154
changing reg in insn 153
changing reg in insn 154
changing reg in insn 60
changing reg in insn 71
changing reg in insn 75
changing reg in insn 74
changing reg in insn 75
changing reg in insn 152
changing reg in insn 151
changing reg in insn 152
changing reg in insn 74
changing reg in insn 150
changing reg in insn 149
changing reg in insn 150
changing reg in insn 80
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 148
changing reg in insn 147
changing reg in insn 148
changing reg in insn 9
changing reg in insn 93
changing reg in insn 144
changing reg in insn 143
changing reg in insn 144
changing reg in insn 120
changing reg in insn 109
changing reg in insn 98
changing reg in insn 146
changing reg in insn 145
changing reg in insn 146
changing reg in insn 124
changing reg in insn 113
changing reg in insn 102
changing reg in insn 102
changing reg in insn 105
changing reg in insn 113
changing reg in insn 116
changing reg in insn 116
changing reg in insn 117
changing reg in insn 124
changing reg in insn 127
changing reg in insn 127
changing reg in insn 128
Spilling for insn 28.
Spilling for insn 35.
Spilling for insn 86.
Spilling for insn 93.
Spilling for insn 106.
Spilling for insn 117.
Spilling for insn 128.

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])

Reloads for insn # 35
Reload 0: reload_out (SI) = (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])

Reloads for insn # 86
Reload 0: reload_out (SI) = (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])

Reloads for insn # 93
Reload 0: reload_out (SI) = (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])

Reloads for insn # 106
Reload 0: reload_out (SI) = (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                                                        (const_int 4 [0x4])) [3 RCC_Clocks_11(D)->HCLK_Frequency+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                                                        (const_int 4 [0x4])) [3 RCC_Clocks_11(D)->HCLK_Frequency+0 S4 A32])

Reloads for insn # 117
Reload 0: reload_out (SI) = (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                                                        (const_int 8 [0x8])) [3 RCC_Clocks_11(D)->PCLK1_Frequency+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                                                        (const_int 8 [0x8])) [3 RCC_Clocks_11(D)->PCLK1_Frequency+0 S4 A32])

Reloads for insn # 128
Reload 0: reload_out (SI) = (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                                                        (const_int 12 [0xc])) [3 RCC_Clocks_11(D)->PCLK2_Frequency+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                                                        (const_int 12 [0xc])) [3 RCC_Clocks_11(D)->PCLK2_Frequency+0 S4 A32])
deleting insn with uid = 2.
deleting insn with uid = 5.
deleting insn with uid = 7.
deleting insn with uid = 9.


try_optimize_cfg iteration 1

deleting insn with uid = 24.
Deleted label in block 5.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 13 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 13 (    1)


RCC_GetClocksFreq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 24[cc]
;;  ref usage 	r0={1d,7u,2e} r1={14d,15u} r2={9d,13u,3e} r3={16d,21u} r4={12d,12u,2e} r13={1d,12u} r14={1d,1u} r24={4d,3u} 
;;    total ref usage 149{58d,84u,7e} in 66{66 regular + 0 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 10 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 10 159 2 NOTE_INSN_FUNCTION_BEG)

(insn 159 3 160 2 (set (reg/f:SI 3 r3 [178])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1036 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 160 159 14 2 (set (zero_extract:SI (reg/f:SI 3 r3 [178])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1036 342 {*arm_movtas_ze}
     (nil))

(insn 14 160 15 2 (set (reg:SI 2 r2 [orig:135 D.7996 ] [135])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [178])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1036 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (nil)))

(insn 15 14 16 2 (set (reg:SI 2 r2 [179])
        (and:SI (reg:SI 2 r2 [orig:135 D.7996 ] [135])
            (const_int 12 [0xc]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1036 69 {*arm_andsi3_insn}
     (nil))

(insn 16 15 17 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [179])
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 17 16 131 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil))
 -> 31)
;; End of basic block 2 -> ( 6 3)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  6 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%]  (fallthru)
(note 131 17 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 131 19 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [179])
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 19 18 132 3 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil))
 -> 38)
;; End of basic block 3 -> ( 7 4)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [29.0%] 
;; Succ edge  4 [71.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  3 [71.0%]  (fallthru)
(note 132 19 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 20 132 21 4 NOTE_INSN_DELETED)

(jump_insn 21 20 25 4 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [179])
                        (const_int 0 [0]))
                    (label_ref:SI 134)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1038 749 {*thumb2_cbnz}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 134)
;; End of basic block 4 -> ( 5 11)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 25 21 157 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 157 25 158 5 (set (reg:SI 1 r1 [180])
        (const_int 9216 [0x2400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1041 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 9216 [0x2400])
        (nil)))

(insn 158 157 28 5 (set (zero_extract:SI (reg:SI 1 r1 [180])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 244 [0xf4])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1041 342 {*arm_movtas_ze}
     (nil))

(insn 28 158 135 5 (set (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
        (reg:SI 1 r1 [180])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1041 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 135 28 136 5 (set (pc)
        (label_ref 94)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1042 230 {*arm_jump}
     (nil)
 -> 94)
;; End of basic block 5 -> ( 12)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 

(barrier 136 135 31)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  2 [29.0%] 
(code_label 31 136 32 6 32 "" [1 uses])

(note 32 31 155 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 155 32 156 6 (set (reg:SI 1 r1 [181])
        (const_int 4608 [0x1200])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1044 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 4608 [0x1200])
        (nil)))

(insn 156 155 35 6 (set (zero_extract:SI (reg:SI 1 r1 [181])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 122 [0x7a])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1044 342 {*arm_movtas_ze}
     (nil))

(insn 35 156 137 6 (set (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
        (reg:SI 1 r1 [181])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1044 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 137 35 138 6 (set (pc)
        (label_ref 94)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1045 230 {*arm_jump}
     (nil)
 -> 94)
;; End of basic block 6 -> ( 12)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 

(barrier 138 137 38)

;; Start of basic block ( 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  3 [29.0%] 
(code_label 38 138 39 7 33 "" [1 uses])

(note 39 38 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 47 39 48 7 NOTE_INSN_DELETED)

(note 48 47 42 7 NOTE_INSN_DELETED)

(insn 42 48 45 7 (set (reg:SI 4 r4 [orig:137 D.7997 ] [137])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [178])
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1051 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (nil)))

(insn 45 42 46 7 (set (reg:SI 2 r2 [orig:140 D.7999 ] [140])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [178])
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1052 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (nil)))

(insn 46 45 49 7 (set (reg/v:SI 2 r2 [orig:141 pllm ] [141])
        (and:SI (reg:SI 2 r2 [orig:140 D.7999 ] [140])
            (const_int 63 [0x3f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1052 69 {*arm_andsi3_insn}
     (nil))

(insn 49 46 50 7 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 4 r4 [orig:137 D.7997 ] [137])
                (const_int 1 [0x1])
                (const_int 22 [0x16]))
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1054 73 {*zeroextractsi_compare0_scratch}
     (nil))

(jump_insn 50 49 51 7 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1054 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 64)
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 4 [r4]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 51 50 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 56 51 54 8 NOTE_INSN_DELETED)

(insn 54 56 153 8 (set (reg:SI 4 r4 [orig:143 D.8003 ] [143])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [178])
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (nil)))

(insn 153 54 154 8 (set (reg:SI 3 r3 [192])
        (const_int 4608 [0x1200])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 4608 [0x1200])
        (nil)))

(insn 154 153 57 8 (set (zero_extract:SI (reg:SI 3 r3 [192])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 122 [0x7a])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 342 {*arm_movtas_ze}
     (nil))

(insn 57 154 60 8 (set (reg:SI 4 r4 [189])
        (zero_extract:SI (reg:SI 4 r4 [orig:143 D.8003 ] [143])
            (const_int 9 [0x9])
            (const_int 6 [0x6]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 131 {extzv_t2}
     (nil))

(insn 60 57 61 8 (set (reg:SI 1 r1 [191])
        (udiv:SI (reg:SI 3 r3 [192])
            (reg/v:SI 2 r2 [orig:141 pllm ] [141]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 133 {udivsi3}
     (expr_list:REG_EQUAL (udiv:SI (const_int 8000000 [0x7a1200])
            (reg/v:SI 2 r2 [orig:141 pllm ] [141]))
        (nil)))

(insn 61 60 139 8 (set (reg/v:SI 1 r1 [orig:134 pllvco ] [134])
        (mult:SI (reg:SI 1 r1 [191])
            (reg:SI 4 r4 [189]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1057 34 {*arm_mulsi3_v6}
     (nil))

(jump_insn 139 61 140 8 (set (pc)
        (label_ref 76)) 230 {*arm_jump}
     (nil)
 -> 76)
;; End of basic block 8 -> ( 10)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%] 

(barrier 140 139 64)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 4 [r4]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 64 140 65 9 35 "" [1 uses])

(note 65 64 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 70 65 68 9 NOTE_INSN_DELETED)

(insn 68 70 151 9 (set (reg:SI 4 r4 [orig:147 D.8008 ] [147])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [178])
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (nil)))

(insn 151 68 152 9 (set (reg:SI 3 r3 [199])
        (const_int 9216 [0x2400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 9216 [0x2400])
        (nil)))

(insn 152 151 71 9 (set (zero_extract:SI (reg:SI 3 r3 [199])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 244 [0xf4])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 342 {*arm_movtas_ze}
     (nil))

(insn 71 152 74 9 (set (reg:SI 4 r4 [196])
        (zero_extract:SI (reg:SI 4 r4 [orig:147 D.8008 ] [147])
            (const_int 9 [0x9])
            (const_int 6 [0x6]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 131 {extzv_t2}
     (nil))

(insn 74 71 75 9 (set (reg:SI 1 r1 [198])
        (udiv:SI (reg:SI 3 r3 [199])
            (reg/v:SI 2 r2 [orig:141 pllm ] [141]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 133 {udivsi3}
     (expr_list:REG_EQUAL (udiv:SI (const_int 16000000 [0xf42400])
            (reg/v:SI 2 r2 [orig:141 pllm ] [141]))
        (nil)))

(insn 75 74 76 9 (set (reg/v:SI 1 r1 [orig:134 pllvco ] [134])
        (mult:SI (reg:SI 1 r1 [198])
            (reg:SI 4 r4 [196]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1062 34 {*arm_mulsi3_v6}
     (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 76 75 77 10 36 "" [1 uses])

(note 77 76 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 81 77 149 10 NOTE_INSN_DELETED)

(insn 149 81 150 10 (set (reg/f:SI 3 r3 [200])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 150 149 80 10 (set (zero_extract:SI (reg/f:SI 3 r3 [200])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 342 {*arm_movtas_ze}
     (nil))

(insn 80 150 82 10 (set (reg:SI 3 r3 [orig:150 D.8011 ] [150])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [200])
                (const_int 4 [0x4])) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887236 [0x40023804]) [3 MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR+0 S4 A32])
        (nil)))

(insn 82 80 83 10 (set (reg:SI 3 r3 [202])
        (zero_extract:SI (reg:SI 3 r3 [orig:150 D.8011 ] [150])
            (const_int 2 [0x2])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 131 {extzv_t2}
     (nil))

(insn 83 82 84 10 (set (reg:SI 3 r3 [203])
        (plus:SI (reg:SI 3 r3 [202])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 4 {*arm_addsi3}
     (nil))

(insn 84 83 85 10 (set (reg:SI 3 r3 [204])
        (ashift:SI (reg:SI 3 r3 [203])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1065 119 {*arm_shiftsi3}
     (nil))

(insn 85 84 86 10 (set (reg:SI 1 r1 [orig:155 prephitmp.50 ] [155])
        (udiv:SI (reg/v:SI 1 r1 [orig:134 pllvco ] [134])
            (reg:SI 3 r3 [204]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1066 133 {udivsi3}
     (nil))

(insn 86 85 141 10 (set (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
        (reg:SI 1 r1 [orig:155 prephitmp.50 ] [155])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1066 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 141 86 142 10 (set (pc)
        (label_ref 94)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1067 230 {*arm_jump}
     (nil)
 -> 94)
;; End of basic block 10 -> ( 12)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 

(barrier 142 141 134)

;; Start of basic block ( 4) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  4 [50.0%] 
(code_label 134 142 90 11 37 "" [1 uses])

(note 90 134 147 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 147 90 148 11 (set (reg:SI 1 r1 [205])
        (const_int 9216 [0x2400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1069 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 9216 [0x2400])
        (nil)))

(insn 148 147 93 11 (set (zero_extract:SI (reg:SI 1 r1 [205])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 244 [0xf4])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1069 342 {*arm_movtas_ze}
     (nil))

(insn 93 148 94 11 (set (mem/s:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177]) [3 RCC_Clocks_11(D)->SYSCLK_Frequency+0 S4 A32])
        (reg:SI 1 r1 [205])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1069 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 5 6 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  10 [100.0%] 
(code_label 94 93 95 12 34 "" [3 uses])

(note 95 94 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 99 95 103 12 NOTE_INSN_DELETED)

(note 103 99 104 12 NOTE_INSN_DELETED)

(note 104 103 110 12 NOTE_INSN_DELETED)

(note 110 104 114 12 NOTE_INSN_DELETED)

(note 114 110 115 12 NOTE_INSN_DELETED)

(note 115 114 121 12 NOTE_INSN_DELETED)

(note 121 115 125 12 NOTE_INSN_DELETED)

(note 125 121 126 12 NOTE_INSN_DELETED)

(note 126 125 143 12 NOTE_INSN_DELETED)

(insn 143 126 144 12 (set (reg/f:SI 2 r2 [206])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1075 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 144 143 145 12 (set (zero_extract:SI (reg/f:SI 2 r2 [206])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1075 342 {*arm_movtas_ze}
     (nil))

(insn 145 144 98 12 (set (reg/f:SI 3 r3 [207])
        (high:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1077 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (high:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
        (nil)))

(insn 98 145 146 12 (set (reg:SI 4 r4 [orig:156 D.8016 ] [156])
        (mem/s/v:SI (plus:SI (reg/f:SI 2 r2 [206])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1075 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (nil)))

(insn 146 98 100 12 (set (reg/f:SI 3 r3 [207])
        (lo_sum:SI (reg/f:SI 3 r3 [207])
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1077 174 {*arm_movt}
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 100 146 102 12 (set (reg/v:SI 4 r4 [orig:158 tmp ] [158])
        (zero_extract:SI (reg:SI 4 r4 [orig:156 D.8016 ] [156])
            (const_int 4 [0x4])
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1076 131 {extzv_t2}
     (nil))

(insn 102 100 105 12 (set (reg:SI 4 r4 [209])
        (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/f:SI 3 r3 [207])
                    (reg/v:SI 4 r4 [orig:158 tmp ] [158])) [0 APBAHBPrescTable S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1077 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/v:SI 4 r4 [orig:158 tmp ] [158])
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 APBAHBPrescTable S1 A8]))
        (nil)))

(insn 105 102 106 12 (set (reg:SI 1 r1 [orig:162 D.8020 ] [162])
        (lshiftrt:SI (reg:SI 1 r1 [orig:155 prephitmp.50 ] [155])
            (reg:SI 4 r4 [209]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1079 119 {*arm_shiftsi3}
     (nil))

(insn 106 105 109 12 (set (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                (const_int 4 [0x4])) [3 RCC_Clocks_11(D)->HCLK_Frequency+0 S4 A32])
        (reg:SI 1 r1 [orig:162 D.8020 ] [162])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1079 709 {*thumb2_movsi_insn}
     (nil))

(insn 109 106 111 12 (set (reg:SI 4 r4 [orig:163 D.8021 ] [163])
        (mem/s/v:SI (plus:SI (reg/f:SI 2 r2 [206])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1082 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (nil)))

(insn 111 109 113 12 (set (reg/v:SI 4 r4 [orig:165 tmp ] [165])
        (zero_extract:SI (reg:SI 4 r4 [orig:163 D.8021 ] [163])
            (const_int 3 [0x3])
            (const_int 10 [0xa]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1083 131 {extzv_t2}
     (nil))

(insn 113 111 116 12 (set (reg:SI 4 r4 [213])
        (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/f:SI 3 r3 [207])
                    (reg/v:SI 4 r4 [orig:165 tmp ] [165])) [0 APBAHBPrescTable S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1084 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/v:SI 4 r4 [orig:165 tmp ] [165])
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 APBAHBPrescTable S1 A8]))
        (nil)))

(insn 116 113 117 12 (set (reg:SI 4 r4 [214])
        (lshiftrt:SI (reg:SI 1 r1 [orig:162 D.8020 ] [162])
            (reg:SI 4 r4 [213]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1086 119 {*arm_shiftsi3}
     (expr_list:REG_EQUIV (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                (const_int 8 [0x8])) [3 RCC_Clocks_11(D)->PCLK1_Frequency+0 S4 A32])
        (nil)))

(insn 117 116 120 12 (set (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                (const_int 8 [0x8])) [3 RCC_Clocks_11(D)->PCLK1_Frequency+0 S4 A32])
        (reg:SI 4 r4 [214])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1086 709 {*thumb2_movsi_insn}
     (nil))

(insn 120 117 122 12 (set (reg:SI 2 r2 [orig:170 D.8025 ] [170])
        (mem/s/v:SI (plus:SI (reg/f:SI 2 r2 [206])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1089 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (nil)))

(insn 122 120 124 12 (set (reg/v:SI 2 r2 [orig:172 tmp ] [172])
        (zero_extract:SI (reg:SI 2 r2 [orig:170 D.8025 ] [170])
            (const_int 3 [0x3])
            (const_int 13 [0xd]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1090 131 {extzv_t2}
     (nil))

(insn 124 122 127 12 (set (reg:SI 3 r3 [218])
        (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/f:SI 3 r3 [207])
                    (reg/v:SI 2 r2 [orig:172 tmp ] [172])) [0 APBAHBPrescTable S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1091 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/s/v/j:QI (plus:SI (reg/v:SI 2 r2 [orig:172 tmp ] [172])
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 APBAHBPrescTable S1 A8]))
        (nil)))

(insn 127 124 128 12 (set (reg:SI 1 r1 [219])
        (lshiftrt:SI (reg:SI 1 r1 [orig:162 D.8020 ] [162])
            (reg:SI 3 r3 [218]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1093 119 {*arm_shiftsi3}
     (expr_list:REG_EQUIV (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                (const_int 12 [0xc])) [3 RCC_Clocks_11(D)->PCLK2_Frequency+0 S4 A32])
        (nil)))

(insn 128 127 161 12 (set (mem/s:SI (plus:SI (reg/v/f:SI 0 r0 [orig:177 RCC_Clocks ] [177])
                (const_int 12 [0xc])) [3 RCC_Clocks_11(D)->PCLK2_Frequency+0 S4 A32])
        (reg:SI 1 r1 [219])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1093 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 161 128 162 NOTE_INSN_DELETED)

(note 162 161 0 NOTE_INSN_DELETED)


;; Function RCC_RTCCLKConfig (RCC_RTCCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 143 uninteresting
Reg 146: local to bb 3 def dominates all uses has unique first use
Reg 135: local to bb 3 def dominates all uses has unique first use
Reg 145: local to bb 3 def dominates all uses has unique first use
Reg 136 uninteresting
Reg 138 uninteresting
Reg 139: local to bb 4 def dominates all uses has unique first use
Reg 141 uninteresting
Found def insn 12 for 135 to be not moveable
Found def insn 24 for 139 to be not moveable
Examining insn 15, def for 145
  all ok
Examining insn 14, def for 146
  all ok and transp
      Creating newreg=152 from oldreg=146
rescanning insn with uid = 14.
deleting insn with uid = 14.
scanning new insn with uid = 40.
    New r152: setting preferred NO_REGS, alternative NO_REGS
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)

Pass 0 for finding pseudo/allocno costs

    a11 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r141,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r139,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a7 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r135,l0) best LO_REGS, cover GENERAL_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a3(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:33780
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:26460
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:756,756 GENERAL_REGS:756,756 MEM:7560
  a7(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7560
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7560
  a9(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:756,756 GENERAL_REGS:756,756 MEM:7560
  a10(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7560
  a11(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a12(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r139: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a3(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:33780
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:26460
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:756,756 GENERAL_REGS:756,756 MEM:7560
  a7(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7560
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7560
  a9(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:756,756 GENERAL_REGS:756,756 MEM:7560
  a10(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7560
  a11(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a12(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 30(l0): point = 0
   Insn 27(l0): point = 2
   Insn 36(l0): point = 4
   Insn 24(l0): point = 6
   Insn 35(l0): point = 8
   Insn 34(l0): point = 10
   Insn 33(l0): point = 12
   Insn 19(l0): point = 15
   Insn 16(l0): point = 17
   Insn 13(l0): point = 19
   Insn 15(l0): point = 21
   Insn 40(l0): point = 23
   Insn 12(l0): point = 25
   Insn 14(l0): point = 27
   Insn 38(l0): point = 29
   Insn 37(l0): point = 31
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 6(l0): point = 38
   Insn 2(l0): point = 40
 a0(r148): [1..12]
 a1(r141): [1..2]
 a2(r139): [3..6]
 a3(r149): [3..8]
 a4(r142): [9..40]
 a5(r144): [16..31]
 a6(r138): [16..17]
 a7(r136): [18..19]
 a8(r145): [18..21]
 a9(r135): [20..25]
 a10(r146): [22..23]
 a11(r152): [24..27]
 a12(r143): [37..38]
Compressing live ranges: from 43 to 18 - 41%
Ranges after the compression:
 a0(r148): [0..5]
 a1(r141): [0..1]
 a2(r139): [2..3]
 a3(r149): [2..3]
 a4(r142): [4..17]
 a5(r144): [6..15]
 a6(r138): [6..7]
 a7(r136): [8..9]
 a8(r145): [8..11]
 a9(r135): [10..15]
 a10(r146): [12..13]
 a11(r152): [14..15]
 a12(r143): [16..17]
+++Allocating 104 bytes for conflict table (uncompressed size 104)
;; a0(r148,l0) conflicts: a1(r141,l0) a2(r139,l0) a3(r149,l0) a4(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r141,l0) conflicts: a0(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r139,l0) conflicts: a0(r148,l0) a3(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r149,l0) conflicts: a0(r148,l0) a2(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r142,l0) conflicts: a0(r148,l0) a6(r138,l0) a5(r144,l0) a7(r136,l0) a8(r145,l0) a9(r135,l0) a10(r146,l0) a11(r152,l0) a12(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r144,l0) conflicts: a4(r142,l0) a6(r138,l0) a7(r136,l0) a8(r145,l0) a9(r135,l0) a10(r146,l0) a11(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r138,l0) conflicts: a4(r142,l0) a5(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r136,l0) conflicts: a4(r142,l0) a5(r144,l0) a8(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a8(r145,l0) conflicts: a4(r142,l0) a5(r144,l0) a7(r136,l0) a9(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a9(r135,l0) conflicts: a4(r142,l0) a5(r144,l0) a8(r145,l0) a10(r146,l0) a11(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a10(r146,l0) conflicts: a4(r142,l0) a5(r144,l0) a9(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a11(r152,l0) conflicts: a4(r142,l0) a5(r144,l0) a9(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a12(r143,l0) conflicts: a4(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a3(r149)<->a4(r142)@125:shuffle
  cp1:a1(r141)<->a3(r149)@125:shuffle
  cp2:a1(r141)<->a2(r139)@125:shuffle
  cp3:a10(r146)<->a11(r152)@378:move
  cp4:a8(r145)<->a10(r146)@47:shuffle
  cp5:a7(r136)<->a9(r135)@47:shuffle
  cp6:a6(r138)<->a8(r145)@47:shuffle
  cp7:a6(r138)<->a7(r136)@47:shuffle
  regions=1, blocks=5, points=18
    allocnos=13 (big 0), copies=8, conflicts=2, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r148 1r141 2r139 3r149 4r142 5r144 6r138 7r136 8r145 9r135 10r146 11r152 12r143
    modified regnos: 135 136 138 139 141 142 143 144 145 146 148 149 152
    border:
    Pressure: GENERAL_REGS=5
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
      Pushing a11(r152,l0)
      Pushing a10(r146,l0)
      Pushing a9(r135,l0)
      Pushing a8(r145,l0)
      Pushing a7(r136,l0)
      Pushing a6(r138,l0)
      Pushing a5(r144,l0)
      Pushing a12(r143,l0)
      Pushing a2(r139,l0)
      Pushing a1(r141,l0)
      Pushing a4(r142,l0)
      Pushing a3(r149,l0)
      Pushing a0(r148,l0)
      Popping a0(r148,l0)  -- assign reg 3
      Popping a3(r149,l0)  -- assign reg 0
      Popping a4(r142,l0)  -- assign reg 0
      Popping a1(r141,l0)  -- assign reg 0
      Popping a2(r139,l0)  -- assign reg 2
      Popping a12(r143,l0)  -- assign reg 3
      Popping a5(r144,l0)  -- assign reg 3
      Popping a6(r138,l0)  -- assign reg 2
      Popping a7(r136,l0)  -- assign reg 2
      Popping a8(r145,l0)  -- assign reg 1
      Popping a9(r135,l0)  -- assign reg 2
      Popping a10(r146,l0)  -- assign reg 1
      Popping a11(r152,l0)  -- assign reg 1
Disposition:
    9:r135 l0     2    7:r136 l0     2    6:r138 l0     2    2:r139 l0     2
    1:r141 l0     0    4:r142 l0     0   12:r143 l0     3    5:r144 l0     3
    8:r145 l0     1   10:r146 l0     1    0:r148 l0     3    3:r149 l0     0
   11:r152 l0     1
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 142
insn=6, live_throughout: 13, 14, 142, dead_or_set: 143
insn=7, live_throughout: 13, 14, 142, dead_or_set: 143
insn=8, live_throughout: 13, 14, 142, dead_or_set: 
insn=37, live_throughout: 13, 14, 142, dead_or_set: 144
insn=38, live_throughout: 13, 14, 142, 144, dead_or_set: 144
insn=14, live_throughout: 13, 14, 142, 144, dead_or_set: 152
insn=12, live_throughout: 13, 14, 142, 144, 152, dead_or_set: 135
insn=40, live_throughout: 13, 14, 135, 142, 144, dead_or_set: 146, 152
insn=15, live_throughout: 13, 14, 135, 142, 144, dead_or_set: 145, 146
insn=13, live_throughout: 13, 14, 142, 144, 145, dead_or_set: 135, 136
insn=16, live_throughout: 13, 14, 142, 144, dead_or_set: 136, 138, 145
insn=19, live_throughout: 13, 14, 142, dead_or_set: 138, 144
insn=20, live_throughout: 13, 14, 142, dead_or_set: 
insn=33, live_throughout: 13, 14, 142, dead_or_set: 148
insn=34, live_throughout: 13, 14, 142, 148, dead_or_set: 148
insn=35, live_throughout: 13, 14, 148, dead_or_set: 142, 149
insn=24, live_throughout: 13, 14, 148, 149, dead_or_set: 139
insn=36, live_throughout: 13, 14, 139, 148, dead_or_set: 149
insn=27, live_throughout: 13, 14, 148, dead_or_set: 139, 141, 149
insn=30, live_throughout: 13, 14, dead_or_set: 141, 148
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 16
changing reg in insn 19
changing reg in insn 24
changing reg in insn 27
changing reg in insn 27
changing reg in insn 30
changing reg in insn 2
changing reg in insn 14
changing reg in insn 35
changing reg in insn 6
changing reg in insn 15
changing reg in insn 6
changing reg in insn 7
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 19
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 40
changing reg in insn 15
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
changing reg in insn 30
changing reg in insn 24
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 27
changing reg in insn 14
changing reg in insn 40
Spilling for insn 19.
Spilling for insn 30.

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [144])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [144])
                                                        (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])

Reloads for insn # 30
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [148])
                                                        (const_int 112 [0x70])) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [148])
                                                        (const_int 112 [0x70])) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])
deleting insn with uid = 2.
deleting insn with uid = 40.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


RCC_RTCCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={4d,6u,1e} r1={3d,2u} r2={5d,4u} r3={6d,7u} r13={1d,4u} r14={1d,1u} r24={1d,1u} 
;;    total ref usage 47{21d,25u,1e} in 18{18 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 (set (reg:SI 3 r3 [143])
        (and:SI (reg/v:SI 0 r0 [orig:142 RCC_RTCCLKSource ] [142])
            (const_int 768 [0x300]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1163 69 {*arm_andsi3_insn}
     (nil))

(insn 7 6 8 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [143])
            (const_int 768 [0x300]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1163 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1163 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil))
 -> 20)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [37.8%]  (fallthru)
;; Succ edge  4 [62.2%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [37.8%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [144])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1165 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 14 3 (set (zero_extract:SI (reg/f:SI 3 r3 [144])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1165 342 {*arm_movtas_ze}
     (nil))

(insn 14 38 12 3 (set (reg:SI 1 r1 [146])
        (and:SI (reg/v:SI 0 r0 [orig:142 RCC_RTCCLKSource ] [142])
            (const_int 268435455 [0xfffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1171 69 {*arm_andsi3_insn}
     (nil))

(insn 12 14 15 3 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [144])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1165 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887240 [0x40023808]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (nil)))

(insn 15 12 13 3 (set (reg:SI 1 r1 [145])
        (and:SI (reg:SI 1 r1 [146])
            (const_int -769 [0xfffffffffffffcff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1171 69 {*arm_andsi3_insn}
     (expr_list:REG_EQUAL (and:SI (reg/v:SI 0 r0 [orig:142 RCC_RTCCLKSource ] [142])
            (const_int 268434687 [0xffffcff]))
        (nil)))

(insn 13 15 16 3 (set (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])
        (and:SI (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
            (const_int -2031617 [0xffffffffffe0ffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1168 69 {*arm_andsi3_insn}
     (nil))

(insn 16 13 19 3 (set (reg/v:SI 2 r2 [orig:138 tmpreg ] [138])
        (ior:SI (reg:SI 1 r1 [145])
            (reg/v:SI 2 r2 [orig:136 tmpreg ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1171 91 {*iorsi3_insn}
     (nil))

(insn 19 16 20 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [144])
                (const_int 8 [0x8])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:138 tmpreg ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1174 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [62.2%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 20 19 21 4 40 "" [1 uses])

(note 21 20 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 21 33 4 NOTE_INSN_DELETED)

(insn 33 25 34 4 (set (reg/f:SI 3 r3 [148])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 34 33 35 4 (set (zero_extract:SI (reg/f:SI 3 r3 [148])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 342 {*arm_movtas_ze}
     (nil))

(insn 35 34 24 4 (set (reg:SI 0 r0 [149])
        (ashift:SI (reg/v:SI 0 r0 [orig:142 RCC_RTCCLKSource ] [142])
            (const_int 20 [0x14]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 119 {*arm_shiftsi3}
     (nil))

(insn 24 35 36 4 (set (reg:SI 2 r2 [orig:139 D.7992 ] [139])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [148])
                (const_int 112 [0x70])) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887344 [0x40023870]) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])
        (nil)))

(insn 36 24 27 4 (set (reg:SI 0 r0 [149])
        (lshiftrt:SI (reg:SI 0 r0 [149])
            (const_int 20 [0x14]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 119 {*arm_shiftsi3}
     (nil))

(insn 27 36 30 4 (set (reg:SI 0 r0 [orig:141 D.7994 ] [141])
        (ior:SI (reg:SI 0 r0 [149])
            (reg:SI 2 r2 [orig:139 D.7992 ] [139]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 91 {*iorsi3_insn}
     (nil))

(insn 30 27 39 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [148])
                (const_int 112 [0x70])) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])
        (reg:SI 0 r0 [orig:141 D.7994 ] [141])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1178 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 30 41 NOTE_INSN_DELETED)

(note 41 39 0 NOTE_INSN_DELETED)


;; Function RCC_RTCCLKCmd (RCC_RTCCLKCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 9(l0): point = 0
   Insn 2(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
 a0(r136): [1..6]
 a1(r135): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r135): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 0
Disposition:
    1:r135 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 0, 13, 14, dead_or_set: 136
insn=13, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 135
insn=9, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 2
changing reg in insn 9
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111952956B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111952956B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_RTCCLKCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 3 13 2 (set (reg/f:SI 3 r3 [136])
        (const_int 3644 [0xe3c])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1193 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 3644 [0xe3c])
        (nil)))

(insn 13 12 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1193 342 {*arm_movtas_ze}
     (nil))

(insn 9 13 15 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111952956B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:135 NewState ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1193 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 15 9 16 NOTE_INSN_DELETED)

(note 16 15 0 NOTE_INSN_DELETED)


;; Function RCC_BackupResetCmd (RCC_BackupResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 9(l0): point = 0
   Insn 2(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
 a0(r136): [1..6]
 a1(r135): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r135): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 0
Disposition:
    1:r135 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 0, 13, 14, dead_or_set: 136
insn=13, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 135
insn=9, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 2
changing reg in insn 9
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111952960B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111952960B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_BackupResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 3 13 2 (set (reg/f:SI 3 r3 [136])
        (const_int 3648 [0xe40])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1209 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 3648 [0xe40])
        (nil)))

(insn 13 12 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1209 342 {*arm_movtas_ze}
     (nil))

(insn 9 13 14 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111952960B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:135 NewState ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1209 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 9 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function RCC_I2SCLKConfig (RCC_I2SCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 8(l0): point = 0
   Insn 2(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
 a0(r136): [1..6]
 a1(r134): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r134): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r134,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r134
    modified regnos: 134 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a1(r134,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 0
Disposition:
    1:r134 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=11, live_throughout: 0, 13, 14, dead_or_set: 136
insn=12, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 134
insn=8, live_throughout: 13, 14, dead_or_set: 134, 136
changing reg in insn 2
changing reg in insn 8
changing reg in insn 12
changing reg in insn 11
changing reg in insn 12
changing reg in insn 8
Spilling for insn 8.

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949660B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949660B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_I2SCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 3 12 2 (set (reg/f:SI 3 r3 [136])
        (const_int 348 [0x15c])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1227 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 348 [0x15c])
        (nil)))

(insn 12 11 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1227 342 {*arm_movtas_ze}
     (nil))

(insn 8 12 13 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111949660B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:134 RCC_I2SCLKSource ] [134])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1227 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 13 8 14 NOTE_INSN_DELETED)

(note 14 13 0 NOTE_INSN_DELETED)


;; Function RCC_SAIPLLI2SClkDivConfig (RCC_SAIPLLI2SClkDivConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 140: local to bb 2 def dominates all uses has unique first use
Reg 134 uninteresting
Reg 135 uninteresting
Reg 137 uninteresting
Found def insn 10 for 140 to be not moveable
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 10(l0): point = 8
   Insn 18(l0): point = 10
   Insn 17(l0): point = 12
 a0(r139): [1..12]
 a1(r137): [1..2]
 a2(r135): [3..4]
 a3(r140): [3..8]
 a4(r134): [5..6]
Compressing live ranges: from 15 to 6 - 40%
Ranges after the compression:
 a0(r139): [0..5]
 a1(r137): [0..1]
 a2(r135): [2..3]
 a3(r140): [2..5]
 a4(r134): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r139,l0) conflicts: a1(r137,l0) a2(r135,l0) a3(r140,l0) a4(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r137,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r139,l0) a3(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r140,l0) conflicts: a0(r139,l0) a2(r135,l0) a4(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r139,l0) a3(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r135)<->a4(r134)@125:shuffle
  cp1:a1(r137)<->a3(r140)@125:shuffle
  cp2:a1(r137)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=3, conflicts=1, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r139 1r137 2r135 3r140 4r134
    modified regnos: 134 135 137 139 140
    border:
    Pressure: GENERAL_REGS=4
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a4(r134,l0)
      Pushing a3(r140,l0)
      Pushing a2(r135,l0)
      Pushing a1(r137,l0)
      Pushing a0(r139,l0)
      Popping a0(r139,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 0
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r140,l0)  -- assign reg 0
      Popping a4(r134,l0)  -- assign reg 2
Disposition:
    4:r134 l0     2    2:r135 l0     2    1:r137 l0     0    0:r139 l0     3
    3:r140 l0     0
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=17, live_throughout: 0, 13, 14, dead_or_set: 139
insn=18, live_throughout: 0, 13, 14, 139, dead_or_set: 139
insn=10, live_throughout: 13, 14, 139, dead_or_set: 0, 140
insn=8, live_throughout: 13, 14, 139, 140, dead_or_set: 134
insn=9, live_throughout: 13, 14, 139, 140, dead_or_set: 134, 135
insn=11, live_throughout: 13, 14, 139, dead_or_set: 135, 137, 140
insn=14, live_throughout: 13, 14, dead_or_set: 137, 139
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 11
changing reg in insn 11
changing reg in insn 14
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 14
changing reg in insn 8
changing reg in insn 10
changing reg in insn 11
Spilling for insn 14.

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SAIPLLI2SClkDivConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={3d,3u} r1={1d} r2={3d,2u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 17 2 NOTE_INSN_FUNCTION_BEG)

(insn 17 3 18 2 (set (reg/f:SI 3 r3 [139])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1250 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 18 17 10 2 (set (zero_extract:SI (reg/f:SI 3 r3 [139])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1250 342 {*arm_movtas_ze}
     (nil))

(insn 10 18 8 2 (set (reg:SI 0 r0 [140])
        (plus:SI (reg:SI 0 r0 [ RCC_PLLI2SDivQ ])
            (const_int -1 [0xffffffffffffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1256 4 {*arm_addsi3}
     (nil))

(insn 8 10 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1250 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 11 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -32 [0xffffffffffffffe0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1253 69 {*arm_andsi3_insn}
     (nil))

(insn 11 9 14 2 (set (reg/v:SI 0 r0 [orig:137 tmpreg ] [137])
        (ior:SI (reg:SI 0 r0 [140])
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1256 91 {*iorsi3_insn}
     (nil))

(insn 14 11 19 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 0 r0 [orig:137 tmpreg ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1259 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 19 14 20 NOTE_INSN_DELETED)

(note 20 19 0 NOTE_INSN_DELETED)


;; Function RCC_SAIPLLSAIClkDivConfig (RCC_SAIPLLSAIClkDivConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 141: local to bb 2 def dominates all uses has unique first use
Reg 134 uninteresting
Reg 135 uninteresting
Reg 138 uninteresting
Found def insn 10 for 141 to be not moveable
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 10(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
 a0(r140): [1..12]
 a1(r138): [1..2]
 a2(r135): [3..4]
 a3(r141): [3..8]
 a4(r134): [5..6]
Compressing live ranges: from 15 to 6 - 40%
Ranges after the compression:
 a0(r140): [0..5]
 a1(r138): [0..1]
 a2(r135): [2..3]
 a3(r141): [2..5]
 a4(r134): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r140,l0) conflicts: a1(r138,l0) a2(r135,l0) a3(r141,l0) a4(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r138,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r140,l0) a3(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r141,l0) conflicts: a0(r140,l0) a2(r135,l0) a4(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r140,l0) a3(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r135)<->a4(r134)@125:shuffle
  cp1:a1(r138)<->a2(r135)@125:shuffle
  cp2:a1(r138)<->a3(r141)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=3, conflicts=1, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r138 2r135 3r141 4r134
    modified regnos: 134 135 138 140 141
    border:
    Pressure: GENERAL_REGS=4
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a4(r134,l0)
      Pushing a3(r141,l0)
      Pushing a2(r135,l0)
      Pushing a1(r138,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r141,l0)  -- assign reg 0
      Popping a4(r134,l0)  -- assign reg 2
Disposition:
    4:r134 l0     2    2:r135 l0     2    1:r138 l0     0    0:r140 l0     3
    3:r141 l0     0
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=18, live_throughout: 0, 13, 14, dead_or_set: 140
insn=19, live_throughout: 0, 13, 14, 140, dead_or_set: 140
insn=10, live_throughout: 13, 14, 140, dead_or_set: 0, 141
insn=8, live_throughout: 13, 14, 140, 141, dead_or_set: 134
insn=9, live_throughout: 13, 14, 140, 141, dead_or_set: 134, 135
insn=12, live_throughout: 13, 14, 140, dead_or_set: 135, 138, 141
insn=15, live_throughout: 13, 14, dead_or_set: 138, 140
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 12
changing reg in insn 12
changing reg in insn 15
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 15
changing reg in insn 8
changing reg in insn 10
changing reg in insn 12
Spilling for insn 15.

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SAIPLLSAIClkDivConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={3d,3u} r1={1d} r2={3d,2u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 3 18 2 NOTE_INSN_DELETED)

(insn 18 11 19 2 (set (reg/f:SI 3 r3 [140])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1282 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 19 18 10 2 (set (zero_extract:SI (reg/f:SI 3 r3 [140])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1282 342 {*arm_movtas_ze}
     (nil))

(insn 10 19 8 2 (set (reg:SI 0 r0 [141])
        (plus:SI (reg:SI 0 r0 [ RCC_PLLSAIDivQ ])
            (const_int -1 [0xffffffffffffffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1288 4 {*arm_addsi3}
     (nil))

(insn 8 10 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1282 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 12 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -7937 [0xffffffffffffe0ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1285 69 {*arm_andsi3_insn}
     (nil))

(insn 12 9 15 2 (set (reg/v:SI 0 r0 [orig:138 tmpreg ] [138])
        (ior:SI (ashift:SI (reg:SI 0 r0 [141])
                (const_int 8 [0x8]))
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1288 262 {*arith_shiftsi}
     (nil))

(insn 15 12 20 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 0 r0 [orig:138 tmpreg ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1291 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 15 21 NOTE_INSN_DELETED)

(note 21 20 0 NOTE_INSN_DELETED)


;; Function RCC_SAIBlockACLKConfig (RCC_SAIBlockACLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
 a0(r138): [1..10]
 a1(r136): [1..2]
 a2(r135): [3..4]
 a3(r134): [5..6]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r138): [0..5]
 a1(r136): [0..1]
 a2(r135): [2..3]
 a3(r134): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r138,l0) conflicts: a1(r136,l0) a2(r135,l0) a3(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a3(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a2(r135)<->a3(r134)@125:shuffle
  cp1:a1(r136)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r136 2r135 3r134
    modified regnos: 134 135 136 138
    border:
    Pressure: GENERAL_REGS=4
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a3(r134,l0)
      Pushing a2(r135,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r134,l0)  -- assign reg 2
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    3:r134 l0     2    2:r135 l0     2    1:r136 l0     2    0:r138 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=16, live_throughout: 0, 13, 14, dead_or_set: 138
insn=17, live_throughout: 0, 13, 14, 138, dead_or_set: 138
insn=8, live_throughout: 0, 13, 14, 138, dead_or_set: 134
insn=9, live_throughout: 0, 13, 14, 138, dead_or_set: 134, 135
insn=10, live_throughout: 13, 14, 138, dead_or_set: 0, 135, 136
insn=13, live_throughout: 13, 14, dead_or_set: 136, 138
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 13
changing reg in insn 8
Spilling for insn 13.

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SAIBlockACLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={4d,3u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 16 2 NOTE_INSN_FUNCTION_BEG)

(insn 16 3 17 2 (set (reg/f:SI 3 r3 [138])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1318 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 17 16 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1318 342 {*arm_movtas_ze}
     (nil))

(insn 8 17 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1318 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -3145729 [0xffffffffffcfffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1321 69 {*arm_andsi3_insn}
     (nil))

(insn 10 9 13 2 (set (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])
        (ior:SI (reg:SI 0 r0 [ RCC_SAIBlockACLKSource ])
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1324 91 {*iorsi3_insn}
     (nil))

(insn 13 10 18 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1327 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 13 19 NOTE_INSN_DELETED)

(note 19 18 0 NOTE_INSN_DELETED)


;; Function RCC_SAIBlockBCLKConfig (RCC_SAIBlockBCLKConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
 a0(r138): [1..10]
 a1(r136): [1..2]
 a2(r135): [3..4]
 a3(r134): [5..6]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r138): [0..5]
 a1(r136): [0..1]
 a2(r135): [2..3]
 a3(r134): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r138,l0) conflicts: a1(r136,l0) a2(r135,l0) a3(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a3(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a2(r135)<->a3(r134)@125:shuffle
  cp1:a1(r136)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r136 2r135 3r134
    modified regnos: 134 135 136 138
    border:
    Pressure: GENERAL_REGS=4
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a3(r134,l0)
      Pushing a2(r135,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r134,l0)  -- assign reg 2
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    3:r134 l0     2    2:r135 l0     2    1:r136 l0     2    0:r138 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=16, live_throughout: 0, 13, 14, dead_or_set: 138
insn=17, live_throughout: 0, 13, 14, 138, dead_or_set: 138
insn=8, live_throughout: 0, 13, 14, 138, dead_or_set: 134
insn=9, live_throughout: 0, 13, 14, 138, dead_or_set: 134, 135
insn=10, live_throughout: 13, 14, 138, dead_or_set: 0, 135, 136
insn=13, live_throughout: 13, 14, dead_or_set: 136, 138
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 13
changing reg in insn 8
Spilling for insn 13.

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_SAIBlockBCLKConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={4d,3u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 16 2 NOTE_INSN_FUNCTION_BEG)

(insn 16 3 17 2 (set (reg/f:SI 3 r3 [138])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1354 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 17 16 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1354 342 {*arm_movtas_ze}
     (nil))

(insn 8 17 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1354 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -12582913 [0xffffffffff3fffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1357 69 {*arm_andsi3_insn}
     (nil))

(insn 10 9 13 2 (set (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])
        (ior:SI (reg:SI 0 r0 [ RCC_SAIBlockBCLKSource ])
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1360 91 {*iorsi3_insn}
     (nil))

(insn 13 10 18 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1363 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 13 19 NOTE_INSN_DELETED)

(note 19 18 0 NOTE_INSN_DELETED)


;; Function RCC_LTDCCLKDivConfig (RCC_LTDCCLKDivConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
 a0(r138): [1..10]
 a1(r136): [1..2]
 a2(r135): [3..4]
 a3(r134): [5..6]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r138): [0..5]
 a1(r136): [0..1]
 a2(r135): [2..3]
 a3(r134): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r138,l0) conflicts: a1(r136,l0) a2(r135,l0) a3(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a3(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a2(r135)<->a3(r134)@125:shuffle
  cp1:a1(r136)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r136 2r135 3r134
    modified regnos: 134 135 136 138
    border:
    Pressure: GENERAL_REGS=4
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a3(r134,l0)
      Pushing a2(r135,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 2
      Popping a3(r134,l0)  -- assign reg 2
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    3:r134 l0     2    2:r135 l0     2    1:r136 l0     2    0:r138 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=16, live_throughout: 0, 13, 14, dead_or_set: 138
insn=17, live_throughout: 0, 13, 14, 138, dead_or_set: 138
insn=8, live_throughout: 0, 13, 14, 138, dead_or_set: 134
insn=9, live_throughout: 0, 13, 14, 138, dead_or_set: 134, 135
insn=10, live_throughout: 13, 14, 138, dead_or_set: 0, 135, 136
insn=13, live_throughout: 13, 14, dead_or_set: 136, 138
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 13
changing reg in insn 8
Spilling for insn 13.

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                                                        (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_LTDCCLKDivConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={4d,3u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 16 2 NOTE_INSN_FUNCTION_BEG)

(insn 16 3 17 2 (set (reg/f:SI 3 r3 [138])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1387 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 17 16 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1387 342 {*arm_movtas_ze}
     (nil))

(insn 8 17 9 2 (set (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1387 709 {*thumb2_movsi_insn}
     (nil))

(insn 9 8 10 2 (set (reg/v:SI 2 r2 [orig:135 tmpreg ] [135])
        (and:SI (reg/v:SI 2 r2 [orig:134 tmpreg ] [134])
            (const_int -196609 [0xfffffffffffcffff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1390 69 {*arm_andsi3_insn}
     (nil))

(insn 10 9 13 2 (set (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])
        (ior:SI (reg:SI 0 r0 [ RCC_PLLSAIDivR ])
            (reg/v:SI 2 r2 [orig:135 tmpreg ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1393 91 {*iorsi3_insn}
     (nil))

(insn 13 10 18 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 140 [0x8c])) [3 MEM[(struct RCC_TypeDef *)1073887232B].DCKCFGR+0 S4 A32])
        (reg/v:SI 2 r2 [orig:136 tmpreg ] [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1396 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 13 19 NOTE_INSN_DELETED)

(note 19 18 0 NOTE_INSN_DELETED)


;; Function RCC_TIMCLKPresConfig (RCC_TIMCLKPresConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 8(l0): point = 0
   Insn 2(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
 a0(r136): [1..6]
 a1(r134): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r134): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r134,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r134
    modified regnos: 134 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a1(r134,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 0
Disposition:
    1:r134 l0     0    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=11, live_throughout: 0, 13, 14, dead_or_set: 136
insn=12, live_throughout: 0, 13, 14, 136, dead_or_set: 136
insn=2, live_throughout: 13, 14, 136, dead_or_set: 0, 134
insn=8, live_throughout: 13, 14, dead_or_set: 134, 136
changing reg in insn 2
changing reg in insn 8
changing reg in insn 12
changing reg in insn 11
changing reg in insn 12
changing reg in insn 8
Spilling for insn 8.

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111953888B]+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111953888B]+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_TIMCLKPresConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 3 12 2 (set (reg/f:SI 3 r3 [136])
        (const_int 4576 [0x11e0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1422 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 4576 [0x11e0])
        (nil)))

(insn 12 11 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16967 [0x4247])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1422 342 {*arm_movtas_ze}
     (nil))

(insn 8 12 13 2 (set (mem/v:SI (reg/f:SI 3 r3 [136]) [3 MEM[(volatile uint32_t *)1111953888B]+0 S4 A32])
        (reg/v:SI 0 r0 [orig:134 RCC_TIMCLKPrescaler ] [134])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1422 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 13 8 14 NOTE_INSN_DELETED)

(note 14 13 0 NOTE_INSN_DELETED)


;; Function RCC_AHB1PeriphClockCmd (RCC_AHB1PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB1PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1466 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1468 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1468 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7967 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1468 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887280 [0x40023830]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7968 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB1Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7967 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1468 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7968 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1468 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 51 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7970 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887280 [0x40023830]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7972 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB1Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7970 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 48 [0x30])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7972 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1472 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 50 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_AHB2PeriphClockCmd (RCC_AHB2PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB2PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1498 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1500 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1500 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7958 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1500 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887284 [0x40023834]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7959 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB2Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7958 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1500 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7959 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1500 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 55 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7961 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887284 [0x40023834]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7963 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB2Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7961 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 52 [0x34])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7963 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1504 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 54 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_AHB3PeriphClockCmd (RCC_AHB3PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB3PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1526 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1528 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1528 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7949 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1528 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887288 [0x40023838]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7950 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB3Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7949 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1528 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7950 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1528 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 59 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7952 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887288 [0x40023838]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7954 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB3Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7952 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 56 [0x38])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7954 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1532 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 58 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_APB1PeriphClockCmd (RCC_APB1PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB1PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1578 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1580 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1580 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7940 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1580 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887296 [0x40023840]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7941 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_APB1Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7940 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1580 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7941 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1580 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 63 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7943 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887296 [0x40023840]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7945 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_APB1Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7943 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 64 [0x40])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7945 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1584 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 62 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_APB2PeriphClockCmd (RCC_APB2PeriphClockCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB2PeriphClockCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1623 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1625 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1625 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7931 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1625 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887300 [0x40023844]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7932 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_APB2Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7931 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1625 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7932 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1625 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 67 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7934 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887300 [0x40023844]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7936 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_APB2Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7934 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 68 [0x44])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2ENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7936 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1629 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 66 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_AHB1PeriphResetCmd (RCC_AHB1PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB1PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1665 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1667 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1667 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7922 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1667 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887248 [0x40023810]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7923 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB1Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7922 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1667 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7923 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1667 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 71 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7925 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887248 [0x40023810]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7927 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB1Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7925 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 16 [0x10])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7927 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1671 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 70 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_AHB2PeriphResetCmd (RCC_AHB2PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB2PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1694 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1696 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1696 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7913 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1696 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887252 [0x40023814]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7914 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB2Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7913 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1696 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7914 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1696 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 75 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7916 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887252 [0x40023814]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7918 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB2Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7916 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 20 [0x14])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7918 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1700 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 74 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_AHB3PeriphResetCmd (RCC_AHB3PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB3PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1719 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1721 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1721 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7904 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1721 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887256 [0x40023818]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7905 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB3Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7904 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1721 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7905 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1721 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 79 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7907 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887256 [0x40023818]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7909 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB3Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7907 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 24 [0x18])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7909 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1725 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 78 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_APB1PeriphResetCmd (RCC_APB1PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB1PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1767 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1769 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1769 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7895 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1769 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887264 [0x40023820]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7896 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_APB1Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7895 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1769 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7896 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1769 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 83 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7898 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887264 [0x40023820]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7900 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_APB1Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7898 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 32 [0x20])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7900 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1773 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 82 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_APB2PeriphResetCmd (RCC_APB2PeriphResetCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB2PeriphResetCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1808 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1810 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1810 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7886 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1810 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887268 [0x40023824]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7887 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_APB2Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7886 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1810 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7887 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1810 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 87 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7889 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887268 [0x40023824]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7891 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_APB2Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7889 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 36 [0x24])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2RSTR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7891 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1814 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 86 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_AHB1PeriphClockLPModeCmd (RCC_AHB1PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB1PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1857 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1859 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1859 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7877 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1859 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887312 [0x40023850]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7878 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB1Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7877 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1859 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7878 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1859 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 91 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7880 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887312 [0x40023850]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7882 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB1Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7880 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 80 [0x50])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB1LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7882 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1863 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 90 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_AHB2PeriphClockLPModeCmd (RCC_AHB2PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB2PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1889 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1891 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1891 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7868 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1891 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887316 [0x40023854]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7869 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB2Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7868 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1891 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7869 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1891 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 95 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7871 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887316 [0x40023854]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7873 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB2Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7871 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 84 [0x54])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB2LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7873 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1895 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 94 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_AHB3PeriphClockLPModeCmd (RCC_AHB3PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_AHB3PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1917 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1919 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1919 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7859 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1919 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887320 [0x40023858]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7860 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB3Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7859 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1919 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7860 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1919 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 99 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7862 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887320 [0x40023858]) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7864 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_AHB3Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7862 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 88 [0x58])) [3 MEM[(struct RCC_TypeDef *)1073887232B].AHB3LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7864 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1923 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 98 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_APB1PeriphClockLPModeCmd (RCC_APB1PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB1PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1969 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1971 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1971 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7850 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1971 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887328 [0x40023860]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7851 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_APB1Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7850 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1971 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7851 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1971 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 103 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7853 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887328 [0x40023860]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7855 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_APB1Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7853 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 96 [0x60])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB1LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7855 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:1975 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 102 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_APB2PeriphClockLPModeCmd (RCC_APB2PeriphClockLPModeCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 134 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r136,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a6 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r136: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800

   Insn 28(l0): point = 1
   Insn 25(l0): point = 3
   Insn 23(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 12
   Insn 16(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r143): [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r134): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r134): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r143,l0) a2(r136,l0) a4(r141,l0) a6(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r136)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r143 1r138 2r136 3r139 4r141 5r135 6r134
    modified regnos: 134 135 136 138 139 141 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r134,l0)  -- assign reg 2
Disposition:
    6:r134 l0     2    5:r135 l0     0    2:r136 l0     2    1:r138 l0     0
    3:r139 l0     0    4:r141 l0     3    0:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=37, live_throughout: 13, 14, 139, dead_or_set: 141
insn=38, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 134
insn=13, live_throughout: 13, 14, 141, dead_or_set: 134, 135, 139
insn=16, live_throughout: 13, 14, dead_or_set: 135, 141
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, dead_or_set: 
insn=35, live_throughout: 13, 14, 139, dead_or_set: 143
insn=36, live_throughout: 13, 14, 139, 143, dead_or_set: 143
insn=23, live_throughout: 13, 14, 139, 143, dead_or_set: 136
insn=25, live_throughout: 13, 14, 143, dead_or_set: 136, 138, 139
insn=28, live_throughout: 13, 14, dead_or_set: 138, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 28
changing reg in insn 2
changing reg in insn 25
changing reg in insn 13
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 16
changing reg in insn 12
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 28
changing reg in insn 23
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                                                        (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_APB2PeriphClockLPModeCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2014 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 9 38 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2016 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 38 37 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2016 342 {*arm_movtas_ze}
     (nil))

(insn 12 38 13 3 (set (reg:SI 2 r2 [orig:134 D.7841 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2016 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887332 [0x40023864]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
        (nil)))

(insn 13 12 16 3 (set (reg:SI 0 r0 [orig:135 D.7842 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_APB2Periph ] [139])
            (reg:SI 2 r2 [orig:134 D.7841 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2016 91 {*iorsi3_insn}
     (nil))

(insn 16 13 33 3 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:135 D.7842 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2016 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 107 "" [1 uses])

(note 20 19 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 20 35 4 NOTE_INSN_DELETED)

(insn 35 24 36 4 (set (reg/f:SI 3 r3 [143])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 36 35 23 4 (set (zero_extract:SI (reg/f:SI 3 r3 [143])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 342 {*arm_movtas_ze}
     (nil))

(insn 23 36 25 4 (set (reg:SI 2 r2 [orig:136 D.7844 ] [136])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887332 [0x40023864]) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
        (nil)))

(insn 25 23 28 4 (set (reg:SI 0 r0 [orig:138 D.7846 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_APB2Periph ] [139]))
            (reg:SI 2 r2 [orig:136 D.7844 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 83 {andsi_notsi_si}
     (nil))

(insn 28 25 31 4 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 100 [0x64])) [3 MEM[(struct RCC_TypeDef *)1073887232B].APB2LPENR+0 S4 A32])
        (reg:SI 0 r0 [orig:138 D.7846 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2020 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 106 "" [1 uses])

(note 32 31 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 32 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function RCC_ITConfig (RCC_ITConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 143 uninteresting
Reg 135 uninteresting
Reg 149 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a2(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:42700
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a2(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27300
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 37(l0): point = 1
   Insn 33(l0): point = 3
   Insn 27(l0): point = 5
   Insn 45(l0): point = 7
   Insn 44(l0): point = 9
   Insn 42(l0): point = 12
   Insn 20(l0): point = 14
   Insn 16(l0): point = 16
   Insn 12(l0): point = 18
   Insn 48(l0): point = 20
   Insn 47(l0): point = 22
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
 a0(r147): [2..9]
 a1(r138): [2..3]
 a2(r149): [4..5]
 a3(r139): [17..27] [4..11]
 a4(r141): [15..22]
 a5(r135): [15..16]
 a6(r143): [17..18]
Compressing live ranges: from 30 to 8 - 26%
Ranges after the compression:
 a0(r147): [0..3]
 a1(r138): [0..1]
 a2(r149): [2..3]
 a3(r139): [6..7] [2..3]
 a4(r141): [4..7]
 a5(r135): [4..5]
 a6(r143): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r147,l0) conflicts: a1(r138,l0) a2(r149,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r149,l0) conflicts: a0(r147,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r139,l0) conflicts: a0(r147,l0) a2(r149,l0) a4(r141,l0) a6(r143,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r141,l0) conflicts: a3(r139,l0) a5(r135,l0) a6(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r143,l0) conflicts: a3(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r138)<->a2(r149)@76:shuffle
  cp1:a1(r138)<->a3(r139)@76:shuffle
  cp2:a3(r139)<->a5(r135)@48:shuffle
  cp3:a5(r135)<->a6(r143)@48:shuffle
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=4, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r147 1r138 2r149 3r139 4r141 5r135 6r143
    modified regnos: 135 138 139 141 143 147 149
    border:
    Pressure: GENERAL_REGS=4
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
      Pushing a6(r143,l0)
      Pushing a5(r135,l0)
      Pushing a2(r149,l0)
      Pushing a1(r138,l0)
      Pushing a4(r141,l0)
      Pushing a0(r147,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 0
      Popping a0(r147,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
      Popping a2(r149,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r143,l0)  -- assign reg 2
Disposition:
    5:r135 l0     0    1:r138 l0     0    3:r139 l0     0    4:r141 l0     3
    6:r143 l0     2    0:r147 l0     3    2:r149 l0     2
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=8, live_throughout: 13, 14, 139, dead_or_set: 1
insn=47, live_throughout: 13, 14, 139, dead_or_set: 141
insn=48, live_throughout: 13, 14, 139, 141, dead_or_set: 141
insn=12, live_throughout: 13, 14, 139, 141, dead_or_set: 143
insn=16, live_throughout: 13, 14, 141, dead_or_set: 135, 139, 143
insn=20, live_throughout: 13, 14, dead_or_set: 135, 141
insn=42, live_throughout: 13, 14, dead_or_set: 
insn=23, live_throughout: 13, 14, 139, dead_or_set: 
insn=44, live_throughout: 13, 14, 139, dead_or_set: 147
insn=45, live_throughout: 13, 14, 139, 147, dead_or_set: 147
insn=27, live_throughout: 13, 14, 139, 147, dead_or_set: 149
insn=33, live_throughout: 13, 14, 147, dead_or_set: 138, 139, 149
insn=37, live_throughout: 13, 14, dead_or_set: 138, 147
insn=40, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 16
changing reg in insn 33
changing reg in insn 2
changing reg in insn 33
changing reg in insn 16
changing reg in insn 48
changing reg in insn 47
changing reg in insn 48
changing reg in insn 20
changing reg in insn 12
changing reg in insn 12
changing reg in insn 16
changing reg in insn 45
changing reg in insn 44
changing reg in insn 45
changing reg in insn 37
changing reg in insn 27
changing reg in insn 27
changing reg in insn 33
Spilling for insn 20.
Spilling for insn 37.

Reloads for insn # 20
Reload 0: reload_out (QI) = (mem/v:QI (reg/f:SI 3 r3 [141]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (reg/f:SI 3 r3 [141]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8])

Reloads for insn # 37
Reload 0: reload_out (QI) = (mem/v:QI (reg/f:SI 3 r3 [147]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (reg/f:SI 3 r3 [147]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


RCC_ITConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,1u} r2={3d,2u} r3={5d,6u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 34{15d,19u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 23)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2060 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 23)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 9 14 3 NOTE_INSN_DELETED)

(note 14 13 15 3 NOTE_INSN_DELETED)

(note 15 14 47 3 NOTE_INSN_DELETED)

(insn 47 15 48 3 (set (reg/f:SI 3 r3 [141])
        (const_int 14349 [0x380d])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14349 [0x380d])
        (nil)))

(insn 48 47 12 3 (set (zero_extract:SI (reg/f:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 342 {*arm_movtas_ze}
     (nil))

(insn 12 48 16 3 (set (reg:SI 2 r2 [orig:143 MEM[(volatile uint8_t *)1073887245B] ] [143])
        (zero_extend:SI (mem/v:QI (reg/f:SI 3 r3 [141]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/v:QI (const_int 1073887245 [0x4002380d]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8]))
        (nil)))

(insn 16 12 20 3 (set (reg:SI 0 r0 [orig:135 D.7833 ] [135])
        (ior:SI (reg/v:SI 0 r0 [orig:139 RCC_IT ] [139])
            (reg:SI 2 r2 [orig:143 MEM[(volatile uint8_t *)1073887245B] ] [143]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 91 {*iorsi3_insn}
     (nil))

(insn 20 16 42 3 (set (mem/v:QI (reg/f:SI 3 r3 [141]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8])
        (reg:QI 0 r0 [orig:135 D.7833 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2063 187 {*arm_movqi_insn}
     (nil))

(jump_insn 42 20 43 3 (set (pc)
        (label_ref 40)) 230 {*arm_jump}
     (nil)
 -> 40)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 43 42 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 23 43 24 4 111 "" [1 uses])

(note 24 23 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 28 24 29 4 NOTE_INSN_DELETED)

(note 29 28 30 4 NOTE_INSN_DELETED)

(note 30 29 32 4 NOTE_INSN_DELETED)

(note 32 30 44 4 NOTE_INSN_DELETED)

(insn 44 32 45 4 (set (reg/f:SI 3 r3 [147])
        (const_int 14349 [0x380d])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14349 [0x380d])
        (nil)))

(insn 45 44 27 4 (set (zero_extract:SI (reg/f:SI 3 r3 [147])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 342 {*arm_movtas_ze}
     (nil))

(insn 27 45 33 4 (set (reg:SI 2 r2 [orig:149 MEM[(volatile uint8_t *)1073887245B] ] [149])
        (zero_extend:SI (mem/v:QI (reg/f:SI 3 r3 [147]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 730 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/v:QI (const_int 1073887245 [0x4002380d]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8]))
        (nil)))

(insn 33 27 37 4 (set (reg:SI 0 r0 [orig:138 D.7837 ] [138])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:139 RCC_IT ] [139]))
            (reg:SI 2 r2 [orig:149 MEM[(volatile uint8_t *)1073887245B] ] [149]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 83 {andsi_notsi_si}
     (nil))

(insn 37 33 40 4 (set (mem/v:QI (reg/f:SI 3 r3 [147]) [0 MEM[(volatile uint8_t *)1073887245B]+0 S1 A8])
        (reg:QI 0 r0 [orig:138 D.7837 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2068 187 {*arm_movqi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 40 37 41 5 110 "" [1 uses])

(note 41 40 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 50 41 51 NOTE_INSN_DELETED)

(note 51 50 0 NOTE_INSN_DELETED)


;; Function RCC_GetFlagStatus (RCC_GetFlagStatus)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 154 uninteresting
Reg 137 uninteresting
Reg 160 uninteresting
Reg 161 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1998,1998 GENERAL_REGS:1998,1998 MEM:19990
  a3(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:31080
  a5(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12060
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27200
  a7(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16800


Pass 1 for finding pseudo/allocno costs

    r161: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1998,1998 GENERAL_REGS:1998,1998 MEM:19990
  a3(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:31080
  a5(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12060
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27200
  a7(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16800

   Insn 45(l0): point = 0
   Insn 42(l0): point = 2
   Insn 34(l0): point = 4
   Insn 33(l0): point = 6
   Insn 30(l0): point = 9
   Insn 53(l0): point = 11
   Insn 52(l0): point = 13
   Insn 50(l0): point = 16
   Insn 23(l0): point = 18
   Insn 55(l0): point = 20
   Insn 54(l0): point = 22
   Insn 19(l0): point = 25
   Insn 18(l0): point = 27
   Insn 48(l0): point = 30
   Insn 13(l0): point = 32
   Insn 57(l0): point = 34
   Insn 56(l0): point = 36
   Insn 9(l0): point = 39
   Insn 8(l0): point = 41
   Insn 7(l0): point = 43
   Insn 2(l0): point = 45
 a0(r161): [3..4]
 a1(r160): [5..6]
 a2(r134): [30..32] [16..18] [5..9]
 a3(r154): [7..45]
 a4(r158): [10..13]
 a5(r157): [19..22]
 a6(r137): [39..43] [28..29]
 a7(r156): [33..36]
Compressing live ranges: from 48 to 20 - 41%
Ranges after the compression:
 a0(r161): [0..1]
 a1(r160): [2..3]
 a2(r134): [14..15] [8..9] [2..5]
 a3(r154): [4..19]
 a4(r158): [6..7]
 a5(r157): [10..11]
 a6(r137): [18..19] [12..13]
 a7(r156): [16..17]
+++Allocating 56 bytes for conflict table (uncompressed size 64)
;; a0(r161,l0) conflicts:;; a1(r160,l0) conflicts: a2(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r134,l0) conflicts: a1(r160,l0) a3(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r154,l0) conflicts: a2(r134,l0) a4(r158,l0) a5(r157,l0) a6(r137,l0) a7(r156,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r158,l0) conflicts: a3(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r157,l0) conflicts: a3(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r137,l0) conflicts: a3(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r156,l0) conflicts: a3(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r160)<->a3(r154)@125:shuffle
  cp1:a0(r161)<->a2(r134)@125:shuffle
  cp2:a0(r161)<->a1(r160)@125:shuffle
  regions=1, blocks=8, points=20
    allocnos=8 (big 0), copies=3, conflicts=5, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r161 1r160 2r134 3r154 4r158 5r157 6r137 7r156
    modified regnos: 134 137 154 156 157 158 160 161
    border:
    Pressure: GENERAL_REGS=3
    Reg 161 of GENERAL_REGS has 1 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
      Pushing a5(r157,l0)
      Pushing a7(r156,l0)
      Pushing a4(r158,l0)
      Pushing a2(r134,l0)
      Pushing a1(r160,l0)
      Pushing a0(r161,l0)
      Pushing a6(r137,l0)
      Pushing a3(r154,l0)
      Popping a3(r154,l0)  -- assign reg 0
      Popping a6(r137,l0)  -- assign reg 3
      Popping a0(r161,l0)  -- assign reg 0
      Popping a1(r160,l0)  -- assign reg 0
      Popping a2(r134,l0)  -- assign reg 3
      Popping a4(r158,l0)  -- assign reg 3
      Popping a7(r156,l0)  -- assign reg 3
      Popping a5(r157,l0)  -- assign reg 3
Disposition:
    2:r134 l0     3    6:r137 l0     3    3:r154 l0     0    7:r156 l0     3
    5:r157 l0     3    4:r158 l0     3    1:r160 l0     0    0:r161 l0     0
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 154
insn=7, live_throughout: 13, 14, 154, dead_or_set: 137
insn=8, live_throughout: 13, 14, 137, 154, dead_or_set: 
insn=9, live_throughout: 13, 14, 137, 154, dead_or_set: 
insn=56, live_throughout: 13, 14, 154, dead_or_set: 156
insn=57, live_throughout: 13, 14, 154, 156, dead_or_set: 156
insn=13, live_throughout: 13, 14, 154, dead_or_set: 134, 156
insn=48, live_throughout: 13, 14, 134, 154, dead_or_set: 
insn=16, live_throughout: 13, 14, 137, 154, dead_or_set: 
insn=18, live_throughout: 13, 14, 154, dead_or_set: 137
insn=19, live_throughout: 13, 14, 154, dead_or_set: 
insn=54, live_throughout: 13, 14, 154, dead_or_set: 157
insn=55, live_throughout: 13, 14, 154, 157, dead_or_set: 157
insn=23, live_throughout: 13, 14, 154, dead_or_set: 134, 157
insn=50, live_throughout: 13, 14, 134, 154, dead_or_set: 
insn=26, live_throughout: 13, 14, 154, dead_or_set: 
insn=52, live_throughout: 13, 14, 154, dead_or_set: 158
insn=53, live_throughout: 13, 14, 154, 158, dead_or_set: 158
insn=30, live_throughout: 13, 14, 154, dead_or_set: 134, 158
insn=31, live_throughout: 13, 14, 134, 154, dead_or_set: 
insn=33, live_throughout: 13, 14, 134, dead_or_set: 154, 160
insn=34, live_throughout: 13, 14, dead_or_set: 134, 160, 161
insn=42, live_throughout: 13, 14, dead_or_set: 0, 161
insn=45, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 30
changing reg in insn 23
changing reg in insn 13
changing reg in insn 34
changing reg in insn 7
changing reg in insn 18
changing reg in insn 8
changing reg in insn 2
changing reg in insn 7
changing reg in insn 33
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 13
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 23
changing reg in insn 53
changing reg in insn 52
changing reg in insn 53
changing reg in insn 30
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 42
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)


RCC_GetFlagStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 24[cc]
;;  ref usage 	r0={4d,6u} r1={1d} r2={1d} r3={11d,9u} r13={1d,7u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 46{21d,25u,0e} in 20{20 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 7 2 NOTE_INSN_DELETED)

(insn 7 6 8 2 (set (reg/v:SI 3 r3 [orig:137 tmp ] [137])
        (lshiftrt:SI (reg/v:SI 0 r0 [orig:154 RCC_FLAG ] [154])
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2102 119 {*arm_shiftsi3}
     (nil))

(insn 8 7 9 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:137 tmp ] [137])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2103 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2103 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 16)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 10 9 56 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 56 10 57 3 (set (reg/f:SI 3 r3 [156])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 57 56 13 3 (set (zero_extract:SI (reg/f:SI 3 r3 [156])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 342 {*arm_movtas_ze}
     (nil))

(insn 13 57 48 3 (set (reg/v:SI 3 r3 [orig:134 statusreg ] [134])
        (mem/s/v:SI (reg/f:SI 3 r3 [156]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2105 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887232 [0x40023800]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CR+0 S4 A32])
        (nil)))

(jump_insn 48 13 49 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 49 48 16)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 16 49 17 4 115 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:137 tmp ] [137])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2107 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2107 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 26)
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 20 19 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 54 20 55 5 (set (reg/f:SI 3 r3 [157])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2109 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 55 54 23 5 (set (zero_extract:SI (reg/f:SI 3 r3 [157])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2109 342 {*arm_movtas_ze}
     (nil))

(insn 23 55 50 5 (set (reg/v:SI 3 r3 [orig:134 statusreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [157])
                (const_int 112 [0x70])) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2109 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887344 [0x40023870]) [3 MEM[(struct RCC_TypeDef *)1073887232B].BDCR+0 S4 A32])
        (nil)))

(jump_insn 50 23 51 5 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 51 50 26)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 26 51 27 6 117 "" [1 uses])

(note 27 26 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 52 27 53 6 (set (reg/f:SI 3 r3 [158])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2113 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 53 52 30 6 (set (zero_extract:SI (reg/f:SI 3 r3 [158])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2113 342 {*arm_movtas_ze}
     (nil))

(insn 30 53 31 6 (set (reg/v:SI 3 r3 [orig:134 statusreg ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [158])
                (const_int 116 [0x74])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2113 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (mem/s/v:SI (const_int 1073887348 [0x40023874]) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%] 
(code_label 31 30 32 7 116 "" [2 uses])

(note 32 31 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 35 32 36 7 NOTE_INSN_DELETED)

(note 36 35 37 7 NOTE_INSN_DELETED)

(note 37 36 33 7 NOTE_INSN_DELETED)

(insn 33 37 34 7 (set (reg:SI 0 r0 [160])
        (and:SI (reg/v:SI 0 r0 [orig:154 RCC_FLAG ] [154])
            (const_int 31 [0x1f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2117 69 {*arm_andsi3_insn}
     (nil))

(insn 34 33 42 7 (set (reg:SI 0 r0 [161])
        (lshiftrt:SI (reg/v:SI 3 r3 [orig:134 statusreg ] [134])
            (reg:SI 0 r0 [160]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2118 119 {*arm_shiftsi3}
     (nil))

(insn 42 34 45 7 (set (reg/i:SI 0 r0)
        (and:SI (reg:SI 0 r0 [161])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2128 69 {*arm_andsi3_insn}
     (nil))

(insn 45 42 58 7 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2128 -1
     (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 58 45 59 NOTE_INSN_DELETED)

(note 59 58 0 NOTE_INSN_DELETED)


;; Function RCC_ClearFlag (RCC_ClearFlag)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 11(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
 a0(r136): [1..8]
 a1(r135): [1..2]
 a2(r134): [3..4]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r136): [0..3]
 a1(r135): [0..1]
 a2(r134): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r136,l0) conflicts: a1(r135,l0) a2(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r134,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r135)<->a2(r134)@125:shuffle
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=1, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135 2r134
    modified regnos: 134 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a2(r134,l0)
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 2
      Popping a2(r134,l0)  -- assign reg 2
Disposition:
    2:r134 l0     2    1:r135 l0     2    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=14, live_throughout: 13, 14, dead_or_set: 136
insn=15, live_throughout: 13, 14, 136, dead_or_set: 136
insn=7, live_throughout: 13, 14, 136, dead_or_set: 134
insn=8, live_throughout: 13, 14, 136, dead_or_set: 134, 135
insn=11, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 11
changing reg in insn 7
Spilling for insn 11.

Reloads for insn # 11
Reload 0: reload_out (SI) = (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [136])
                                                        (const_int 116 [0x74])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [136])
                                                        (const_int 116 [0x74])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_ClearFlag

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3]
;;  ref usage 	r0={1d} r1={1d} r2={3d,2u} r3={3d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 14 2 NOTE_INSN_FUNCTION_BEG)

(insn 14 2 15 2 (set (reg/f:SI 3 r3 [136])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2140 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 15 14 7 2 (set (zero_extract:SI (reg/f:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2140 342 {*arm_movtas_ze}
     (nil))

(insn 7 15 8 2 (set (reg:SI 2 r2 [orig:134 D.7808 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [136])
                (const_int 116 [0x74])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2140 709 {*thumb2_movsi_insn}
     (nil))

(insn 8 7 11 2 (set (reg:SI 2 r2 [orig:135 D.7809 ] [135])
        (ior:SI (reg:SI 2 r2 [orig:134 D.7808 ] [134])
            (const_int 16777216 [0x1000000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2140 91 {*iorsi3_insn}
     (nil))

(insn 11 8 16 2 (set (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [136])
                (const_int 116 [0x74])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CSR+0 S4 A32])
        (reg:SI 2 r2 [orig:135 D.7809 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2140 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 16 11 17 NOTE_INSN_DELETED)

(note 17 16 0 NOTE_INSN_DELETED)


;; Function RCC_GetITStatus (RCC_GetITStatus)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best LO_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000


Pass 1 for finding pseudo/allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000

   Insn 21(l0): point = 0
   Insn 18(l0): point = 2
   Insn 10(l0): point = 4
   Insn 8(l0): point = 6
   Insn 25(l0): point = 8
   Insn 24(l0): point = 10
 a0(r134): [5..6]
 a1(r140): [7..10]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r134): [0..1]
 a1(r140): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r134,l0) conflicts:;; a1(r140,l0) conflicts:  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134 1r140
    modified regnos: 134 140
    border:
    Pressure: GENERAL_REGS=3
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
      Pushing a0(r134,l0)
      Pushing a1(r140,l0)
      Popping a1(r140,l0)  -- assign reg 3
      Popping a0(r134,l0)  -- assign reg 3
Disposition:
    0:r134 l0     3    1:r140 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=24, live_throughout: 0, 13, 14, dead_or_set: 140
insn=25, live_throughout: 0, 13, 14, 140, dead_or_set: 140
insn=8, live_throughout: 0, 13, 14, dead_or_set: 134, 140
insn=10, live_throughout: 13, 14, dead_or_set: 0, 134
insn=18, live_throughout: 13, 14, dead_or_set: 0
insn=21, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 8
changing reg in insn 10
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 8


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_GetITStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={4d,3u} r13={1d,2u} r14={1d,1u} r24={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 11 2 NOTE_INSN_DELETED)

(note 11 9 12 2 NOTE_INSN_DELETED)

(note 12 11 13 2 NOTE_INSN_DELETED)

(note 13 12 24 2 NOTE_INSN_DELETED)

(insn 24 13 25 2 (set (reg/f:SI 3 r3 [140])
        (const_int 14336 [0x3800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2165 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14336 [0x3800])
        (nil)))

(insn 25 24 8 2 (set (zero_extract:SI (reg/f:SI 3 r3 [140])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2165 342 {*arm_movtas_ze}
     (nil))

(insn 8 25 10 2 (set (reg:SI 3 r3 [orig:134 D.7799 ] [134])
        (mem/s/v:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 12 [0xc])) [3 MEM[(struct RCC_TypeDef *)1073887232B].CIR+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2165 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 8 18 2 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 0 r0 [ RCC_IT ])
                        (reg:SI 3 r3 [orig:134 D.7799 ] [134]))
                    (const_int 0 [0])))
            (clobber (scratch:SI))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2167 72 {*andsi3_compare0_scratch}
     (nil))

(insn 18 10 21 2 (set (reg/i:SI 0 r0)
        (ne:SI (reg:CC_NOOV 24 cc)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2175 713 {*thumb2_mov_scc}
     (nil))

(insn 21 18 26 2 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2175 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 21 27 NOTE_INSN_DELETED)

(note 27 26 0 NOTE_INSN_DELETED)


;; Function RCC_ClearITPendingBit (RCC_ClearITPendingBit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 9(l0): point = 0
   Insn 2(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
 a0(r135): [1..6]
 a1(r134): [1..2]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r134): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a1(r134,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r134
    modified regnos: 134 135
    border:
    Pressure: GENERAL_REGS=3
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a1(r134,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 0
Disposition:
    1:r134 l0     0    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 0, 13, 14, dead_or_set: 135
insn=13, live_throughout: 0, 13, 14, 135, dead_or_set: 135
insn=2, live_throughout: 13, 14, 135, dead_or_set: 0, 134
insn=9, live_throughout: 13, 14, dead_or_set: 134, 135
changing reg in insn 2
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (QI) = (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887246B]+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887246B]+0 S1 A8])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


RCC_ClearITPendingBit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 14{8d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 3 13 2 (set (reg/f:SI 3 r3 [135])
        (const_int 14350 [0x380e])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2198 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 14350 [0x380e])
        (nil)))

(insn 13 12 9 2 (set (zero_extract:SI (reg/f:SI 3 r3 [135])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16386 [0x4002])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2198 342 {*arm_movtas_ze}
     (nil))

(insn 9 13 15 2 (set (mem/v:QI (reg/f:SI 3 r3 [135]) [0 MEM[(volatile uint8_t *)1073887246B]+0 S1 A8])
        (reg:QI 0 r0 [orig:134 RCC_IT ] [134])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c:2198 187 {*arm_movqi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 15 9 16 NOTE_INSN_DELETED)

(note 16 15 0 NOTE_INSN_DELETED)

