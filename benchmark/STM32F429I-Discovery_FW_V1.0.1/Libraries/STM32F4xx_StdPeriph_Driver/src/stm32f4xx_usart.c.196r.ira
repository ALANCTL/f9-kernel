
;; Function USART_DeInit (USART_DeInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:43740
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:78640
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:45720
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:47880
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50040
  a5(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:52380
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:54780
  a7(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:57300
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000


Pass 1 for finding pseudo/allocno costs

    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:43740
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:78640
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:45720
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:47880
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50040
  a5(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:52380
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:54780
  a7(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:57300
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000

   Insn 114(l0): point = 1
   Insn 113(l0): point = 3
   Insn 112(l0): point = 5
   Insn 111(l0): point = 7
   Insn 110(l0): point = 9
   Insn 109(l0): point = 11
   Insn 107(l0): point = 14
   Insn 106(l0): point = 16
   Insn 142(l0): point = 18
   Insn 141(l0): point = 20
   Insn 100(l0): point = 23
   Insn 99(l0): point = 25
   Insn 98(l0): point = 27
   Insn 97(l0): point = 29
   Insn 96(l0): point = 31
   Insn 95(l0): point = 33
   Insn 93(l0): point = 36
   Insn 92(l0): point = 38
   Insn 144(l0): point = 40
   Insn 143(l0): point = 42
   Insn 86(l0): point = 45
   Insn 85(l0): point = 47
   Insn 84(l0): point = 49
   Insn 83(l0): point = 51
   Insn 82(l0): point = 53
   Insn 81(l0): point = 55
   Insn 79(l0): point = 58
   Insn 78(l0): point = 60
   Insn 146(l0): point = 62
   Insn 145(l0): point = 64
   Insn 72(l0): point = 67
   Insn 71(l0): point = 69
   Insn 70(l0): point = 71
   Insn 69(l0): point = 73
   Insn 68(l0): point = 75
   Insn 67(l0): point = 77
   Insn 65(l0): point = 80
   Insn 64(l0): point = 82
   Insn 148(l0): point = 84
   Insn 147(l0): point = 86
   Insn 58(l0): point = 89
   Insn 57(l0): point = 91
   Insn 56(l0): point = 93
   Insn 55(l0): point = 95
   Insn 54(l0): point = 97
   Insn 53(l0): point = 99
   Insn 51(l0): point = 102
   Insn 50(l0): point = 104
   Insn 150(l0): point = 106
   Insn 149(l0): point = 108
   Insn 44(l0): point = 111
   Insn 43(l0): point = 113
   Insn 42(l0): point = 115
   Insn 41(l0): point = 117
   Insn 40(l0): point = 119
   Insn 39(l0): point = 121
   Insn 37(l0): point = 124
   Insn 36(l0): point = 126
   Insn 152(l0): point = 128
   Insn 151(l0): point = 130
   Insn 30(l0): point = 133
   Insn 29(l0): point = 135
   Insn 28(l0): point = 137
   Insn 27(l0): point = 139
   Insn 26(l0): point = 141
   Insn 25(l0): point = 143
   Insn 23(l0): point = 146
   Insn 22(l0): point = 148
   Insn 154(l0): point = 150
   Insn 153(l0): point = 152
   Insn 16(l0): point = 155
   Insn 15(l0): point = 157
   Insn 14(l0): point = 159
   Insn 13(l0): point = 161
   Insn 12(l0): point = 163
   Insn 11(l0): point = 165
   Insn 9(l0): point = 168
   Insn 8(l0): point = 170
   Insn 156(l0): point = 172
   Insn 2(l0): point = 174
   Insn 155(l0): point = 176
 a0(r142): [17..20]
 a1(r134): [168..174] [146..154] [124..132] [102..110] [80..88] [58..66] [36..44] [17..22]
 a2(r141): [39..42]
 a3(r140): [61..64]
 a4(r139): [83..86]
 a5(r138): [105..108]
 a6(r137): [127..130]
 a7(r136): [149..152]
 a8(r135): [171..176]
Compressing live ranges: from 179 to 16 - 8%
Ranges after the compression:
 a0(r142): [0..1]
 a1(r134): [14..15] [12..13] [10..11] [8..9] [6..7] [4..5] [2..3] [0..1]
 a2(r141): [2..3]
 a3(r140): [4..5]
 a4(r139): [6..7]
 a5(r138): [8..9]
 a6(r137): [10..11]
 a7(r136): [12..13]
 a8(r135): [14..15]
+++Allocating 72 bytes for conflict table (uncompressed size 72)
;; a0(r142,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r134,l0) conflicts: a0(r142,l0) a2(r141,l0) a3(r140,l0) a4(r139,l0) a5(r138,l0) a6(r137,l0) a7(r136,l0) a8(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r141,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r140,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r139,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r138,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r137,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r136,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a8(r135,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=19, points=16
    allocnos=9 (big 0), copies=0, conflicts=8, ranges=16

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r142 1r134 2r141 3r140 4r139 5r138 6r137 7r136 8r135
    modified regnos: 134 135 136 137 138 139 140 141 142
    border:
    Pressure: GENERAL_REGS=3
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
      Pushing a0(r142,l0)
      Pushing a2(r141,l0)
      Pushing a3(r140,l0)
      Pushing a4(r139,l0)
      Pushing a5(r138,l0)
      Pushing a6(r137,l0)
      Pushing a7(r136,l0)
      Pushing a1(r134,l0)
      Pushing a8(r135,l0)
      Popping a8(r135,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 0
      Popping a7(r136,l0)  -- assign reg 3
      Popping a6(r137,l0)  -- assign reg 3
      Popping a5(r138,l0)  -- assign reg 3
      Popping a4(r139,l0)  -- assign reg 3
      Popping a3(r140,l0)  -- assign reg 3
      Popping a2(r141,l0)  -- assign reg 3
      Popping a0(r142,l0)  -- assign reg 3
Disposition:
    1:r134 l0     0    8:r135 l0     3    7:r136 l0     3    6:r137 l0     3
    5:r138 l0     3    4:r139 l0     3    3:r140 l0     3    2:r141 l0     3
    0:r142 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=155, live_throughout: 0, 13, 14, dead_or_set: 135
insn=2, live_throughout: 13, 14, 135, dead_or_set: 0, 134
insn=156, live_throughout: 13, 14, 134, 135, dead_or_set: 135
insn=8, live_throughout: 13, 14, 134, dead_or_set: 135
insn=9, live_throughout: 13, 14, 134, dead_or_set: 
insn=11, live_throughout: 13, dead_or_set: 0
insn=12, live_throughout: 0, 13, dead_or_set: 1
insn=13, live_throughout: 13, dead_or_set: 0, 1, 14
insn=14, live_throughout: 13, 14, dead_or_set: 0
insn=15, live_throughout: 0, 13, 14, dead_or_set: 1
insn=16, live_throughout: 13, 14, dead_or_set: 0, 1
insn=18, live_throughout: 13, 14, 134, dead_or_set: 
insn=153, live_throughout: 13, 14, 134, dead_or_set: 136
insn=154, live_throughout: 13, 14, 134, 136, dead_or_set: 136
insn=22, live_throughout: 13, 14, 134, dead_or_set: 136
insn=23, live_throughout: 13, 14, 134, dead_or_set: 
insn=25, live_throughout: 13, dead_or_set: 0
insn=26, live_throughout: 0, 13, dead_or_set: 1
insn=27, live_throughout: 13, dead_or_set: 0, 1, 14
insn=28, live_throughout: 13, 14, dead_or_set: 0
insn=29, live_throughout: 0, 13, 14, dead_or_set: 1
insn=30, live_throughout: 13, 14, dead_or_set: 0, 1
insn=32, live_throughout: 13, 14, 134, dead_or_set: 
insn=151, live_throughout: 13, 14, 134, dead_or_set: 137
insn=152, live_throughout: 13, 14, 134, 137, dead_or_set: 137
insn=36, live_throughout: 13, 14, 134, dead_or_set: 137
insn=37, live_throughout: 13, 14, 134, dead_or_set: 
insn=39, live_throughout: 13, dead_or_set: 0
insn=40, live_throughout: 0, 13, dead_or_set: 1
insn=41, live_throughout: 13, dead_or_set: 0, 1, 14
insn=42, live_throughout: 13, 14, dead_or_set: 0
insn=43, live_throughout: 0, 13, 14, dead_or_set: 1
insn=44, live_throughout: 13, 14, dead_or_set: 0, 1
insn=46, live_throughout: 13, 14, 134, dead_or_set: 
insn=149, live_throughout: 13, 14, 134, dead_or_set: 138
insn=150, live_throughout: 13, 14, 134, 138, dead_or_set: 138
insn=50, live_throughout: 13, 14, 134, dead_or_set: 138
insn=51, live_throughout: 13, 14, 134, dead_or_set: 
insn=53, live_throughout: 13, dead_or_set: 0
insn=54, live_throughout: 0, 13, dead_or_set: 1
insn=55, live_throughout: 13, dead_or_set: 0, 1, 14
insn=56, live_throughout: 13, 14, dead_or_set: 0
insn=57, live_throughout: 0, 13, 14, dead_or_set: 1
insn=58, live_throughout: 13, 14, dead_or_set: 0, 1
insn=60, live_throughout: 13, 14, 134, dead_or_set: 
insn=147, live_throughout: 13, 14, 134, dead_or_set: 139
insn=148, live_throughout: 13, 14, 134, 139, dead_or_set: 139
insn=64, live_throughout: 13, 14, 134, dead_or_set: 139
insn=65, live_throughout: 13, 14, 134, dead_or_set: 
insn=67, live_throughout: 13, dead_or_set: 0
insn=68, live_throughout: 0, 13, dead_or_set: 1
insn=69, live_throughout: 13, dead_or_set: 0, 1, 14
insn=70, live_throughout: 13, 14, dead_or_set: 0
insn=71, live_throughout: 0, 13, 14, dead_or_set: 1
insn=72, live_throughout: 13, 14, dead_or_set: 0, 1
insn=74, live_throughout: 13, 14, 134, dead_or_set: 
insn=145, live_throughout: 13, 14, 134, dead_or_set: 140
insn=146, live_throughout: 13, 14, 134, 140, dead_or_set: 140
insn=78, live_throughout: 13, 14, 134, dead_or_set: 140
insn=79, live_throughout: 13, 14, 134, dead_or_set: 
insn=81, live_throughout: 13, dead_or_set: 0
insn=82, live_throughout: 0, 13, dead_or_set: 1
insn=83, live_throughout: 13, dead_or_set: 0, 1, 14
insn=84, live_throughout: 13, 14, dead_or_set: 0
insn=85, live_throughout: 0, 13, 14, dead_or_set: 1
insn=86, live_throughout: 13, 14, dead_or_set: 0, 1
insn=88, live_throughout: 13, 14, 134, dead_or_set: 
insn=143, live_throughout: 13, 14, 134, dead_or_set: 141
insn=144, live_throughout: 13, 14, 134, 141, dead_or_set: 141
insn=92, live_throughout: 13, 14, 134, dead_or_set: 141
insn=93, live_throughout: 13, 14, 134, dead_or_set: 
insn=95, live_throughout: 13, dead_or_set: 0
insn=96, live_throughout: 0, 13, dead_or_set: 1
insn=97, live_throughout: 13, dead_or_set: 0, 1, 14
insn=98, live_throughout: 13, 14, dead_or_set: 0
insn=99, live_throughout: 0, 13, 14, dead_or_set: 1
insn=100, live_throughout: 13, 14, dead_or_set: 0, 1
insn=102, live_throughout: 13, 14, 134, dead_or_set: 
insn=141, live_throughout: 13, 14, 134, dead_or_set: 142
insn=142, live_throughout: 13, 14, 134, 142, dead_or_set: 142
insn=106, live_throughout: 13, 14, dead_or_set: 134, 142
insn=107, live_throughout: 13, 14, dead_or_set: 
insn=109, live_throughout: 13, dead_or_set: 0
insn=110, live_throughout: 0, 13, dead_or_set: 1
insn=111, live_throughout: 13, dead_or_set: 0, 1, 14
insn=112, live_throughout: 13, 14, dead_or_set: 0
insn=113, live_throughout: 0, 13, 14, dead_or_set: 1
insn=114, live_throughout: 13, 14, dead_or_set: 0, 1
insn=118, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 2
changing reg in insn 106
changing reg in insn 92
changing reg in insn 78
changing reg in insn 64
changing reg in insn 50
changing reg in insn 36
changing reg in insn 22
changing reg in insn 8
changing reg in insn 106
changing reg in insn 92
changing reg in insn 78
changing reg in insn 64
changing reg in insn 50
changing reg in insn 36
changing reg in insn 22
changing reg in insn 8
changing reg in insn 156
changing reg in insn 155
changing reg in insn 156
changing reg in insn 8
changing reg in insn 154
changing reg in insn 153
changing reg in insn 154
changing reg in insn 22
changing reg in insn 152
changing reg in insn 151
changing reg in insn 152
changing reg in insn 36
changing reg in insn 150
changing reg in insn 149
changing reg in insn 150
changing reg in insn 50
changing reg in insn 148
changing reg in insn 147
changing reg in insn 148
changing reg in insn 64
changing reg in insn 146
changing reg in insn 145
changing reg in insn 146
changing reg in insn 78
changing reg in insn 144
changing reg in insn 143
changing reg in insn 144
changing reg in insn 92
changing reg in insn 142
changing reg in insn 141
changing reg in insn 142
changing reg in insn 106
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 114.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 26 count 19 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 26 count 19 (    1)


USART_DeInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={33d,24u,8e} r1={33d,16u} r2={17d} r3={33d,16u} r12={16d} r13={1d,34u} r14={9d,1u} r15={16d} r16={16d} r17={16d} r18={16d} r19={16d} r20={16d} r21={16d} r22={16d} r23={16d} r24={24d,8u} r27={16d} r28={16d} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={16d} r38={16d} r39={16d} r40={16d} r41={16d} r42={16d} r43={16d} r44={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} r81={16d} r82={16d} r83={16d} r84={16d} r85={16d} r86={16d} r87={16d} r88={16d} r89={16d} r90={16d} r91={16d} r92={16d} r93={16d} r94={16d} r95={16d} r96={16d} r97={16d} r98={16d} r99={16d} r100={16d} r101={16d} r102={16d} r103={16d} r104={16d} r105={16d} r106={16d} r107={16d} r108={16d} r109={16d} r110={16d} r111={16d} r112={16d} r113={16d} r114={16d} r115={16d} r116={16d} r117={16d} r118={16d} r119={16d} r120={16d} r121={16d} r122={16d} r123={16d} r124={16d} r125={16d} r126={16d} r127={16d} 
;;    total ref usage 2033{1926d,99u,8e} in 80{64 regular + 16 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 155 2 NOTE_INSN_FUNCTION_BEG)

(insn 155 3 156 2 (set (reg:SI 3 r3 [135])
        (const_int 4096 [0x1000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:192 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 4096 [0x1000])
        (nil)))

(insn 156 155 8 2 (set (zero_extract:SI (reg:SI 3 r3 [135])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16385 [0x4001])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:192 342 {*arm_movtas_ze}
     (nil))

(insn 8 156 9 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (reg:SI 3 r3 [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:192 206 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (const_int 1073811456 [0x40011000]))
        (nil)))

(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:192 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
        (nil))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [4.4%]  (fallthru)
;; Succ edge  4 [95.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [4.4%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 (set (reg:SI 0 r0)
        (const_int 16 [0x10])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:194 709 {*thumb2_movsi_insn}
     (nil))

(insn 12 11 13 3 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:194 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 13 12 14 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB2PeriphResetCmd") [flags 0x41]  <function_decl 0x55c2c000 RCC_APB2PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:194 242 {*call_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 15 3 (set (reg:SI 0 r0)
        (const_int 16 [0x10])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:195 709 {*thumb2_movsi_insn}
     (nil))

(insn 15 14 16 3 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:195 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 16 15 17 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB2PeriphResetCmd") [flags 0x41]  <function_decl 0x55c2c000 RCC_APB2PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:195 246 {*sibcall_insn}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 17 16 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [95.6%] 
(code_label 18 17 19 4 2 "" [1 uses])

(note 19 18 153 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 153 19 154 4 (set (reg:SI 3 r3 [136])
        (const_int 17408 [0x4400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:197 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 17408 [0x4400])
        (nil)))

(insn 154 153 22 4 (set (zero_extract:SI (reg:SI 3 r3 [136])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16384 [0x4000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:197 342 {*arm_movtas_ze}
     (nil))

(insn 22 154 23 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (reg:SI 3 r3 [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:197 206 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (const_int 1073759232 [0x40004400]))
        (nil)))

(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:197 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
        (nil))
 -> 32)
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [4.4%]  (fallthru)
;; Succ edge  6 [95.6%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [4.4%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 (set (reg:SI 0 r0)
        (const_int 131072 [0x20000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:199 709 {*thumb2_movsi_insn}
     (nil))

(insn 26 25 27 5 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:199 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 27 26 28 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:199 242 {*call_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 28 27 29 5 (set (reg:SI 0 r0)
        (const_int 131072 [0x20000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:200 709 {*thumb2_movsi_insn}
     (nil))

(insn 29 28 30 5 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:200 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 30 29 31 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:200 246 {*sibcall_insn}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 31 30 32)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [95.6%] 
(code_label 32 31 33 6 3 "" [1 uses])

(note 33 32 151 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 151 33 152 6 (set (reg:SI 3 r3 [137])
        (const_int 18432 [0x4800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:202 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 18432 [0x4800])
        (nil)))

(insn 152 151 36 6 (set (zero_extract:SI (reg:SI 3 r3 [137])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16384 [0x4000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:202 342 {*arm_movtas_ze}
     (nil))

(insn 36 152 37 6 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (reg:SI 3 r3 [137]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:202 206 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (const_int 1073760256 [0x40004800]))
        (nil)))

(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:202 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
        (nil))
 -> 46)
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  7 [4.4%]  (fallthru)
;; Succ edge  8 [95.6%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  6 [4.4%]  (fallthru)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 7 (set (reg:SI 0 r0)
        (const_int 262144 [0x40000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:204 709 {*thumb2_movsi_insn}
     (nil))

(insn 40 39 41 7 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:204 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 41 40 42 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:204 242 {*call_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 42 41 43 7 (set (reg:SI 0 r0)
        (const_int 262144 [0x40000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:205 709 {*thumb2_movsi_insn}
     (nil))

(insn 43 42 44 7 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:205 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 44 43 45 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:205 246 {*sibcall_insn}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 45 44 46)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  6 [95.6%] 
(code_label 46 45 47 8 4 "" [1 uses])

(note 47 46 149 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 149 47 150 8 (set (reg:SI 3 r3 [138])
        (const_int 19456 [0x4c00])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:207 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 19456 [0x4c00])
        (nil)))

(insn 150 149 50 8 (set (zero_extract:SI (reg:SI 3 r3 [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16384 [0x4000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:207 342 {*arm_movtas_ze}
     (nil))

(insn 50 150 51 8 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (reg:SI 3 r3 [138]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:207 206 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (const_int 1073761280 [0x40004c00]))
        (nil)))

(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:207 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
        (nil))
 -> 60)
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  9 [4.4%]  (fallthru)
;; Succ edge  10 [95.6%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  8 [4.4%]  (fallthru)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 9 (set (reg:SI 0 r0)
        (const_int 524288 [0x80000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:209 709 {*thumb2_movsi_insn}
     (nil))

(insn 54 53 55 9 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:209 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 55 54 56 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:209 242 {*call_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 56 55 57 9 (set (reg:SI 0 r0)
        (const_int 524288 [0x80000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:210 709 {*thumb2_movsi_insn}
     (nil))

(insn 57 56 58 9 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:210 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 58 57 59 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:210 246 {*sibcall_insn}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 59 58 60)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [95.6%] 
(code_label 60 59 61 10 5 "" [1 uses])

(note 61 60 147 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 147 61 148 10 (set (reg:SI 3 r3 [139])
        (const_int 20480 [0x5000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:212 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 20480 [0x5000])
        (nil)))

(insn 148 147 64 10 (set (zero_extract:SI (reg:SI 3 r3 [139])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16384 [0x4000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:212 342 {*arm_movtas_ze}
     (nil))

(insn 64 148 65 10 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (reg:SI 3 r3 [139]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:212 206 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (const_int 1073762304 [0x40005000]))
        (nil)))

(jump_insn 65 64 66 10 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:212 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
        (nil))
 -> 74)
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  11 [4.4%]  (fallthru)
;; Succ edge  12 [95.6%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  10 [4.4%]  (fallthru)
(note 66 65 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 11 (set (reg:SI 0 r0)
        (const_int 1048576 [0x100000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:214 709 {*thumb2_movsi_insn}
     (nil))

(insn 68 67 69 11 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:214 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 69 68 70 11 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:214 242 {*call_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 70 69 71 11 (set (reg:SI 0 r0)
        (const_int 1048576 [0x100000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:215 709 {*thumb2_movsi_insn}
     (nil))

(insn 71 70 72 11 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:215 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 72 71 73 11 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:215 246 {*sibcall_insn}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 11 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 73 72 74)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [95.6%] 
(code_label 74 73 75 12 6 "" [1 uses])

(note 75 74 145 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 145 75 146 12 (set (reg:SI 3 r3 [140])
        (const_int 5120 [0x1400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:217 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 5120 [0x1400])
        (nil)))

(insn 146 145 78 12 (set (zero_extract:SI (reg:SI 3 r3 [140])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16385 [0x4001])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:217 342 {*arm_movtas_ze}
     (nil))

(insn 78 146 79 12 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (reg:SI 3 r3 [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:217 206 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (const_int 1073812480 [0x40011400]))
        (nil)))

(jump_insn 79 78 80 12 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:217 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
        (nil))
 -> 88)
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  13 [4.4%]  (fallthru)
;; Succ edge  14 [95.6%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  12 [4.4%]  (fallthru)
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 13 (set (reg:SI 0 r0)
        (const_int 32 [0x20])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:219 709 {*thumb2_movsi_insn}
     (nil))

(insn 82 81 83 13 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:219 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 83 82 84 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB2PeriphResetCmd") [flags 0x41]  <function_decl 0x55c2c000 RCC_APB2PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:219 242 {*call_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 84 83 85 13 (set (reg:SI 0 r0)
        (const_int 32 [0x20])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:220 709 {*thumb2_movsi_insn}
     (nil))

(insn 85 84 86 13 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:220 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 86 85 87 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB2PeriphResetCmd") [flags 0x41]  <function_decl 0x55c2c000 RCC_APB2PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:220 246 {*sibcall_insn}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 13 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 87 86 88)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  12 [95.6%] 
(code_label 88 87 89 14 7 "" [1 uses])

(note 89 88 143 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 143 89 144 14 (set (reg:SI 3 r3 [141])
        (const_int 30720 [0x7800])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:222 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 30720 [0x7800])
        (nil)))

(insn 144 143 92 14 (set (zero_extract:SI (reg:SI 3 r3 [141])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16384 [0x4000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:222 342 {*arm_movtas_ze}
     (nil))

(insn 92 144 93 14 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (reg:SI 3 r3 [141]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:222 206 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (const_int 1073772544 [0x40007800]))
        (nil)))

(jump_insn 93 92 94 14 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:222 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
        (nil))
 -> 102)
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  15 [4.4%]  (fallthru)
;; Succ edge  16 [95.6%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  14 [4.4%]  (fallthru)
(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 15 (set (reg:SI 0 r0)
        (const_int 1073741824 [0x40000000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:224 709 {*thumb2_movsi_insn}
     (nil))

(insn 96 95 97 15 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:224 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 97 96 98 15 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:224 242 {*call_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 98 97 99 15 (set (reg:SI 0 r0)
        (const_int 1073741824 [0x40000000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:225 709 {*thumb2_movsi_insn}
     (nil))

(insn 99 98 100 15 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:225 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 100 99 101 15 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:225 246 {*sibcall_insn}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 15 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 101 100 102)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [95.6%] 
(code_label 102 101 103 16 8 "" [1 uses])

(note 103 102 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 141 103 142 16 (set (reg:SI 3 r3 [142])
        (const_int 31744 [0x7c00])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:229 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 31744 [0x7c00])
        (nil)))

(insn 142 141 106 16 (set (zero_extract:SI (reg:SI 3 r3 [142])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16384 [0x4000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:229 342 {*arm_movtas_ze}
     (nil))

(insn 106 142 107 16 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (reg:SI 3 r3 [142]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:229 206 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 0 r0 [orig:134 USARTx ] [134])
            (const_int 1073773568 [0x40007c00]))
        (nil)))

(jump_insn 107 106 108 16 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 118)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:229 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 8987 [0x231b])
        (nil))
 -> 118)
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  17 [10.1%]  (fallthru)
;; Succ edge  18 [89.9%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  16 [10.1%]  (fallthru)
(note 108 107 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 17 (set (reg:SI 0 r0)
        (const_int -2147483648 [0xffffffff80000000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:231 709 {*thumb2_movsi_insn}
     (nil))

(insn 110 109 111 17 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:231 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 111 110 112 17 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:231 242 {*call_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 112 111 113 17 (set (reg:SI 0 r0)
        (const_int -2147483648 [0xffffffff80000000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:232 709 {*thumb2_movsi_insn}
     (nil))

(insn 113 112 114 17 (set (reg:SI 1 r1)
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:232 709 {*thumb2_movsi_insn}
     (nil))

(call_insn/j 114 113 115 17 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_APB1PeriphResetCmd") [flags 0x41]  <function_decl 0x55c25f80 RCC_APB1PeriphResetCmd>) [0 S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:232 246 {*sibcall_insn}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 17 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 115 114 118)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  16 [89.9%] 
(code_label 118 115 119 18 1 "" [1 uses])

(note 119 118 157 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 18 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 157 119 158 NOTE_INSN_DELETED)

(note 158 157 0 NOTE_INSN_DELETED)


;; Function USART_Init (USART_Init)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 163.
verify found no changes in insn with uid = 163.
deleting insn with uid = 102.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 12 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 12 (    1)
Reg 219: def dominates all uses has unique first use
Reg 221: local to bb 2 def dominates all uses has unique first use
Reg 222: local to bb 2 def dominates all uses has unique first use
Ignoring reg 227, has equiv memory
Ignoring reg 228, has equiv memory
Ignoring reg 231, has equiv memory
Reg 237: local to bb 2 def dominates all uses has unique first use
Reg 143 uninteresting
Reg 225 uninteresting
Reg 229: local to bb 2 def dominates all uses has unique first use
Reg 232: local to bb 2 def dominates all uses has unique first use
Reg 233 uninteresting
Reg 154 uninteresting
Reg 236 uninteresting
Reg 161 uninteresting
Reg 250 uninteresting
Reg 251 uninteresting
Reg 258: local to bb 6 def dominates all uses has unique first use
Reg 254 uninteresting
Reg 256: local to bb 6 def dominates all uses has unique first use
Reg 257 uninteresting
Reg 265: local to bb 7 def dominates all uses has unique first use
Reg 261 uninteresting
Reg 263: local to bb 7 def dominates all uses has unique first use
Reg 264 uninteresting
Reg 272: local to bb 8 def dominates all uses has unique first use
Reg 267 uninteresting
Reg 266: local to bb 8 def dominates all uses has unique first use
Reg 273: local to bb 8 def dominates all uses has unique first use
Reg 174 uninteresting (no unique first use)
Reg 271 uninteresting
Reg 177 uninteresting (no unique first use)
Reg 274 uninteresting
Reg 277 uninteresting
Reg 279 uninteresting
Reg 280 uninteresting
Reg 283 uninteresting
Reg 285 uninteresting
Reg 188 uninteresting
Reg 219 not local to one basic block
Found def insn 7 for 221 to be not moveable
Found def insn 11 for 222 to be not moveable
Examining insn 23, def for 229
  found unusable input reg 227.
Examining insn 26, def for 232
  found unusable input reg 231.
Found def insn 36 for 237 to be not moveable
Examining insn 78, def for 256
  all ok
Found def insn 79 for 258 to be not moveable
Examining insn 90, def for 263
  all ok
Found def insn 91 for 265 to be not moveable
Examining insn 99, def for 266
  all ok
Found def insn 105 for 272 to be not moveable
Examining insn 107, def for 273
  all ok
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 227: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 228: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 231: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 271: (insn_list:REG_DEP_TRUE 163 (nil))

Pass 0 for finding pseudo/allocno costs

    a4 (r285,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r283,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r281,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r280,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r279,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r277,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r275,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r274,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r273,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r272,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r271,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r268,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r267,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r266,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r265,l0) best LO_REGS, cover GENERAL_REGS
    a20 (r264,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r263,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r261,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r258,l0) best LO_REGS, cover GENERAL_REGS
    a26 (r257,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r256,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r254,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r251,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r250,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r249,l0) best LO_REGS, cover GENERAL_REGS
    a35 (r246,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r245,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r243,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r237,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r236,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r233,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r232,l0) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r231,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r229,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r228,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r227,l0) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r225,l0) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r222,l0) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r221,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r220,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r219,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a1(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a3(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a4(r285,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16160
  a5(r283,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16160
  a6(r268,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:69990
  a7(r281,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16160
  a8(r280,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16160
  a9(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a10(r279,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a11(r277,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a12(r275,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a13(r274,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a14(r273,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r271,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r266,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a18(r272,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r267,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r264,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:14600
  a21(r263,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:14600
  a22(r265,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1460,1460 GENERAL_REGS:1460,1460 MEM:14600
  a23(r261,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:21900
  a24(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:30000
  a25(r220,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a26(r257,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5400
  a27(r256,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5400
  a28(r258,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:540,540 GENERAL_REGS:540,540 MEM:5400
  a29(r254,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:8100
  a30(r251,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r250,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r249,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a33(r245,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r243,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a35(r246,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a36(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r237,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a38(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a39(r236,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a40(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a42(r233,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r232,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r231,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r229,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r228,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a47(r227,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a48(r225,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r222,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a51(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a52(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r285: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r265: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r258: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r249: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a1(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a3(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a4(r285,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16160
  a5(r283,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16160
  a6(r268,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:69990
  a7(r281,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16160
  a8(r280,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:16160
  a9(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a10(r279,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a11(r277,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a12(r275,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a13(r274,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a14(r273,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r271,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r266,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a18(r272,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r267,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r264,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:14600
  a21(r263,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:14600
  a22(r265,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1460,1460 GENERAL_REGS:1460,1460 MEM:14600
  a23(r261,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:21900
  a24(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:30000
  a25(r220,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a26(r257,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5400
  a27(r256,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5400
  a28(r258,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:540,540 GENERAL_REGS:540,540 MEM:5400
  a29(r254,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:8100
  a30(r251,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r250,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r249,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a33(r245,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r243,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a35(r246,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a36(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r237,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a38(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a39(r236,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a40(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a42(r233,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r232,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r231,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r229,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r228,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a47(r227,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a48(r225,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r222,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a51(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a52(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 135(l0): point = 0
   Insn 138(l0): point = 2
   Insn 130(l0): point = 5
   Insn 129(l0): point = 7
   Insn 127(l0): point = 9
   Insn 124(l0): point = 11
   Insn 123(l0): point = 13
   Insn 143(l0): point = 16
   Insn 118(l0): point = 18
   Insn 117(l0): point = 20
   Insn 115(l0): point = 22
   Insn 112(l0): point = 24
   Insn 111(l0): point = 26
   Insn 109(l0): point = 29
   Insn 108(l0): point = 31
   Insn 104(l0): point = 33
   Insn 163(l0): point = 35
   Insn 101(l0): point = 37
   Insn 107(l0): point = 39
   Insn 99(l0): point = 41
   Insn 98(l0): point = 43
   Insn 146(l0): point = 45
   Insn 105(l0): point = 47
   Insn 145(l0): point = 49
   Insn 93(l0): point = 52
   Insn 92(l0): point = 54
   Insn 90(l0): point = 56
   Insn 88(l0): point = 58
   Insn 91(l0): point = 60
   Insn 141(l0): point = 63
   Insn 81(l0): point = 65
   Insn 80(l0): point = 67
   Insn 78(l0): point = 69
   Insn 76(l0): point = 71
   Insn 79(l0): point = 73
   Insn 72(l0): point = 76
   Insn 71(l0): point = 78
   Insn 70(l0): point = 80
   Insn 68(l0): point = 82
   Insn 65(l0): point = 85
   Insn 139(l0): point = 88
   Insn 60(l0): point = 90
   Insn 58(l0): point = 93
   Insn 56(l0): point = 95
   Insn 52(l0): point = 97
   Insn 159(l0): point = 99
   Insn 161(l0): point = 101
   Insn 158(l0): point = 103
   Insn 160(l0): point = 105
   Insn 43(l0): point = 107
   Insn 42(l0): point = 109
   Insn 40(l0): point = 111
   Insn 38(l0): point = 113
   Insn 157(l0): point = 115
   Insn 156(l0): point = 117
   Insn 155(l0): point = 119
   Insn 32(l0): point = 121
   Insn 31(l0): point = 123
   Insn 29(l0): point = 125
   Insn 27(l0): point = 127
   Insn 154(l0): point = 129
   Insn 26(l0): point = 131
   Insn 153(l0): point = 133
   Insn 23(l0): point = 135
   Insn 152(l0): point = 137
   Insn 151(l0): point = 139
   Insn 16(l0): point = 141
   Insn 15(l0): point = 143
   Insn 13(l0): point = 145
   Insn 150(l0): point = 147
   Insn 149(l0): point = 149
   Insn 148(l0): point = 151
   Insn 36(l0): point = 153
   Insn 25(l0): point = 155
   Insn 22(l0): point = 157
   Insn 21(l0): point = 159
   Insn 11(l0): point = 161
   Insn 7(l0): point = 163
   Insn 3(l0): point = 165
   Insn 2(l0): point = 167
 a0(r219): [1..167]
 a1(r188): [1..2]
 a2(r134): [16..18] [3..5]
 a3(r174): [19..37] [6..15]
 a4(r285): [6..7]
 a5(r283): [8..9]
 a6(r268): [23..49] [10..15]
 a7(r281): [10..11]
 a8(r280): [12..13]
 a9(r177): [27..33] [14..15]
 a10(r279): [19..20]
 a11(r277): [21..22]
 a12(r275): [23..24]
 a13(r274): [25..26]
 a14(r273): [32..39]
 a15(r271): [34..35]
 a16(r266): [34..41]
 a17(r136): [63..65] [34..52]
 a18(r272): [40..47]
 a19(r267): [42..43]
 a20(r264): [53..54]
 a21(r263): [53..56]
 a22(r265): [55..60]
 a23(r261): [57..58]
 a24(r135): [88..90] [72..85] [59..62]
 a25(r220): [74..165] [61..62]
 a26(r257): [66..67]
 a27(r256): [66..69]
 a28(r258): [68..73]
 a29(r254): [70..71]
 a30(r251): [79..80]
 a31(r250): [81..82]
 a32(r249): [94..95]
 a33(r245): [96..97]
 a34(r243): [96..103]
 a35(r246): [98..105]
 a36(r161): [112..113]
 a37(r237): [114..153]
 a38(r157): [114..119]
 a39(r236): [120..121]
 a40(r154): [124..125]
 a41(r146): [126..139]
 a42(r233): [126..127]
 a43(r232): [128..131]
 a44(r231): [132..155]
 a45(r229): [132..135]
 a46(r228): [136..157]
 a47(r227): [136..159]
 a48(r225): [140..141]
 a49(r143): [144..145]
 a50(r222): [146..161]
 a51(r139): [146..151]
 a52(r221): [152..163]
Compressing live ranges: from 170 to 88 - 51%
Ranges after the compression:
 a0(r219): [0..87]
 a1(r188): [0..1]
 a2(r134): [14..15] [2..3]
 a3(r174): [16..27] [4..13]
 a4(r285): [4..5]
 a5(r283): [6..7]
 a6(r268): [20..31] [8..13]
 a7(r281): [8..9]
 a8(r280): [10..11]
 a9(r177): [24..25] [12..13]
 a10(r279): [16..17]
 a11(r277): [18..19]
 a12(r275): [20..21]
 a13(r274): [22..23]
 a14(r273): [24..27]
 a15(r271): [26..27]
 a16(r266): [26..29]
 a17(r136): [42..43] [26..31]
 a18(r272): [28..31]
 a19(r267): [30..31]
 a20(r264): [32..33]
 a21(r263): [32..35]
 a22(r265): [34..39]
 a23(r261): [36..37]
 a24(r135): [56..57] [50..55] [38..41]
 a25(r220): [52..87] [40..41]
 a26(r257): [44..45]
 a27(r256): [44..47]
 a28(r258): [46..51]
 a29(r254): [48..49]
 a30(r251): [52..53]
 a31(r250): [54..55]
 a32(r249): [58..59]
 a33(r245): [60..61]
 a34(r243): [60..63]
 a35(r246): [62..63]
 a36(r161): [64..65]
 a37(r237): [66..87]
 a38(r157): [66..67]
 a39(r236): [68..69]
 a40(r154): [70..71]
 a41(r146): [72..79]
 a42(r233): [72..73]
 a43(r232): [74..75]
 a44(r231): [76..87]
 a45(r229): [76..77]
 a46(r228): [78..87]
 a47(r227): [78..87]
 a48(r225): [80..81]
 a49(r143): [82..83]
 a50(r222): [84..87]
 a51(r139): [84..85]
 a52(r221): [86..87]
+++Allocating 424 bytes for conflict table (uncompressed size 424)
;; a0(r219,l0) conflicts: a1(r188,l0) a2(r134,l0) a4(r285,l0) a3(r174,l0) a5(r283,l0) a7(r281,l0) a6(r268,l0) a8(r280,l0) a9(r177,l0) a10(r279,l0) a11(r277,l0) a12(r275,l0) a13(r274,l0) a14(r273,l0) a15(r271,l0) a16(r266,l0) a17(r136,l0) a18(r272,l0) a19(r267,l0) a20(r264,l0) a21(r263,l0) a22(r265,l0) a23(r261,l0) a24(r135,l0) a25(r220,l0) a26(r257,l0) a27(r256,l0) a28(r258,l0) a29(r254,l0) a30(r251,l0) a31(r250,l0) a32(r249,l0) a33(r245,l0) a34(r243,l0) a35(r246,l0) a36(r161,l0) a38(r157,l0) a37(r237,l0) a39(r236,l0) a40(r154,l0) a42(r233,l0) a41(r146,l0) a43(r232,l0) a45(r229,l0) a44(r231,l0) a46(r228,l0) a47(r227,l0) a48(r225,l0) a49(r143,l0) a51(r139,l0) a50(r222,l0) a52(r221,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

;; a1(r188,l0) conflicts: a0(r219,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r134,l0) conflicts: a0(r219,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r174,l0) conflicts: a0(r219,l0) a4(r285,l0) a5(r283,l0) a7(r281,l0) a6(r268,l0) a8(r280,l0) a9(r177,l0) a10(r279,l0) a11(r277,l0) a12(r275,l0) a13(r274,l0) a14(r273,l0) a15(r271,l0) a16(r266,l0) a17(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r285,l0) conflicts: a0(r219,l0) a3(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r283,l0) conflicts: a0(r219,l0) a3(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r268,l0) conflicts: a0(r219,l0) a3(r174,l0) a7(r281,l0) a8(r280,l0) a9(r177,l0) a12(r275,l0) a13(r274,l0) a14(r273,l0) a15(r271,l0) a16(r266,l0) a17(r136,l0) a18(r272,l0) a19(r267,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r281,l0) conflicts: a0(r219,l0) a3(r174,l0) a6(r268,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a8(r280,l0) conflicts: a0(r219,l0) a3(r174,l0) a6(r268,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a9(r177,l0) conflicts: a0(r219,l0) a3(r174,l0) a6(r268,l0) a14(r273,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a10(r279,l0) conflicts: a0(r219,l0) a3(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a11(r277,l0) conflicts: a0(r219,l0) a3(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a12(r275,l0) conflicts: a0(r219,l0) a3(r174,l0) a6(r268,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a13(r274,l0) conflicts: a0(r219,l0) a3(r174,l0) a6(r268,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a14(r273,l0) conflicts: a0(r219,l0) a3(r174,l0) a6(r268,l0) a9(r177,l0) a15(r271,l0) a16(r266,l0) a17(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a15(r271,l0) conflicts: a0(r219,l0) a3(r174,l0) a6(r268,l0) a14(r273,l0) a16(r266,l0) a17(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a16(r266,l0) conflicts: a0(r219,l0) a3(r174,l0) a6(r268,l0) a14(r273,l0) a15(r271,l0) a17(r136,l0) a18(r272,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a17(r136,l0) conflicts: a0(r219,l0) a3(r174,l0) a6(r268,l0) a14(r273,l0) a15(r271,l0) a16(r266,l0) a18(r272,l0) a19(r267,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a18(r272,l0) conflicts: a0(r219,l0) a6(r268,l0) a16(r266,l0) a17(r136,l0) a19(r267,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a19(r267,l0) conflicts: a0(r219,l0) a6(r268,l0) a17(r136,l0) a18(r272,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a20(r264,l0) conflicts: a0(r219,l0) a21(r263,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a21(r263,l0) conflicts: a0(r219,l0) a20(r264,l0) a22(r265,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a22(r265,l0) conflicts: a0(r219,l0) a21(r263,l0) a23(r261,l0) a24(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a23(r261,l0) conflicts: a0(r219,l0) a22(r265,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a24(r135,l0) conflicts: a0(r219,l0) a22(r265,l0) a25(r220,l0) a28(r258,l0) a30(r251,l0) a31(r250,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a25(r220,l0) conflicts: a0(r219,l0) a24(r135,l0) a30(r251,l0) a31(r250,l0) a32(r249,l0) a33(r245,l0) a34(r243,l0) a35(r246,l0) a36(r161,l0) a38(r157,l0) a37(r237,l0) a39(r236,l0) a40(r154,l0) a42(r233,l0) a41(r146,l0) a43(r232,l0) a45(r229,l0) a44(r231,l0) a46(r228,l0) a47(r227,l0) a48(r225,l0) a49(r143,l0) a51(r139,l0) a50(r222,l0) a52(r221,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a26(r257,l0) conflicts: a0(r219,l0) a27(r256,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a27(r256,l0) conflicts: a0(r219,l0) a26(r257,l0) a28(r258,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a28(r258,l0) conflicts: a0(r219,l0) a24(r135,l0) a27(r256,l0) a29(r254,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a29(r254,l0) conflicts: a0(r219,l0) a28(r258,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a30(r251,l0) conflicts: a0(r219,l0) a24(r135,l0) a25(r220,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a31(r250,l0) conflicts: a0(r219,l0) a24(r135,l0) a25(r220,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a32(r249,l0) conflicts: a0(r219,l0) a25(r220,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a33(r245,l0) conflicts: a0(r219,l0) a25(r220,l0) a34(r243,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a34(r243,l0) conflicts: a0(r219,l0) a25(r220,l0) a33(r245,l0) a35(r246,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a35(r246,l0) conflicts: a0(r219,l0) a25(r220,l0) a34(r243,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a36(r161,l0) conflicts: a0(r219,l0) a25(r220,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r237,l0) conflicts: a0(r219,l0) a25(r220,l0) a38(r157,l0) a39(r236,l0) a40(r154,l0) a42(r233,l0) a41(r146,l0) a43(r232,l0) a45(r229,l0) a44(r231,l0) a46(r228,l0) a47(r227,l0) a48(r225,l0) a49(r143,l0) a51(r139,l0) a50(r222,l0) a52(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r157,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r236,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r154,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r146,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a42(r233,l0) a43(r232,l0) a45(r229,l0) a44(r231,l0) a46(r228,l0) a47(r227,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r233,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a41(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r232,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a41(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r231,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a41(r146,l0) a45(r229,l0) a46(r228,l0) a47(r227,l0) a48(r225,l0) a49(r143,l0) a51(r139,l0) a50(r222,l0) a52(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r229,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a41(r146,l0) a44(r231,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r228,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a41(r146,l0) a44(r231,l0) a47(r227,l0) a48(r225,l0) a49(r143,l0) a51(r139,l0) a50(r222,l0) a52(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r227,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a41(r146,l0) a44(r231,l0) a46(r228,l0) a48(r225,l0) a49(r143,l0) a51(r139,l0) a50(r222,l0) a52(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r225,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a44(r231,l0) a46(r228,l0) a47(r227,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r143,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a44(r231,l0) a46(r228,l0) a47(r227,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r222,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a44(r231,l0) a46(r228,l0) a47(r227,l0) a51(r139,l0) a52(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r139,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a44(r231,l0) a46(r228,l0) a47(r227,l0) a50(r222,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r221,l0) conflicts: a0(r219,l0) a25(r220,l0) a37(r237,l0) a44(r231,l0) a46(r228,l0) a47(r227,l0) a50(r222,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r188)<->a2(r134)@1000:move
  cp1:a8(r280)<->a9(r177)@101:shuffle
  cp2:a7(r281)<->a8(r280)@101:shuffle
  cp3:a5(r283)<->a7(r281)@101:shuffle
  cp4:a5(r283)<->a6(r268)@101:shuffle
  cp5:a4(r285)<->a5(r283)@101:shuffle
  cp6:a2(r134)<->a4(r285)@101:shuffle
  cp7:a2(r134)<->a3(r174)@124:shuffle
  cp8:a9(r177)<->a13(r274)@23:shuffle
  cp9:a12(r275)<->a13(r274)@23:shuffle
  cp10:a11(r277)<->a12(r275)@23:shuffle
  cp11:a6(r268)<->a11(r277)@23:shuffle
  cp12:a10(r279)<->a11(r277)@23:shuffle
  cp13:a2(r134)<->a10(r279)@23:shuffle
  cp14:a16(r266)<->a19(r267)@125:shuffle
  cp15:a14(r273)<->a18(r272)@125:shuffle
  cp16:a9(r177)<->a15(r271)@125:shuffle
  cp17:a9(r177)<->a16(r266)@125:shuffle
  cp18:a9(r177)<->a17(r136)@125:shuffle
  cp19:a23(r261)<->a24(r135)@182:shuffle
  cp20:a21(r263)<->a23(r261)@182:shuffle
  cp21:a20(r264)<->a22(r265)@91:shuffle
  cp22:a17(r136)<->a21(r263)@91:shuffle
  cp23:a17(r136)<->a20(r264)@91:shuffle
  cp24:a24(r135)<->a29(r254)@66:shuffle
  cp25:a27(r256)<->a29(r254)@66:shuffle
  cp26:a26(r257)<->a28(r258)@33:shuffle
  cp27:a17(r136)<->a27(r256)@33:shuffle
  cp28:a17(r136)<->a26(r257)@33:shuffle
  cp29:a30(r251)<->a31(r250)@125:shuffle
  cp30:a51(r139)<->a52(r221)@125:shuffle
  cp31:a49(r143)<->a51(r139)@125:shuffle
  cp32:a49(r143)<->a50(r222)@125:shuffle
  cp33:a41(r146)<->a48(r225)@125:shuffle
  cp34:a45(r229)<->a47(r227)@125:shuffle
  cp35:a45(r229)<->a46(r228)@125:shuffle
  cp36:a43(r232)<->a45(r229)@125:shuffle
  cp37:a43(r232)<->a44(r231)@125:shuffle
  cp38:a42(r233)<->a43(r232)@125:shuffle
  cp39:a40(r154)<->a42(r233)@125:shuffle
  cp40:a40(r154)<->a41(r146)@125:shuffle
  cp41:a38(r157)<->a39(r236)@125:shuffle
  cp42:a36(r161)<->a38(r157)@125:shuffle
  cp43:a36(r161)<->a37(r237)@125:shuffle
  cp44:a33(r245)<->a35(r246)@125:shuffle
  cp45:a32(r249)<->a33(r245)@125:shuffle
  cp46:a32(r249)<->a34(r243)@125:shuffle
  regions=1, blocks=12, points=88
    allocnos=53 (big 0), copies=47, conflicts=2, ranges=61

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r219 1r188 2r134 3r174 4r285 5r283 6r268 7r281 8r280 9r177 10r279 11r277 12r275 13r274 14r273 15r271 16r266 17r136 18r272 19r267 20r264 21r263 22r265 23r261 24r135 25r220 26r257 27r256 28r258 29r254 30r251 31r250 32r249 33r245 34r243 35r246 36r161 37r237 38r157 39r236 40r154 41r146 42r233 43r232 44r231 45r229 46r228 47r227 48r225 49r143 50r222 51r139 52r221
    modified regnos: 134 135 136 139 143 146 154 157 161 174 177 188 219 220 221 222 225 227 228 229 231 232 233 236 237 243 245 246 249 250 251 254 256 257 258 261 263 264 265 266 267 268 271 272 273 274 275 277 279 280 281 283 285
    border:
    Pressure: GENERAL_REGS=8
    Reg 219 of GENERAL_REGS has 3 regs less
    Reg 188 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 174 of GENERAL_REGS has 1 regs less
    Reg 285 of GENERAL_REGS has 1 regs less
    Reg 283 of GENERAL_REGS has 1 regs less
    Reg 268 of GENERAL_REGS has 1 regs less
    Reg 281 of GENERAL_REGS has 1 regs less
    Reg 280 of GENERAL_REGS has 1 regs less
    Reg 177 of GENERAL_REGS has 1 regs less
    Reg 279 of GENERAL_REGS has 1 regs less
    Reg 277 of GENERAL_REGS has 1 regs less
    Reg 275 of GENERAL_REGS has 1 regs less
    Reg 274 of GENERAL_REGS has 1 regs less
    Reg 273 of GENERAL_REGS has 1 regs less
    Reg 271 of GENERAL_REGS has 1 regs less
    Reg 266 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 272 of GENERAL_REGS has 1 regs less
    Reg 267 of GENERAL_REGS has 1 regs less
    Reg 264 of GENERAL_REGS has 1 regs less
    Reg 263 of GENERAL_REGS has 1 regs less
    Reg 265 of GENERAL_REGS has 1 regs less
    Reg 261 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 220 of GENERAL_REGS has 2 regs less
    Reg 257 of GENERAL_REGS has 1 regs less
    Reg 256 of GENERAL_REGS has 1 regs less
    Reg 258 of GENERAL_REGS has 1 regs less
    Reg 254 of GENERAL_REGS has 1 regs less
    Reg 251 of GENERAL_REGS has 1 regs less
    Reg 250 of GENERAL_REGS has 1 regs less
    Reg 249 of GENERAL_REGS has 1 regs less
    Reg 245 of GENERAL_REGS has 1 regs less
    Reg 243 of GENERAL_REGS has 1 regs less
    Reg 246 of GENERAL_REGS has 1 regs less
      Pushing a52(r221,l0)
      Pushing a50(r222,l0)
      Pushing a49(r143,l0)
      Pushing a48(r225,l0)
      Pushing a47(r227,l0)
      Pushing a46(r228,l0)
      Pushing a45(r229,l0)
      Pushing a44(r231,l0)
      Pushing a43(r232,l0)
      Pushing a42(r233,l0)
      Pushing a40(r154,l0)
      Pushing a39(r236,l0)
      Pushing a37(r237,l0)
      Pushing a36(r161,l0)
      Pushing a51(r139,l0)
      Pushing a38(r157,l0)
      Pushing a41(r146,l0)
      Pushing a13(r274,l0)
      Pushing a12(r275,l0)
      Pushing a11(r277,l0)
      Pushing a10(r279,l0)
      Pushing a28(r258,l0)
      Pushing a27(r256,l0)
      Pushing a26(r257,l0)
      Pushing a29(r254,l0)
      Pushing a22(r265,l0)
      Pushing a21(r263,l0)
      Pushing a20(r264,l0)
      Pushing a8(r280,l0)
      Pushing a7(r281,l0)
      Pushing a5(r283,l0)
      Pushing a4(r285,l0)
      Pushing a9(r177,l0)
      Pushing a3(r174,l0)
      Pushing a2(r134,l0)
      Pushing a33(r245,l0)
      Pushing a32(r249,l0)
      Pushing a31(r250,l0)
      Pushing a30(r251,l0)
      Pushing a19(r267,l0)
      Pushing a18(r272,l0)
      Pushing a15(r271,l0)
      Pushing a14(r273,l0)
      Pushing a1(r188,l0)
      Pushing a23(r261,l0)
      Pushing a35(r246,l0)
      Pushing a34(r243,l0)
      Pushing a24(r135,l0)
      Pushing a17(r136,l0)
      Pushing a16(r266,l0)
      Pushing a6(r268,l0)
      Pushing a25(r220,l0)
      Pushing a0(r219,l0)
      Popping a0(r219,l0)  -- assign reg 4
      Popping a25(r220,l0)  -- assign reg 5
      Popping a6(r268,l0)  -- assign reg 3
      Popping a16(r266,l0)  -- assign reg 2
      Popping a17(r136,l0)  -- assign reg 1
      Popping a24(r135,l0)  -- assign reg 3
      Popping a34(r243,l0)  -- assign reg 3
      Popping a35(r246,l0)  -- assign reg 2
      Popping a23(r261,l0)  -- assign reg 3
      Popping a1(r188,l0)  -- assign reg 3
      Popping a14(r273,l0)  -- assign reg 0
      Popping a15(r271,l0)  -- assign reg 5
      Popping a18(r272,l0)  -- assign reg 0
      Popping a19(r267,l0)  -- assign reg 2
      Popping a30(r251,l0)  -- assign reg 2
      Popping a31(r250,l0)  -- assign reg 2
      Popping a32(r249,l0)  -- assign reg 3
      Popping a33(r245,l0)  -- assign reg 2
      Popping a2(r134,l0)  -- assign reg 3
      Popping a3(r174,l0)  -- assign reg 6
      Popping a9(r177,l0)  -- assign reg 2
      Popping a4(r285,l0)  -- assign reg 3
      Popping a5(r283,l0)  -- assign reg 3
      Popping a7(r281,l0)  -- assign reg 2
      Popping a8(r280,l0)  -- assign reg 2
      Popping a20(r264,l0)  -- assign reg 0
      Popping a21(r263,l0)  -- assign reg 3
      Popping a22(r265,l0)  -- assign reg 0
      Popping a29(r254,l0)  -- assign reg 3
      Popping a26(r257,l0)  -- assign reg 2
      Popping a27(r256,l0)  -- assign reg 3
      Popping a28(r258,l0)  -- assign reg 2
      Popping a10(r279,l0)  -- assign reg 3
      Popping a11(r277,l0)  -- assign reg 3
      Popping a12(r275,l0)  -- assign reg 2
      Popping a13(r274,l0)  -- assign reg 2
      Popping a41(r146,l0)  -- assign reg 3
      Popping a38(r157,l0)  -- assign reg 3
      Popping a51(r139,l0)  -- assign reg 2
      Popping a36(r161,l0)  -- assign reg 3
      Popping a37(r237,l0)  -- assign reg 1
      Popping a39(r236,l0)  -- assign reg 3
      Popping a40(r154,l0)  -- assign reg 3
      Popping a42(r233,l0)  -- assign reg 2
      Popping a43(r232,l0)  -- assign reg 2
      Popping a44(r231,l0)  -- assign reg 0
      Popping a45(r229,l0)  -- assign reg 2
      Popping a46(r228,l0)  -- assign reg 6
      Popping a47(r227,l0)  -- assign reg 7
      Popping a48(r225,l0)  -- assign reg 3
      Popping a49(r143,l0)  -- assign reg 2
      Popping a50(r222,l0)  -- assign reg 3
      Popping a52(r221,l0)  -- assign reg 2
Disposition:
    2:r134 l0     3   24:r135 l0     3   17:r136 l0     1   51:r139 l0     2
   49:r143 l0     2   41:r146 l0     3   40:r154 l0     3   38:r157 l0     3
   36:r161 l0     3    3:r174 l0     6    9:r177 l0     2    1:r188 l0     3
    0:r219 l0     4   25:r220 l0     5   52:r221 l0     2   50:r222 l0     3
   48:r225 l0     3   47:r227 l0     7   46:r228 l0     6   45:r229 l0     2
   44:r231 l0     0   43:r232 l0     2   42:r233 l0     2   39:r236 l0     3
   37:r237 l0     1   34:r243 l0     3   33:r245 l0     2   35:r246 l0     2
   32:r249 l0     3   31:r250 l0     2   30:r251 l0     2   29:r254 l0     3
   27:r256 l0     3   26:r257 l0     2   28:r258 l0     2   23:r261 l0     3
   21:r263 l0     3   20:r264 l0     0   22:r265 l0     0   16:r266 l0     2
   19:r267 l0     2    6:r268 l0     3   15:r271 l0     5   18:r272 l0     0
   14:r273 l0     0   13:r274 l0     2   12:r275 l0     2   11:r277 l0     3
   10:r279 l0     3    8:r280 l0     2    7:r281 l0     2    5:r283 l0     3
    4:r285 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, dead_or_set: 0, 219
insn=3, live_throughout: 13, 219, dead_or_set: 1, 220
insn=7, live_throughout: 13, 219, 220, dead_or_set: 221
insn=11, live_throughout: 13, 219, 220, 221, dead_or_set: 222
insn=21, live_throughout: 13, 219, 220, 221, 222, dead_or_set: 227
insn=22, live_throughout: 13, 219, 220, 221, 222, 227, dead_or_set: 228
insn=25, live_throughout: 13, 219, 220, 221, 222, 227, 228, dead_or_set: 231
insn=36, live_throughout: 13, 219, 220, 221, 222, 227, 228, 231, dead_or_set: 237
insn=148, live_throughout: 13, 219, 220, 222, 227, 228, 231, 237, dead_or_set: 139, 221
insn=149, live_throughout: 13, 219, 220, 222, 227, 228, 231, 237, dead_or_set: 139
insn=150, live_throughout: 13, 219, 220, 222, 227, 228, 231, 237, dead_or_set: 139
insn=13, live_throughout: 13, 219, 220, 227, 228, 231, 237, dead_or_set: 139, 143, 222
insn=15, live_throughout: 13, 219, 220, 227, 228, 231, 237, dead_or_set: 143
insn=16, live_throughout: 13, 219, 220, 227, 228, 231, 237, dead_or_set: 225
insn=151, live_throughout: 13, 219, 220, 227, 228, 231, 237, dead_or_set: 146, 225
insn=152, live_throughout: 13, 219, 220, 227, 228, 231, 237, dead_or_set: 146
insn=23, live_throughout: 13, 146, 219, 220, 231, 237, dead_or_set: 227, 228, 229
insn=153, live_throughout: 13, 219, 220, 229, 231, 237, dead_or_set: 146
insn=26, live_throughout: 13, 146, 219, 220, 237, dead_or_set: 229, 231, 232
insn=154, live_throughout: 13, 219, 220, 232, 237, dead_or_set: 146
insn=27, live_throughout: 13, 146, 219, 220, 237, dead_or_set: 232, 233
insn=29, live_throughout: 13, 219, 220, 237, dead_or_set: 146, 154, 233
insn=31, live_throughout: 13, 219, 220, 237, dead_or_set: 154
insn=32, live_throughout: 13, 219, 220, 237, dead_or_set: 236
insn=155, live_throughout: 13, 219, 220, 237, dead_or_set: 157, 236
insn=156, live_throughout: 13, 219, 220, 237, dead_or_set: 157
insn=157, live_throughout: 13, 219, 220, 237, dead_or_set: 157
insn=38, live_throughout: 13, 219, 220, dead_or_set: 157, 161, 237
insn=40, live_throughout: 13, 219, 220, dead_or_set: 161
insn=42, live_throughout: 13, 219, 220, dead_or_set: 0
insn=43, live_throughout: 13, 219, 220, dead_or_set: 0, 14
insn=160, live_throughout: 13, 14, 219, 220, dead_or_set: 246
insn=158, live_throughout: 13, 14, 219, 220, 246, dead_or_set: 243
insn=161, live_throughout: 13, 14, 219, 220, 243, 246, dead_or_set: 246
insn=159, live_throughout: 13, 14, 219, 220, 243, 246, dead_or_set: 243
insn=52, live_throughout: 13, 14, 219, 220, 243, dead_or_set: 245, 246
insn=56, live_throughout: 13, 14, 219, 220, dead_or_set: 243, 245, 249
insn=58, live_throughout: 13, 14, 219, 220, dead_or_set: 249
insn=60, live_throughout: 13, 14, 219, 220, dead_or_set: 135
insn=139, live_throughout: 13, 14, 135, 219, 220, dead_or_set: 
insn=63, live_throughout: 13, 14, 219, 220, dead_or_set: 
insn=65, live_throughout: 13, 14, 219, 220, dead_or_set: 135
insn=66, live_throughout: 13, 14, 135, 219, 220, dead_or_set: 
insn=68, live_throughout: 13, 14, 135, 219, 220, dead_or_set: 250
insn=70, live_throughout: 13, 14, 135, 219, 220, dead_or_set: 250, 251
insn=71, live_throughout: 13, 14, 135, 219, 220, dead_or_set: 251
insn=72, live_throughout: 13, 14, 135, 219, 220, dead_or_set: 
insn=79, live_throughout: 13, 14, 135, 219, dead_or_set: 220, 258
insn=76, live_throughout: 13, 14, 219, 258, dead_or_set: 135, 254
insn=78, live_throughout: 13, 14, 219, 258, dead_or_set: 254, 256
insn=80, live_throughout: 13, 14, 219, 256, dead_or_set: 257, 258
insn=81, live_throughout: 13, 14, 219, dead_or_set: 136, 256, 257
insn=141, live_throughout: 13, 14, 136, 219, dead_or_set: 
insn=84, live_throughout: 13, 14, 135, 219, 220, dead_or_set: 
insn=91, live_throughout: 13, 14, 135, 219, dead_or_set: 220, 265
insn=88, live_throughout: 13, 14, 219, 265, dead_or_set: 135, 261
insn=90, live_throughout: 13, 14, 219, 265, dead_or_set: 261, 263
insn=92, live_throughout: 13, 14, 219, 263, dead_or_set: 264, 265
insn=93, live_throughout: 13, 14, 219, dead_or_set: 136, 263, 264
insn=94, live_throughout: 13, 14, 136, 219, dead_or_set: 
insn=145, live_throughout: 13, 14, 136, 219, dead_or_set: 268
insn=105, live_throughout: 13, 14, 136, 219, 268, dead_or_set: 272
insn=146, live_throughout: 13, 14, 136, 219, 268, 272, dead_or_set: 268
insn=98, live_throughout: 13, 14, 136, 219, 268, 272, dead_or_set: 267
insn=99, live_throughout: 13, 14, 136, 219, 268, 272, dead_or_set: 266, 267
insn=107, live_throughout: 13, 14, 136, 219, 266, 268, dead_or_set: 272, 273
insn=101, live_throughout: 13, 14, 136, 219, 266, 268, 273, dead_or_set: 174
insn=163, live_throughout: 13, 14, 136, 174, 219, 266, 268, 273, dead_or_set: 271
insn=104, live_throughout: 13, 14, 174, 219, 268, 273, dead_or_set: 136, 177, 266, 271
insn=108, live_throughout: 13, 14, 174, 177, 219, 268, dead_or_set: 273
insn=109, live_throughout: 13, 14, 174, 177, 219, 268, dead_or_set: 
insn=111, live_throughout: 13, 14, 174, 219, 268, dead_or_set: 177, 274
insn=112, live_throughout: 13, 14, 174, 219, 268, dead_or_set: 274, 275
insn=115, live_throughout: 13, 14, 174, 219, dead_or_set: 268, 275, 277
insn=117, live_throughout: 13, 14, 174, 219, dead_or_set: 277, 279
insn=118, live_throughout: 13, 14, 219, dead_or_set: 134, 174, 279
insn=143, live_throughout: 13, 14, 134, 219, dead_or_set: 
insn=121, live_throughout: 13, 14, 174, 177, 219, 268, dead_or_set: 
insn=123, live_throughout: 13, 14, 174, 219, 268, dead_or_set: 177, 280
insn=124, live_throughout: 13, 14, 174, 219, 268, dead_or_set: 280, 281
insn=127, live_throughout: 13, 14, 174, 219, dead_or_set: 268, 281, 283
insn=129, live_throughout: 13, 14, 174, 219, dead_or_set: 283, 285
insn=130, live_throughout: 13, 14, 219, dead_or_set: 134, 174, 285
insn=131, live_throughout: 13, 14, 134, 219, dead_or_set: 
insn=138, live_throughout: 13, 14, 219, dead_or_set: 134, 188
insn=135, live_throughout: 13, 14, dead_or_set: 188, 219
init_insns for 227: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 228: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 231: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 271: (insn_list:REG_DEP_TRUE 163 (nil))
changing reg in insn 130
changing reg in insn 118
changing reg in insn 138
changing reg in insn 65
changing reg in insn 60
changing reg in insn 88
changing reg in insn 88
changing reg in insn 76
changing reg in insn 76
changing reg in insn 93
changing reg in insn 81
changing reg in insn 104
changing reg in insn 98
changing reg in insn 99
changing reg in insn 98
changing reg in insn 150
changing reg in insn 149
changing reg in insn 148
changing reg in insn 150
changing reg in insn 149
changing reg in insn 13
changing reg in insn 13
changing reg in insn 154
changing reg in insn 153
changing reg in insn 152
changing reg in insn 151
changing reg in insn 154
changing reg in insn 153
changing reg in insn 152
changing reg in insn 29
changing reg in insn 29
changing reg in insn 157
changing reg in insn 156
changing reg in insn 155
changing reg in insn 157
changing reg in insn 156
changing reg in insn 38
changing reg in insn 38
changing reg in insn 101
changing reg in insn 130
changing reg in insn 118
changing reg in insn 104
changing reg in insn 123
changing reg in insn 111
changing reg in insn 138
changing reg in insn 2
changing reg in insn 56
changing reg in insn 52
changing reg in insn 135
changing reg in insn 40
changing reg in insn 31
changing reg in insn 15
changing reg in insn 105
changing reg in insn 68
changing reg in insn 32
changing reg in insn 16
changing reg in insn 7
changing reg in insn 3
changing reg in insn 91
changing reg in insn 79
changing reg in insn 36
changing reg in insn 25
changing reg in insn 22
changing reg in insn 21
changing reg in insn 11
changing reg in insn 25
changing reg in insn 22
changing reg in insn 21
changing reg in insn 7
changing reg in insn 11
changing reg in insn 13
changing reg in insn 16
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 26
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 32
changing reg in insn 36
changing reg in insn 38
changing reg in insn 159
changing reg in insn 158
changing reg in insn 159
changing reg in insn 56
changing reg in insn 52
changing reg in insn 56
changing reg in insn 161
changing reg in insn 160
changing reg in insn 161
changing reg in insn 52
changing reg in insn 56
changing reg in insn 58
changing reg in insn 68
changing reg in insn 70
changing reg in insn 70
changing reg in insn 71
changing reg in insn 76
changing reg in insn 78
changing reg in insn 78
changing reg in insn 78
changing reg in insn 81
changing reg in insn 80
changing reg in insn 81
changing reg in insn 79
changing reg in insn 80
changing reg in insn 88
changing reg in insn 90
changing reg in insn 90
changing reg in insn 90
changing reg in insn 93
changing reg in insn 92
changing reg in insn 93
changing reg in insn 91
changing reg in insn 92
changing reg in insn 99
changing reg in insn 104
changing reg in insn 101
changing reg in insn 98
changing reg in insn 99
changing reg in insn 146
changing reg in insn 145
changing reg in insn 146
changing reg in insn 127
changing reg in insn 115
changing reg in insn 98
changing reg in insn 163
changing reg in insn 104
changing reg in insn 105
changing reg in insn 107
changing reg in insn 107
changing reg in insn 108
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 115
changing reg in insn 115
changing reg in insn 115
changing reg in insn 117
changing reg in insn 117
changing reg in insn 118
changing reg in insn 123
changing reg in insn 124
changing reg in insn 124
changing reg in insn 127
changing reg in insn 127
changing reg in insn 127
changing reg in insn 129
changing reg in insn 129
changing reg in insn 130
Spilling for insn 15.
Spilling for insn 31.
Spilling for insn 40.
Spilling for insn 98.
Using reg 5 for reload 0
Spilling for insn 115.
Using reg 1 for reload 0
Spilling for insn 127.
Using reg 1 for reload 0
Spilling for insn 135.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                                                        (const_int 16 [0x10])) [5 USARTx_10(D)->CR2+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                                                        (const_int 16 [0x10])) [5 USARTx_10(D)->CR2+0 S2 A16])

Reloads for insn # 31
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                                                        (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                                                        (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])

Reloads for insn # 40
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                                                        (const_int 20 [0x14])) [5 USARTx_10(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                                                        (const_int 20 [0x14])) [5 USARTx_10(D)->CR3+0 S2 A16])

Reloads for insn # 98
Reload 0: reload_out (SI) = (scratch:SI)
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 3)
	reload_out_reg: (scratch:SI)
	reload_reg_rtx: (reg:SI 5 r5)

Reloads for insn # 115
Reload 0: reload_out (SI) = (scratch:SI)
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 3)
	reload_out_reg: (scratch:SI)
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 127
Reload 0: reload_out (SI) = (scratch:SI)
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 3)
	reload_out_reg: (scratch:SI)
	reload_reg_rtx: (reg:SI 5 r5)

Reloads for insn # 135
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                                                        (const_int 8 [0x8])) [5 USARTx_10(D)->BRR+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                                                        (const_int 8 [0x8])) [5 USARTx_10(D)->BRR+0 S2 A16])
deleting insn with uid = 138.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 43.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 12 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 12 (    1)


USART_Init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={6d,4u,2e} r2={24d,24u,2e} r3={31d,34u} r4={1d,11u} r5={4d,8u,3e} r6={2d,3u} r7={1d,1u} r12={1d} r13={1d,15u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={6d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 314{197d,110u,7e} in 79{78 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 12 2 NOTE_INSN_DELETED)

(note 12 8 17 2 NOTE_INSN_DELETED)

(note 17 12 19 2 NOTE_INSN_DELETED)

(note 19 17 28 2 NOTE_INSN_DELETED)

(note 28 19 33 2 NOTE_INSN_DELETED)

(note 33 28 37 2 NOTE_INSN_DELETED)

(note 37 33 41 2 NOTE_INSN_DELETED)

(note 41 37 46 2 NOTE_INSN_DELETED)

(note 46 41 47 2 NOTE_INSN_DELETED)

(note 47 46 51 2 NOTE_INSN_DELETED)

(note 51 47 54 2 NOTE_INSN_DELETED)

(note 54 51 55 2 NOTE_INSN_DELETED)

(note 55 54 57 2 NOTE_INSN_DELETED)

(note 57 55 2 2 NOTE_INSN_DELETED)

(insn 2 57 3 2 (set (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
        (reg:SI 0 r0 [ USARTx ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:247 709 {*thumb2_movsi_insn}
     (nil))

(insn 3 2 7 2 (set (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220])
        (reg:SI 1 r1 [ USART_InitStruct ])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:247 709 {*thumb2_movsi_insn}
     (nil))

(insn 7 3 11 2 (set (reg:HI 2 r2 [orig:221 USARTx_10(D)->CR2 ] [221])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                (const_int 16 [0x10])) [5 USARTx_10(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:269 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 7 21 2 (set (reg:SI 3 r3 [orig:222 USART_InitStruct_8(D)->USART_StopBits ] [222])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220])
                    (const_int 6 [0x6])) [5 USART_InitStruct_8(D)->USART_StopBits+0 S2 A16]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:276 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 21 11 22 2 (set (reg:HI 7 r7 [orig:227 USART_InitStruct_8(D)->USART_Parity ] [227])
        (mem/s:HI (plus:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220])
                (const_int 8 [0x8])) [5 USART_InitStruct_8(D)->USART_Parity+0 S2 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 711 {*thumb2_movhi_insn}
     (expr_list:REG_EQUIV (mem/s:HI (plus:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220])
                (const_int 8 [0x8])) [5 USART_InitStruct_8(D)->USART_Parity+0 S2 A32])
        (nil)))

(insn 22 21 25 2 (set (reg:HI 6 r6 [orig:228 USART_InitStruct_8(D)->USART_WordLength ] [228])
        (mem/s:HI (plus:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220])
                (const_int 4 [0x4])) [5 USART_InitStruct_8(D)->USART_WordLength+0 S2 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 711 {*thumb2_movhi_insn}
     (expr_list:REG_EQUIV (mem/s:HI (plus:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220])
                (const_int 4 [0x4])) [5 USART_InitStruct_8(D)->USART_WordLength+0 S2 A32])
        (nil)))

(insn 25 22 36 2 (set (reg:HI 0 r0 [orig:231 USART_InitStruct_8(D)->USART_Mode ] [231])
        (mem/s:HI (plus:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220])
                (const_int 10 [0xa])) [5 USART_InitStruct_8(D)->USART_Mode+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 711 {*thumb2_movhi_insn}
     (expr_list:REG_EQUIV (mem/s:HI (plus:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220])
                (const_int 10 [0xa])) [5 USART_InitStruct_8(D)->USART_Mode+0 S2 A16])
        (nil)))

(insn 36 25 148 2 (set (reg:SI 1 r1 [orig:237 USART_InitStruct_8(D)->USART_HardwareFlowControl ] [237])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220])
                    (const_int 12 [0xc])) [5 USART_InitStruct_8(D)->USART_HardwareFlowControl+0 S2 A32]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:305 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 148 36 149 2 (set (reg/v:SI 2 r2 [orig:139 tmpreg ] [139])
        (and:SI (reg:SI 2 r2 [orig:221 USARTx_10(D)->CR2 ] [221])
            (const_int 4294955007 [0xffffcfff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:272 69 {*arm_andsi3_insn}
     (nil))

(insn 149 148 150 2 (set (reg/v:SI 2 r2 [orig:139 tmpreg ] [139])
        (ashift:SI (reg/v:SI 2 r2 [orig:139 tmpreg ] [139])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:272 119 {*arm_shiftsi3}
     (nil))

(insn 150 149 13 2 (set (reg/v:SI 2 r2 [orig:139 tmpreg ] [139])
        (lshiftrt:SI (reg/v:SI 2 r2 [orig:139 tmpreg ] [139])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:272 119 {*arm_shiftsi3}
     (nil))

(insn 13 150 15 2 (set (reg:SI 2 r2 [orig:143 D.7898 ] [143])
        (ior:SI (reg/v:SI 2 r2 [orig:139 tmpreg ] [139])
            (reg:SI 3 r3 [orig:222 USART_InitStruct_8(D)->USART_StopBits ] [222]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:279 91 {*iorsi3_insn}
     (nil))

(insn 15 13 16 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                (const_int 16 [0x10])) [5 USARTx_10(D)->CR2+0 S2 A16])
        (reg:HI 2 r2 [orig:143 D.7898 ] [143])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:279 711 {*thumb2_movhi_insn}
     (nil))

(insn 16 15 151 2 (set (reg:HI 3 r3 [orig:225 USARTx_10(D)->CR1 ] [225])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:282 711 {*thumb2_movhi_insn}
     (nil))

(insn 151 16 152 2 (set (reg/v:SI 3 r3 [orig:146 tmpreg ] [146])
        (and:SI (reg:SI 3 r3 [orig:225 USARTx_10(D)->CR1 ] [225])
            (const_int -5633 [0xffffffffffffe9ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:285 69 {*arm_andsi3_insn}
     (nil))

(insn 152 151 23 2 (set (reg/v:SI 3 r3 [orig:146 tmpreg ] [146])
        (and:SI (reg/v:SI 3 r3 [orig:146 tmpreg ] [146])
            (const_int -13 [0xfffffffffffffff3]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:285 69 {*arm_andsi3_insn}
     (nil))

(insn 23 152 153 2 (set (reg:SI 2 r2 [229])
        (ior:SI (reg:SI 7 r7 [orig:227 USART_InitStruct_8(D)->USART_Parity ] [227])
            (reg:SI 6 r6 [orig:228 USART_InitStruct_8(D)->USART_WordLength ] [228]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 91 {*iorsi3_insn}
     (nil))

(insn 153 23 26 2 (set (reg/v:SI 3 r3 [orig:146 tmpreg ] [146])
        (ashift:SI (reg/v:SI 3 r3 [orig:146 tmpreg ] [146])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:285 119 {*arm_shiftsi3}
     (nil))

(insn 26 153 154 2 (set (reg:SI 2 r2 [232])
        (ior:SI (reg:SI 2 r2 [229])
            (reg:SI 0 r0 [orig:231 USART_InitStruct_8(D)->USART_Mode ] [231]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 91 {*iorsi3_insn}
     (nil))

(insn 154 26 27 2 (set (reg/v:SI 3 r3 [orig:146 tmpreg ] [146])
        (lshiftrt:SI (reg/v:SI 3 r3 [orig:146 tmpreg ] [146])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:285 119 {*arm_shiftsi3}
     (nil))

(insn 27 154 29 2 (set (reg:SI 2 r2 [233])
        (zero_extend:SI (reg:HI 2 r2 [232]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:291 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 29 27 31 2 (set (reg:SI 3 r3 [orig:154 D.7898 ] [154])
        (ior:SI (reg:SI 2 r2 [233])
            (reg/v:SI 3 r3 [orig:146 tmpreg ] [146]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:295 91 {*iorsi3_insn}
     (nil))

(insn 31 29 32 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:154 D.7898 ] [154])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:295 711 {*thumb2_movhi_insn}
     (nil))

(insn 32 31 155 2 (set (reg:HI 3 r3 [orig:236 USARTx_10(D)->CR3 ] [236])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                (const_int 20 [0x14])) [5 USARTx_10(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:298 711 {*thumb2_movhi_insn}
     (nil))

(insn 155 32 156 2 (set (reg/v:SI 3 r3 [orig:157 tmpreg ] [157])
        (and:SI (reg:SI 3 r3 [orig:236 USARTx_10(D)->CR3 ] [236])
            (const_int 4294966527 [0xfffffcff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:301 69 {*arm_andsi3_insn}
     (nil))

(insn 156 155 157 2 (set (reg/v:SI 3 r3 [orig:157 tmpreg ] [157])
        (ashift:SI (reg/v:SI 3 r3 [orig:157 tmpreg ] [157])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:301 119 {*arm_shiftsi3}
     (nil))

(insn 157 156 38 2 (set (reg/v:SI 3 r3 [orig:157 tmpreg ] [157])
        (lshiftrt:SI (reg/v:SI 3 r3 [orig:157 tmpreg ] [157])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:301 119 {*arm_shiftsi3}
     (nil))

(insn 38 157 40 2 (set (reg:SI 3 r3 [orig:161 D.7898 ] [161])
        (ior:SI (reg/v:SI 3 r3 [orig:157 tmpreg ] [157])
            (reg:SI 1 r1 [orig:237 USART_InitStruct_8(D)->USART_HardwareFlowControl ] [237]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:308 91 {*iorsi3_insn}
     (nil))

(insn 40 38 42 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                (const_int 20 [0x14])) [5 USARTx_10(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:161 D.7898 ] [161])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:308 711 {*thumb2_movhi_insn}
     (nil))

(insn 42 40 43 2 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:312 709 {*thumb2_movsi_insn}
     (nil))

(call_insn 43 42 160 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("RCC_GetClocksFreq") [flags 0x41]  <function_decl 0x55c25600 RCC_GetClocksFreq>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:312 242 {*call_symbol}
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 160 43 158 2 (set (reg:SI 2 r2 [246])
        (const_int 4096 [0x1000])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 4096 [0x1000])
        (nil)))

(insn 158 160 161 2 (set (reg:SI 3 r3 [243])
        (const_int 5120 [0x1400])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 5120 [0x1400])
        (nil)))

(insn 161 158 159 2 (set (zero_extract:SI (reg:SI 2 r2 [246])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16385 [0x4001])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 342 {*arm_movtas_ze}
     (nil))

(insn 159 161 52 2 (set (zero_extract:SI (reg:SI 3 r3 [243])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 16385 [0x4001])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 342 {*arm_movtas_ze}
     (nil))

(insn 52 159 56 2 (parallel [
            (set (reg:SI 2 r2 [245])
                (eq:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                    (reg:SI 2 r2 [246])))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 270 {*compare_scc}
     (nil))

(insn 56 52 58 2 (parallel [
            (set (reg:SI 3 r3 [249])
                (ior:SI (eq:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                        (reg:SI 3 r3 [243]))
                    (reg:SI 2 r2 [245])))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 724 {*thumb2_cond_arith}
     (nil))

(jump_insn 58 56 59 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 3 r3 [249])
                        (const_int 0 [0]))
                    (label_ref 63)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:314 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 63)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 59 58 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 139 3 (set (reg/v:SI 3 r3 [orig:135 apbclock ] [135])
        (mem/s/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [4 RCC_ClocksStatus.PCLK2_Frequency+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:316 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 139 60 140 3 (set (pc)
        (label_ref 66)) 230 {*arm_jump}
     (nil)
 -> 66)
;; End of basic block 3 -> ( 5)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 140 139 63)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 63 140 64 4 20 "" [1 uses])

(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 4 (set (reg/v:SI 3 r3 [orig:135 apbclock ] [135])
        (mem/s/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [4 RCC_ClocksStatus.PCLK1_Frequency+0 S4 A64])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:320 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 66 65 67 5 21 "" [1 uses])

(note 67 66 69 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 69 67 68 5 NOTE_INSN_DELETED)

(insn 68 69 70 5 (set (reg:HI 2 r2 [orig:250 USARTx_10(D)->CR1 ] [250])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:324 711 {*thumb2_movhi_insn}
     (nil))

(insn 70 68 71 5 (set (reg:SI 2 r2 [orig:251 D.7914 ] [251])
        (sign_extend:SI (reg:HI 2 r2 [orig:250 USARTx_10(D)->CR1 ] [250]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:324 165 {*arm_extendhisi2_v6}
     (nil))

(insn 71 70 72 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:251 D.7914 ] [251])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:324 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 72 71 73 5 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:324 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
        (nil))
 -> 84)
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [27.0%]  (fallthru)
;; Succ edge  7 [73.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  5 [27.0%]  (fallthru)
(note 73 72 75 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 75 73 77 6 NOTE_INSN_DELETED)

(note 77 75 79 6 NOTE_INSN_DELETED)

(insn 79 77 76 6 (set (reg:SI 2 r2 [orig:258 USART_InitStruct_8(D)->USART_BaudRate ] [258])
        (mem/s:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220]) [4 USART_InitStruct_8(D)->USART_BaudRate+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 709 {*thumb2_movsi_insn}
     (nil))

(insn 76 79 78 6 (set (reg:SI 3 r3 [254])
        (plus:SI (mult:SI (reg/v:SI 3 r3 [orig:135 apbclock ] [135])
                (const_int 4 [0x4]))
            (reg/v:SI 3 r3 [orig:135 apbclock ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 262 {*arith_shiftsi}
     (nil))

(insn 78 76 80 6 (set (reg:SI 3 r3 [256])
        (plus:SI (mult:SI (reg:SI 3 r3 [254])
                (const_int 4 [0x4]))
            (reg:SI 3 r3 [254]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 262 {*arith_shiftsi}
     (nil))

(insn 80 78 81 6 (set (reg:SI 2 r2 [257])
        (ashift:SI (reg:SI 2 r2 [orig:258 USART_InitStruct_8(D)->USART_BaudRate ] [258])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 119 {*arm_shiftsi3}
     (nil))

(insn 81 80 141 6 (set (reg/v:SI 1 r1 [orig:136 integerdivider ] [136])
        (udiv:SI (reg:SI 3 r3 [256])
            (reg:SI 2 r2 [257]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:327 133 {udivsi3}
     (nil))

(jump_insn 141 81 142 6 (set (pc)
        (label_ref 94)) 230 {*arm_jump}
     (nil)
 -> 94)
;; End of basic block 6 -> ( 8)
;; lr  out 	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 142 141 84)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 3 [r3]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  5 [73.0%] 
(code_label 84 142 85 7 22 "" [1 uses])

(note 85 84 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 87 85 89 7 NOTE_INSN_DELETED)

(note 89 87 91 7 NOTE_INSN_DELETED)

(insn 91 89 88 7 (set (reg:SI 0 r0 [orig:265 USART_InitStruct_8(D)->USART_BaudRate ] [265])
        (mem/s:SI (reg/v/f:SI 5 r5 [orig:220 USART_InitStruct ] [220]) [4 USART_InitStruct_8(D)->USART_BaudRate+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 709 {*thumb2_movsi_insn}
     (nil))

(insn 88 91 90 7 (set (reg:SI 3 r3 [261])
        (plus:SI (mult:SI (reg/v:SI 3 r3 [orig:135 apbclock ] [135])
                (const_int 4 [0x4]))
            (reg/v:SI 3 r3 [orig:135 apbclock ] [135]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 262 {*arith_shiftsi}
     (nil))

(insn 90 88 92 7 (set (reg:SI 3 r3 [263])
        (plus:SI (mult:SI (reg:SI 3 r3 [261])
                (const_int 4 [0x4]))
            (reg:SI 3 r3 [261]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 262 {*arith_shiftsi}
     (nil))

(insn 92 90 93 7 (set (reg:SI 0 r0 [264])
        (ashift:SI (reg:SI 0 r0 [orig:265 USART_InitStruct_8(D)->USART_BaudRate ] [265])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 119 {*arm_shiftsi3}
     (nil))

(insn 93 92 94 7 (set (reg/v:SI 1 r1 [orig:136 integerdivider ] [136])
        (udiv:SI (reg:SI 3 r3 [263])
            (reg:SI 0 r0 [264]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:332 133 {udivsi3}
     (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 5 [r5]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 94 93 95 8 23 "" [1 uses])

(note 95 94 100 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 100 95 103 8 NOTE_INSN_DELETED)

(note 103 100 106 8 NOTE_INSN_DELETED)

(note 106 103 145 8 NOTE_INSN_DELETED)

(insn 145 106 105 8 (set (reg:SI 3 r3 [268])
        (const_int 34079 [0x851f])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:334 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (const_int 34079 [0x851f])
        (nil)))

(insn 105 145 146 8 (set (reg:HI 0 r0 [orig:272 USARTx_10(D)->CR1 ] [272])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                (const_int 12 [0xc])) [5 USARTx_10(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:340 711 {*thumb2_movhi_insn}
     (nil))

(insn 146 105 98 8 (set (zero_extract:SI (reg:SI 3 r3 [268])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (const_int 20971 [0x51eb])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:334 342 {*arm_movtas_ze}
     (nil))

(insn 98 146 99 8 (parallel [
            (set (reg:SI 2 r2 [267])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 1 r1 [orig:136 integerdivider ] [136]))
                            (zero_extend:DI (reg:SI 3 r3 [268])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 5 r5))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:334 59 {*umulsi3_highpart_v6}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 1 r1 [orig:136 integerdivider ] [136]))
                    (const_int 1374389535 [0x51eb851f]))
                (const_int 32 [0x20])))
        (nil)))

(insn 99 98 107 8 (set (reg:SI 2 r2 [266])
        (lshiftrt:SI (reg:SI 2 r2 [267])
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:334 119 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 1 r1 [orig:136 integerdivider ] [136])
            (const_int 100 [0x64]))
        (nil)))

(insn 107 99 101 8 (set (reg:SI 0 r0 [orig:273 D.7926 ] [273])
        (sign_extend:SI (reg:HI 0 r0 [orig:272 USARTx_10(D)->CR1 ] [272]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:340 165 {*arm_extendhisi2_v6}
     (nil))

(insn 101 107 163 8 (set (reg/v:SI 6 r6 [orig:174 tmpreg ] [174])
        (ashift:SI (reg:SI 2 r2 [266])
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:337 119 {*arm_shiftsi3}
     (nil))

(insn 163 101 104 8 (set (reg:SI 5 r5 [271])
        (const_int 100 [0x64])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:337 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 100 [0x64])
        (nil)))

(insn 104 163 108 8 (set (reg/v:SI 2 r2 [orig:177 fractionaldivider ] [177])
        (minus:SI (reg/v:SI 1 r1 [orig:136 integerdivider ] [136])
            (mult:SI (reg:SI 2 r2 [266])
                (reg:SI 5 r5 [271])))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:337 47 {*mulsi3subsi}
     (nil))

(insn 108 104 109 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:273 D.7926 ] [273])
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:340 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 109 108 110 8 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:340 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 8088 [0x1f98])
        (nil))
 -> 121)
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  9 [19.1%]  (fallthru)
;; Succ edge  10 [80.9%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	 1 [r1]

;; Pred edge  8 [19.1%]  (fallthru)
(note 110 109 116 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 116 110 111 9 NOTE_INSN_DELETED)

(insn 111 116 112 9 (set (reg:SI 2 r2 [274])
        (ashift:SI (reg/v:SI 2 r2 [orig:177 fractionaldivider ] [177])
            (const_int 3 [0x3]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 119 {*arm_shiftsi3}
     (nil))

(insn 112 111 115 9 (set (reg:SI 2 r2 [275])
        (plus:SI (reg:SI 2 r2 [274])
            (const_int 50 [0x32]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 4 {*arm_addsi3}
     (nil))

(insn 115 112 117 9 (parallel [
            (set (reg:SI 3 r3 [277])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 2 r2 [275]))
                            (zero_extend:DI (reg:SI 3 r3 [268])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 59 {*umulsi3_highpart_v6}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 2 r2 [275]))
                    (const_int 1374389535 [0x51eb851f]))
                (const_int 32 [0x20])))
        (nil)))

(insn 117 115 118 9 (set (reg:SI 3 r3 [279])
        (zero_extract:SI (reg:SI 3 r3 [277])
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 131 {extzv_t2}
     (nil))

(insn 118 117 143 9 (set (reg/v:SI 3 r3 [orig:134 tmpreg ] [134])
        (ior:SI (reg:SI 3 r3 [279])
            (reg/v:SI 6 r6 [orig:174 tmpreg ] [174]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:342 91 {*iorsi3_insn}
     (nil))

(jump_insn 143 118 144 9 (set (pc)
        (label_ref 131)) 230 {*arm_jump}
     (nil)
 -> 131)
;; End of basic block 9 -> ( 11)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 144 143 121)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 5 [r5]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	 5 [r5]

;; Pred edge  8 [80.9%] 
(code_label 121 144 122 10 24 "" [1 uses])

(note 122 121 128 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 128 122 123 10 NOTE_INSN_DELETED)

(insn 123 128 124 10 (set (reg:SI 2 r2 [280])
        (ashift:SI (reg/v:SI 2 r2 [orig:177 fractionaldivider ] [177])
            (const_int 4 [0x4]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 119 {*arm_shiftsi3}
     (nil))

(insn 124 123 127 10 (set (reg:SI 2 r2 [281])
        (plus:SI (reg:SI 2 r2 [280])
            (const_int 50 [0x32]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 4 {*arm_addsi3}
     (nil))

(insn 127 124 129 10 (parallel [
            (set (reg:SI 3 r3 [283])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 2 r2 [281]))
                            (zero_extend:DI (reg:SI 3 r3 [268])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 5 r5))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 59 {*umulsi3_highpart_v6}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 2 r2 [281]))
                    (const_int 1374389535 [0x51eb851f]))
                (const_int 32 [0x20])))
        (nil)))

(insn 129 127 130 10 (set (reg:SI 3 r3 [285])
        (zero_extract:SI (reg:SI 3 r3 [283])
            (const_int 4 [0x4])
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 131 {extzv_t2}
     (nil))

(insn 130 129 131 10 (set (reg/v:SI 3 r3 [orig:134 tmpreg ] [134])
        (ior:SI (reg:SI 3 r3 [285])
            (reg/v:SI 6 r6 [orig:174 tmpreg ] [174]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:346 91 {*iorsi3_insn}
     (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 131 130 132 11 25 "" [1 uses])

(note 132 131 135 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 135 132 162 11 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 4 r4 [orig:219 USARTx ] [219])
                (const_int 8 [0x8])) [5 USARTx_10(D)->BRR+0 S2 A16])
        (reg:HI 3 r3 [orig:188 D.7898 ] [188])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:350 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 162 135 164 NOTE_INSN_DELETED)

(note 164 162 0 NOTE_INSN_DELETED)


;; Function USART_StructInit (USART_StructInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134: local to bb 2 def dominates all uses has unique first use
Reg 137: local to bb 2 def dominates all uses has unique first use
Reg 135 uninteresting
Found def insn 2 for 134 to be not moveable
Ignoring reg 137 with equiv init insn
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 135: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 8 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r135,l0) best LO_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000

   Insn 22(l0): point = 0
   Insn 19(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 10(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 8(l0): point = 14
   Insn 2(l0): point = 16
 a0(r134): [1..16]
 a1(r137): [1..14]
 a2(r135): [11..12]
Compressing live ranges: from 19 to 2 - 10%
Ranges after the compression:
 a0(r134): [0..1]
 a1(r137): [0..1]
 a2(r135): [0..1]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r134,l0) conflicts: a1(r137,l0) a2(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r137,l0) conflicts: a0(r134,l0) a2(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r135,l0) conflicts: a0(r134,l0) a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134 1r137 2r135
    modified regnos: 134 135 137
    border:
    Pressure: GENERAL_REGS=4
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a2(r135,l0)
      Pushing a1(r137,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 2
Disposition:
    0:r134 l0     0    2:r135 l0     2    1:r137 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 134
insn=8, live_throughout: 13, 14, 134, dead_or_set: 137
insn=6, live_throughout: 13, 14, 134, 137, dead_or_set: 135
insn=7, live_throughout: 13, 14, 134, 137, dead_or_set: 135
insn=10, live_throughout: 13, 14, 134, 137, dead_or_set: 
insn=13, live_throughout: 13, 14, 134, 137, dead_or_set: 
insn=16, live_throughout: 13, 14, 134, 137, dead_or_set: 
insn=19, live_throughout: 13, 14, 134, 137, dead_or_set: 
insn=22, live_throughout: 13, 14, dead_or_set: 134, 137
init_insns for 135: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 8 (nil))
changing reg in insn 2
changing reg in insn 19
changing reg in insn 22
changing reg in insn 16
changing reg in insn 13
changing reg in insn 10
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
Spilling for insn 7.
Spilling for insn 10.
Spilling for insn 13.
Spilling for insn 16.
Spilling for insn 19.
Using reg 2 for reload 1
Spilling for insn 22.

Reloads for insn # 7
Reload 0: reload_out (SI) = (mem/s:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134]) [4 USART_InitStruct_1(D)->USART_BaudRate+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134]) [4 USART_InitStruct_1(D)->USART_BaudRate+0 S4 A32])

Reloads for insn # 10
Reload 0: reload_out (HI) = (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 4 [0x4])) [5 USART_InitStruct_1(D)->USART_WordLength+0 S2 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 4 [0x4])) [5 USART_InitStruct_1(D)->USART_WordLength+0 S2 A32])

Reloads for insn # 13
Reload 0: reload_out (HI) = (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 6 [0x6])) [5 USART_InitStruct_1(D)->USART_StopBits+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 6 [0x6])) [5 USART_InitStruct_1(D)->USART_StopBits+0 S2 A16])

Reloads for insn # 16
Reload 0: reload_out (HI) = (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 8 [0x8])) [5 USART_InitStruct_1(D)->USART_Parity+0 S2 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 8 [0x8])) [5 USART_InitStruct_1(D)->USART_Parity+0 S2 A32])

Reloads for insn # 19
Reload 0: reload_out (HI) = (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 10 [0xa])) [5 USART_InitStruct_1(D)->USART_Mode+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 10 [0xa])) [5 USART_InitStruct_1(D)->USART_Mode+0 S2 A16])
Reload 1: reload_in (HI) = (const_int 12 [0xc])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (const_int 12 [0xc])
	reload_reg_rtx: (reg:HI 2 r2)

Reloads for insn # 22
Reload 0: reload_out (HI) = (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 12 [0xc])) [5 USART_InitStruct_1(D)->USART_HardwareFlowControl+0 S2 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                                                        (const_int 12 [0xc])) [5 USART_InitStruct_1(D)->USART_HardwareFlowControl+0 S2 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_StructInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={1d,6u} r1={1d} r2={3d,2u} r3={2d,4u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 24{9d,15u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 3 8 2 NOTE_INSN_DELETED)

(insn 8 17 6 2 (set (reg:SI 3 r3 [137])
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:363 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))

(insn 6 8 7 2 (set (reg:SI 2 r2 [135])
        (const_int 9600 [0x2580])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:362 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 9600 [0x2580])
        (nil)))

(insn 7 6 10 2 (set (mem/s:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134]) [4 USART_InitStruct_1(D)->USART_BaudRate+0 S4 A32])
        (reg:SI 2 r2 [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:362 709 {*thumb2_movsi_insn}
     (nil))

(insn 10 7 13 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                (const_int 4 [0x4])) [5 USART_InitStruct_1(D)->USART_WordLength+0 S2 A32])
        (reg:HI 3 r3 [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:363 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 10 16 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                (const_int 6 [0x6])) [5 USART_InitStruct_1(D)->USART_StopBits+0 S2 A16])
        (reg:HI 3 r3 [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:364 711 {*thumb2_movhi_insn}
     (nil))

(insn 16 13 27 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                (const_int 8 [0x8])) [5 USART_InitStruct_1(D)->USART_Parity+0 S2 A32])
        (reg:HI 3 r3 [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:365 711 {*thumb2_movhi_insn}
     (nil))

(insn 27 16 19 2 (set (reg:HI 2 r2)
        (const_int 12 [0xc])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:366 711 {*thumb2_movhi_insn}
     (nil))

(insn 19 27 22 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                (const_int 10 [0xa])) [5 USART_InitStruct_1(D)->USART_Mode+0 S2 A16])
        (reg:HI 2 r2)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:366 711 {*thumb2_movhi_insn}
     (nil))

(insn 22 19 25 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_InitStruct ] [134])
                (const_int 12 [0xc])) [5 USART_InitStruct_1(D)->USART_HardwareFlowControl+0 S2 A32])
        (reg:HI 3 r3 [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:367 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 25 22 26 NOTE_INSN_DELETED)

(note 26 25 0 NOTE_INSN_DELETED)


;; Function USART_ClockInit (USART_ClockInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 148: local to bb 2 def dominates all uses has unique first use
Reg 147: local to bb 2 def dominates all uses has unique first use
Reg 150: local to bb 2 def dominates all uses has unique first use
Reg 151: local to bb 2 def dominates all uses has unique first use
Reg 149: local to bb 2 def dominates all uses has unique first use
Reg 154: local to bb 2 def dominates all uses has unique first use
Reg 157: local to bb 2 def dominates all uses has unique first use
Reg 152: local to bb 2 def dominates all uses has unique first use
Reg 155: local to bb 2 def dominates all uses has unique first use
Reg 158: local to bb 2 def dominates all uses has unique first use
Reg 159 uninteresting
Reg 146 uninteresting
Found def insn 2 for 147 to be not moveable
Found def insn 3 for 148 to be not moveable
Found def insn 7 for 149 to be not moveable
Found def insn 11 for 150 to be not moveable
Found def insn 12 for 151 to be not moveable
Examining insn 13, def for 152
  all ok
Found def insn 15 for 154 to be not moveable
Examining insn 16, def for 155
  all ok
Found def insn 18 for 157 to be not moveable
Examining insn 19, def for 158
  all ok
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a3(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000


Pass 1 for finding pseudo/allocno costs

    r159: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a3(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000

   Insn 24(l0): point = 0
   Insn 22(l0): point = 2
   Insn 20(l0): point = 4
   Insn 29(l0): point = 6
   Insn 19(l0): point = 8
   Insn 28(l0): point = 10
   Insn 16(l0): point = 12
   Insn 27(l0): point = 14
   Insn 13(l0): point = 16
   Insn 18(l0): point = 18
   Insn 15(l0): point = 20
   Insn 7(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 2(l0): point = 28
   Insn 3(l0): point = 30
 a0(r147): [1..28]
 a1(r146): [1..2]
 a2(r136): [3..14]
 a3(r159): [3..4]
 a4(r158): [5..8]
 a5(r157): [9..18]
 a6(r155): [9..12]
 a7(r154): [13..20]
 a8(r152): [13..16]
 a9(r149): [15..22]
 a10(r151): [17..24]
 a11(r150): [17..26]
 a12(r148): [19..30]
Compressing live ranges: from 33 to 16 - 48%
Ranges after the compression:
 a0(r147): [0..15]
 a1(r146): [0..1]
 a2(r136): [2..9]
 a3(r159): [2..3]
 a4(r158): [4..5]
 a5(r157): [6..13]
 a6(r155): [6..7]
 a7(r154): [8..15]
 a8(r152): [8..11]
 a9(r149): [10..15]
 a10(r151): [12..15]
 a11(r150): [12..15]
 a12(r148): [14..15]
+++Allocating 104 bytes for conflict table (uncompressed size 104)
;; a0(r147,l0) conflicts: a1(r146,l0) a3(r159,l0) a2(r136,l0) a4(r158,l0) a6(r155,l0) a5(r157,l0) a8(r152,l0) a7(r154,l0) a9(r149,l0) a10(r151,l0) a11(r150,l0) a12(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r146,l0) conflicts: a0(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r147,l0) a3(r159,l0) a4(r158,l0) a6(r155,l0) a5(r157,l0) a8(r152,l0) a7(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r159,l0) conflicts: a0(r147,l0) a2(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r158,l0) conflicts: a0(r147,l0) a2(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r157,l0) conflicts: a0(r147,l0) a2(r136,l0) a6(r155,l0) a8(r152,l0) a7(r154,l0) a9(r149,l0) a10(r151,l0) a11(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r155,l0) conflicts: a0(r147,l0) a2(r136,l0) a5(r157,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r154,l0) conflicts: a0(r147,l0) a2(r136,l0) a5(r157,l0) a8(r152,l0) a9(r149,l0) a10(r151,l0) a11(r150,l0) a12(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a8(r152,l0) conflicts: a0(r147,l0) a2(r136,l0) a5(r157,l0) a7(r154,l0) a9(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a9(r149,l0) conflicts: a0(r147,l0) a5(r157,l0) a8(r152,l0) a7(r154,l0) a10(r151,l0) a11(r150,l0) a12(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a10(r151,l0) conflicts: a0(r147,l0) a5(r157,l0) a7(r154,l0) a9(r149,l0) a11(r150,l0) a12(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a11(r150,l0) conflicts: a0(r147,l0) a5(r157,l0) a7(r154,l0) a9(r149,l0) a10(r151,l0) a12(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a12(r148,l0) conflicts: a0(r147,l0) a7(r154,l0) a9(r149,l0) a10(r151,l0) a11(r150,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a8(r152)<->a11(r150)@125:shuffle
  cp1:a8(r152)<->a10(r151)@125:shuffle
  cp2:a2(r136)<->a9(r149)@125:shuffle
  cp3:a6(r155)<->a8(r152)@125:shuffle
  cp4:a6(r155)<->a7(r154)@125:shuffle
  cp5:a4(r158)<->a6(r155)@125:shuffle
  cp6:a4(r158)<->a5(r157)@125:shuffle
  cp7:a3(r159)<->a4(r158)@125:shuffle
  cp8:a1(r146)<->a3(r159)@125:shuffle
  cp9:a1(r146)<->a2(r136)@125:shuffle
  regions=1, blocks=3, points=16
    allocnos=13 (big 0), copies=10, conflicts=1, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r147 1r146 2r136 3r159 4r158 5r157 6r155 7r154 8r152 9r149 10r151 11r150 12r148
    modified regnos: 136 146 147 148 149 150 151 152 154 155 157 158 159
    border:
    Pressure: GENERAL_REGS=7
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 159 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 2 regs less
      Pushing a11(r150,l0)
      Pushing a10(r151,l0)
      Pushing a9(r149,l0)
      Pushing a8(r152,l0)
      Pushing a7(r154,l0)
      Pushing a6(r155,l0)
      Pushing a5(r157,l0)
      Pushing a4(r158,l0)
      Pushing a3(r159,l0)
      Pushing a1(r146,l0)
      Pushing a0(r147,l0)
      Pushing a2(r136,l0)
      Pushing a12(r148,l0)
      Popping a12(r148,l0)  -- assign reg 1
      Popping a2(r136,l0)  -- assign reg 3
      Popping a0(r147,l0)  -- assign reg 0
      Popping a1(r146,l0)  -- assign reg 3
      Popping a3(r159,l0)  -- assign reg 2
      Popping a4(r158,l0)  -- assign reg 2
      Popping a5(r157,l0)  -- assign reg 1
      Popping a6(r155,l0)  -- assign reg 2
      Popping a7(r154,l0)  -- assign reg 4
      Popping a8(r152,l0)  -- assign reg 2
      Popping a9(r149,l0)  -- assign reg 3
      Popping a10(r151,l0)  -- assign reg 2
      Popping a11(r150,l0)  -- assign reg 5
Disposition:
    2:r136 l0     3    1:r146 l0     3    0:r147 l0     0   12:r148 l0     1
    9:r149 l0     3   11:r150 l0     5   10:r151 l0     2    8:r152 l0     2
    7:r154 l0     4    6:r155 l0     2    5:r157 l0     1    4:r158 l0     2
    3:r159 l0     2
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 0, 13, 14, dead_or_set: 1, 148
insn=2, live_throughout: 13, 14, 148, dead_or_set: 0, 147
insn=11, live_throughout: 13, 14, 147, 148, dead_or_set: 150
insn=12, live_throughout: 13, 14, 147, 148, 150, dead_or_set: 151
insn=7, live_throughout: 13, 14, 147, 148, 150, 151, dead_or_set: 149
insn=15, live_throughout: 13, 14, 147, 148, 149, 150, 151, dead_or_set: 154
insn=18, live_throughout: 13, 14, 147, 149, 150, 151, 154, dead_or_set: 148, 157
insn=13, live_throughout: 13, 14, 147, 149, 154, 157, dead_or_set: 150, 151, 152
insn=27, live_throughout: 13, 14, 147, 152, 154, 157, dead_or_set: 136, 149
insn=16, live_throughout: 13, 14, 136, 147, 157, dead_or_set: 152, 154, 155
insn=28, live_throughout: 13, 14, 147, 155, 157, dead_or_set: 136
insn=19, live_throughout: 13, 14, 136, 147, dead_or_set: 155, 157, 158
insn=29, live_throughout: 13, 14, 147, 158, dead_or_set: 136
insn=20, live_throughout: 13, 14, 136, 147, dead_or_set: 158, 159
insn=22, live_throughout: 13, 14, 147, dead_or_set: 136, 146, 159
insn=24, live_throughout: 13, 14, dead_or_set: 146, 147
changing reg in insn 29
changing reg in insn 28
changing reg in insn 27
changing reg in insn 29
changing reg in insn 28
changing reg in insn 22
changing reg in insn 22
changing reg in insn 2
changing reg in insn 24
changing reg in insn 7
changing reg in insn 3
changing reg in insn 18
changing reg in insn 15
changing reg in insn 12
changing reg in insn 11
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
Spilling for insn 24.

Reloads for insn # 24
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:147 USARTx ] [147])
                                                        (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:147 USARTx ] [147])
                                                        (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
deleting insn with uid = 3.
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ClockInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5]
;;  ref usage 	r0={1d,2u} r1={2d,5u} r2={6d,5u} r3={6d,5u} r4={1d,1u} r5={1d,1u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 41{19d,22u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 21 2 NOTE_INSN_DELETED)

(note 21 8 11 2 NOTE_INSN_DELETED)

(insn 11 21 12 2 (set (reg:HI 5 r5 [orig:150 USART_ClockInitStruct_6(D)->USART_CPOL ] [150])
        (mem/s:HI (plus:SI (reg/v/f:SI 1 r1 [orig:148 USART_ClockInitStruct ] [148])
                (const_int 2 [0x2])) [5 USART_ClockInitStruct_6(D)->USART_CPOL+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 711 {*thumb2_movhi_insn}
     (nil))

(insn 12 11 7 2 (set (reg:HI 2 r2 [orig:151 USART_ClockInitStruct_6(D)->USART_Clock ] [151])
        (mem/s:HI (reg/v/f:SI 1 r1 [orig:148 USART_ClockInitStruct ] [148]) [5 USART_ClockInitStruct_6(D)->USART_Clock+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 711 {*thumb2_movhi_insn}
     (nil))

(insn 7 12 15 2 (set (reg:HI 3 r3 [orig:149 USARTx_2(D)->CR2 ] [149])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:147 USARTx ] [147])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:390 711 {*thumb2_movhi_insn}
     (nil))

(insn 15 7 18 2 (set (reg:HI 4 r4 [orig:154 USART_ClockInitStruct_6(D)->USART_CPHA ] [154])
        (mem/s:HI (plus:SI (reg/v/f:SI 1 r1 [orig:148 USART_ClockInitStruct ] [148])
                (const_int 4 [0x4])) [5 USART_ClockInitStruct_6(D)->USART_CPHA+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 711 {*thumb2_movhi_insn}
     (nil))

(insn 18 15 13 2 (set (reg:HI 1 r1 [orig:157 USART_ClockInitStruct_6(D)->USART_LastBit ] [157])
        (mem/s:HI (plus:SI (reg/v/f:SI 1 r1 [orig:148 USART_ClockInitStruct ] [148])
                (const_int 6 [0x6])) [5 USART_ClockInitStruct_6(D)->USART_LastBit+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 18 27 2 (set (reg:SI 2 r2 [152])
        (ior:SI (reg:SI 5 r5 [orig:150 USART_ClockInitStruct_6(D)->USART_CPOL ] [150])
            (reg:SI 2 r2 [orig:151 USART_ClockInitStruct_6(D)->USART_Clock ] [151]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 91 {*iorsi3_insn}
     (nil))

(insn 27 13 16 2 (set (reg/v:SI 3 r3 [orig:136 tmpreg ] [136])
        (and:SI (reg:SI 3 r3 [orig:149 USARTx_2(D)->CR2 ] [149])
            (const_int 4294963455 [0xfffff0ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:392 69 {*arm_andsi3_insn}
     (nil))

(insn 16 27 28 2 (set (reg:SI 2 r2 [155])
        (ior:SI (reg:SI 2 r2 [152])
            (reg:SI 4 r4 [orig:154 USART_ClockInitStruct_6(D)->USART_CPHA ] [154]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 91 {*iorsi3_insn}
     (nil))

(insn 28 16 19 2 (set (reg/v:SI 3 r3 [orig:136 tmpreg ] [136])
        (ashift:SI (reg/v:SI 3 r3 [orig:136 tmpreg ] [136])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:392 119 {*arm_shiftsi3}
     (nil))

(insn 19 28 29 2 (set (reg:SI 2 r2 [158])
        (ior:SI (reg:SI 2 r2 [155])
            (reg:SI 1 r1 [orig:157 USART_ClockInitStruct_6(D)->USART_LastBit ] [157]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 91 {*iorsi3_insn}
     (nil))

(insn 29 19 20 2 (set (reg/v:SI 3 r3 [orig:136 tmpreg ] [136])
        (lshiftrt:SI (reg/v:SI 3 r3 [orig:136 tmpreg ] [136])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:392 119 {*arm_shiftsi3}
     (nil))

(insn 20 29 22 2 (set (reg:SI 2 r2 [159])
        (zero_extend:SI (reg:HI 2 r2 [158]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:399 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 22 20 24 2 (set (reg:SI 3 r3 [orig:146 D.7891 ] [146])
        (ior:SI (reg:SI 2 r2 [159])
            (reg/v:SI 3 r3 [orig:136 tmpreg ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:401 91 {*iorsi3_insn}
     (nil))

(insn 24 22 30 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:147 USARTx ] [147])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
        (reg:HI 3 r3 [orig:146 D.7891 ] [146])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:401 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 30 24 31 NOTE_INSN_DELETED)

(note 31 30 0 NOTE_INSN_DELETED)


;; Function USART_ClockStructInit (USART_ClockStructInit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 134: local to bb 2 def dominates all uses has unique first use
Reg 136 uninteresting
Found def insn 2 for 134 to be not moveable
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 136: (insn_list:REG_DEP_TRUE 6 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000


Pass 1 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r134): [1..10]
 a1(r136): [1..8]
Compressing live ranges: from 13 to 2 - 15%
Ranges after the compression:
 a0(r134): [0..1]
 a1(r136): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r134,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r136,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134 1r136
    modified regnos: 134 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a1(r136,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 0
      Popping a1(r136,l0)  -- assign reg 3
Disposition:
    0:r134 l0     0    1:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 134
insn=6, live_throughout: 13, 14, 134, dead_or_set: 136
insn=8, live_throughout: 13, 14, 134, 136, dead_or_set: 
insn=11, live_throughout: 13, 14, 134, 136, dead_or_set: 
insn=14, live_throughout: 13, 14, 134, 136, dead_or_set: 
insn=17, live_throughout: 13, 14, dead_or_set: 134, 136
init_insns for 136: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 2
changing reg in insn 17
changing reg in insn 14
changing reg in insn 11
changing reg in insn 8
changing reg in insn 6
Spilling for insn 8.
Spilling for insn 11.
Spilling for insn 14.
Spilling for insn 17.

Reloads for insn # 8
Reload 0: reload_out (HI) = (mem/s:HI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134]) [5 USART_ClockInitStruct_1(D)->USART_Clock+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:HI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134]) [5 USART_ClockInitStruct_1(D)->USART_Clock+0 S2 A16])

Reloads for insn # 11
Reload 0: reload_out (HI) = (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134])
                                                        (const_int 2 [0x2])) [5 USART_ClockInitStruct_1(D)->USART_CPOL+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134])
                                                        (const_int 2 [0x2])) [5 USART_ClockInitStruct_1(D)->USART_CPOL+0 S2 A16])

Reloads for insn # 14
Reload 0: reload_out (HI) = (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134])
                                                        (const_int 4 [0x4])) [5 USART_ClockInitStruct_1(D)->USART_CPHA+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134])
                                                        (const_int 4 [0x4])) [5 USART_ClockInitStruct_1(D)->USART_CPHA+0 S2 A16])

Reloads for insn # 17
Reload 0: reload_out (HI) = (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134])
                                                        (const_int 6 [0x6])) [5 USART_ClockInitStruct_1(D)->USART_LastBit+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134])
                                                        (const_int 6 [0x6])) [5 USART_ClockInitStruct_1(D)->USART_LastBit+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ClockStructInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,4u} r1={1d} r2={1d} r3={2d,4u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 18{7d,11u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 8 2 (set (reg:SI 3 r3 [136])
        (const_int 0 [0])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:413 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))

(insn 8 6 11 2 (set (mem/s:HI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134]) [5 USART_ClockInitStruct_1(D)->USART_Clock+0 S2 A16])
        (reg:HI 3 r3 [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:413 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 8 14 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134])
                (const_int 2 [0x2])) [5 USART_ClockInitStruct_1(D)->USART_CPOL+0 S2 A16])
        (reg:HI 3 r3 [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:414 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 11 17 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134])
                (const_int 4 [0x4])) [5 USART_ClockInitStruct_1(D)->USART_CPHA+0 S2 A16])
        (reg:HI 3 r3 [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:415 711 {*thumb2_movhi_insn}
     (nil))

(insn 17 14 20 2 (set (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:134 USART_ClockInitStruct ] [134])
                (const_int 6 [0x6])) [5 USART_ClockInitStruct_1(D)->USART_LastBit+0 S2 A16])
        (reg:HI 3 r3 [136])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:416 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 17 21 NOTE_INSN_DELETED)

(note 21 20 0 NOTE_INSN_DELETED)


;; Function USART_Cmd (USART_Cmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Reg 143 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 25(l0): point = 1
   Insn 34(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 20(l0): point = 9
   Insn 30(l0): point = 12
   Insn 15(l0): point = 14
   Insn 13(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 23
   Insn 2(l0): point = 25
 a0(r138): [15..25] [2..11]
 a1(r137): [2..7]
 a2(r143): [8..9]
 a3(r135): [15..16]
 a4(r134): [17..18]
 a5(r140): [19..20]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r138): [4..9] [0..3]
 a1(r137): [0..1]
 a2(r143): [2..3]
 a3(r135): [4..5]
 a4(r134): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r143,l0) a3(r135,l0) a4(r134,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r137)<->a2(r143)@76:shuffle
  cp1:a4(r134)<->a5(r140)@48:shuffle
  cp2:a3(r135)<->a4(r134)@48:shuffle
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r138 1r137 2r143 3r135 4r134 5r140
    modified regnos: 134 135 137 138 140 143
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a5(r140,l0)
      Pushing a4(r134,l0)
      Pushing a3(r135,l0)
      Pushing a2(r143,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 3
      Popping a4(r134,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
Disposition:
    4:r134 l0     3    3:r135 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    2:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=8, live_throughout: 13, 14, 138, dead_or_set: 1
insn=10, live_throughout: 13, 14, 138, dead_or_set: 140
insn=11, live_throughout: 13, 14, 138, dead_or_set: 134, 140
insn=13, live_throughout: 13, 14, 138, dead_or_set: 134, 135
insn=15, live_throughout: 13, 14, dead_or_set: 135, 138
insn=30, live_throughout: 13, 14, dead_or_set: 
insn=18, live_throughout: 13, 14, 138, dead_or_set: 
insn=20, live_throughout: 13, 14, 138, dead_or_set: 143
insn=32, live_throughout: 13, 14, 138, dead_or_set: 137, 143
insn=33, live_throughout: 13, 14, 138, dead_or_set: 137
insn=34, live_throughout: 13, 14, 138, dead_or_set: 137
insn=25, live_throughout: 13, 14, dead_or_set: 137, 138
insn=28, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 34
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 2
changing reg in insn 25
changing reg in insn 15
changing reg in insn 20
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
Spilling for insn 15.
Spilling for insn 25.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])

Reloads for insn # 25
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_Cmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 32{14d,18u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 18)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:433 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 9 10 3 NOTE_INSN_DELETED)

(insn 10 12 11 3 (set (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR1 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:436 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 13 3 (set (reg:SI 3 r3 [orig:134 D.7877 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR1 ] [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:436 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 13 11 15 3 (set (reg:SI 3 r3 [orig:135 D.7878 ] [135])
        (ior:SI (reg:SI 3 r3 [orig:134 D.7877 ] [134])
            (const_int 8192 [0x2000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:436 91 {*iorsi3_insn}
     (nil))

(insn 15 13 30 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7878 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:436 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 30 15 31 3 (set (pc)
        (label_ref 28)) 230 {*arm_jump}
     (nil)
 -> 28)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 31 30 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 31 19 4 32 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 19 22 4 NOTE_INSN_DELETED)

(note 22 21 20 4 NOTE_INSN_DELETED)

(insn 20 22 32 4 (set (reg:HI 3 r3 [orig:143 USARTx_2(D)->CR1 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 711 {*thumb2_movhi_insn}
     (nil))

(insn 32 20 33 4 (set (reg:SI 3 r3 [orig:137 D.7881 ] [137])
        (and:SI (reg:SI 3 r3 [orig:143 USARTx_2(D)->CR1 ] [143])
            (const_int 4294959103 [0xffffdfff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 69 {*arm_andsi3_insn}
     (nil))

(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:137 D.7881 ] [137])
        (ashift:SI (reg:SI 3 r3 [orig:137 D.7881 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 25 4 (set (reg:SI 3 r3 [orig:137 D.7881 ] [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.7881 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 119 {*arm_shiftsi3}
     (nil))

(insn 25 34 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7881 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:441 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 28 25 29 5 31 "" [1 uses])

(note 29 28 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 29 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function USART_SetPrescaler (USART_SetPrescaler)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting
Reg 141 uninteresting
Reg 135 uninteresting
Reg 144 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 18(l0): point = 0
   Insn 16(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 10(l0): point = 10
   Insn 7(l0): point = 12
   Insn 2(l0): point = 14
 a0(r139): [1..14]
 a1(r138): [1..2]
 a2(r136): [3..4]
 a3(r144): [5..6]
 a4(r135): [9..10]
 a5(r141): [11..12]
Compressing live ranges: from 17 to 10 - 58%
Ranges after the compression:
 a0(r139): [0..9]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r144): [4..5]
 a4(r135): [6..7]
 a5(r141): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r139,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r144,l0) a4(r135,l0) a5(r141,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r138,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a3(r144,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r135,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a5(r141,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

  cp0:a4(r135)<->a5(r141)@125:shuffle
  cp1:a2(r136)<->a3(r144)@125:shuffle
  cp2:a1(r138)<->a2(r136)@125:shuffle
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r139 1r138 2r136 3r144 4r135 5r141
    modified regnos: 135 136 138 139 141 144
    border:
    Pressure: GENERAL_REGS=4
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 2 regs less
      Pushing a1(r138,l0)
      Pushing a5(r141,l0)
      Pushing a4(r135,l0)
      Pushing a3(r144,l0)
      Pushing a2(r136,l0)
      Pushing a0(r139,l0)
      Popping a0(r139,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 3
      Popping a3(r144,l0)  -- assign reg 3
      Popping a4(r135,l0)  -- assign reg 3
      Popping a5(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 3
Disposition:
    4:r135 l0     3    2:r136 l0     3    1:r138 l0     3    0:r139 l0     0
    5:r141 l0     3    3:r144 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=7, live_throughout: 1, 13, 14, 139, dead_or_set: 141
insn=10, live_throughout: 1, 13, 14, 139, dead_or_set: 135, 141
insn=12, live_throughout: 1, 13, 14, 139, dead_or_set: 135
insn=13, live_throughout: 1, 13, 14, 139, dead_or_set: 144
insn=14, live_throughout: 1, 13, 14, 139, dead_or_set: 136, 144
insn=16, live_throughout: 13, 14, 139, dead_or_set: 1, 136, 138
insn=18, live_throughout: 13, 14, dead_or_set: 138, 139
changing reg in insn 10
changing reg in insn 14
changing reg in insn 16
changing reg in insn 16
changing reg in insn 2
changing reg in insn 18
changing reg in insn 12
changing reg in insn 13
changing reg in insn 7
changing reg in insn 7
changing reg in insn 13
changing reg in insn 14
Spilling for insn 12.
Spilling for insn 18.

Reloads for insn # 12
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])

Reloads for insn # 18
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SetPrescaler

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={6d,5u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 24{11d,13u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 2 NOTE_INSN_DELETED)

(note 9 8 15 2 NOTE_INSN_DELETED)

(note 15 9 7 2 NOTE_INSN_DELETED)

(insn 7 15 10 2 (set (reg:HI 3 r3 [orig:141 USARTx_1(D)->GTPR ] [141])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:459 711 {*thumb2_movhi_insn}
     (nil))

(insn 10 7 12 2 (set (reg:SI 3 r3 [orig:135 D.7871 ] [135])
        (and:SI (reg:SI 3 r3 [orig:141 USARTx_1(D)->GTPR ] [141])
            (const_int 65280 [0xff00]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:459 69 {*arm_andsi3_insn}
     (nil))

(insn 12 10 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7871 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:459 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 12 14 2 (set (reg:HI 3 r3 [orig:144 USARTx_1(D)->GTPR ] [144])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:461 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 16 2 (set (reg:SI 3 r3 [orig:136 D.7872 ] [136])
        (zero_extend:SI (reg:HI 3 r3 [orig:144 USARTx_1(D)->GTPR ] [144]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:461 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 16 14 18 2 (set (reg:SI 3 r3 [orig:138 D.7874 ] [138])
        (ior:SI (reg:SI 1 r1 [ USART_Prescaler ])
            (reg:SI 3 r3 [orig:136 D.7872 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:461 91 {*iorsi3_insn}
     (nil))

(insn 18 16 21 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
        (reg:HI 3 r3 [orig:138 D.7874 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:461 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 21 18 22 NOTE_INSN_DELETED)

(note 22 21 0 NOTE_INSN_DELETED)


;; Function USART_OverSampling8Cmd (USART_OverSampling8Cmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 142 uninteresting
Reg 141 uninteresting
Reg 135 uninteresting
Reg 144 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:24400
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a6(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:24400
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a6(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 27(l0): point = 1
   Insn 36(l0): point = 3
   Insn 35(l0): point = 5
   Insn 21(l0): point = 7
   Insn 33(l0): point = 10
   Insn 16(l0): point = 12
   Insn 32(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 23
   Insn 2(l0): point = 25
 a0(r138): [13..25] [2..9]
 a1(r137): [2..5]
 a2(r144): [6..7]
 a3(r135): [13..14]
 a4(r141): [15..16]
 a5(r142): [17..18]
 a6(r140): [19..20]
Compressing live ranges: from 28 to 12 - 42%
Ranges after the compression:
 a0(r138): [4..11] [0..3]
 a1(r137): [0..1]
 a2(r144): [2..3]
 a3(r135): [4..5]
 a4(r141): [6..7]
 a5(r142): [8..9]
 a6(r140): [10..11]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r144,l0) a3(r135,l0) a4(r141,l0) a5(r142,l0) a6(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r144,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r141,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r142,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r137)<->a2(r144)@76:shuffle
  cp1:a5(r142)<->a6(r140)@48:shuffle
  cp2:a4(r141)<->a5(r142)@48:shuffle
  cp3:a3(r135)<->a4(r141)@390:move
  regions=1, blocks=6, points=12
    allocnos=7 (big 0), copies=4, conflicts=6, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r138 1r137 2r144 3r135 4r141 5r142 6r140
    modified regnos: 135 137 138 140 141 142 144
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a6(r140,l0)
      Pushing a5(r142,l0)
      Pushing a4(r141,l0)
      Pushing a3(r135,l0)
      Pushing a2(r144,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r144,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 3
      Popping a4(r141,l0)  -- assign reg 3
      Popping a5(r142,l0)  -- assign reg 3
      Popping a6(r140,l0)  -- assign reg 3
Disposition:
    3:r135 l0     3    1:r137 l0     3    0:r138 l0     0    6:r140 l0     3
    4:r141 l0     3    5:r142 l0     3    2:r144 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=8, live_throughout: 13, 14, 138, dead_or_set: 1
insn=10, live_throughout: 13, 14, 138, dead_or_set: 140
insn=12, live_throughout: 13, 14, 138, dead_or_set: 140, 142
insn=13, live_throughout: 13, 14, 138, dead_or_set: 141, 142
insn=32, live_throughout: 13, 14, 138, dead_or_set: 135, 141
insn=16, live_throughout: 13, 14, dead_or_set: 135, 138
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 138, dead_or_set: 
insn=21, live_throughout: 13, 14, 138, dead_or_set: 144
insn=35, live_throughout: 13, 14, 138, dead_or_set: 137, 144
insn=36, live_throughout: 13, 14, 138, dead_or_set: 137
insn=27, live_throughout: 13, 14, dead_or_set: 137, 138
insn=30, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 32
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 2
changing reg in insn 27
changing reg in insn 16
changing reg in insn 21
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 32
changing reg in insn 12
changing reg in insn 13
changing reg in insn 21
Spilling for insn 16.
Spilling for insn 27.

Reloads for insn # 16
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])

Reloads for insn # 27
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
deleting insn with uid = 2.
deleting insn with uid = 32.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_OverSampling8Cmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={7d,6u} r13={1d,5u} r14={1d,1u} r24={1d} r134={1e} 
;;    total ref usage 31{13d,17u,1e} in 10{10 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:480 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 10 3 NOTE_INSN_DELETED)

(insn 10 11 12 3 (set (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR1 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 711 {*thumb2_movhi_insn}
     (nil))

(insn 12 10 13 3 (set (reg:SI 3 r3 [142])
        (not:SI (ashift:SI (reg:SI 3 r3 [orig:140 USARTx_2(D)->CR1 ] [140])
                (const_int 17 [0x11])))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 122 {*not_shiftsi}
     (nil))

(insn 13 12 16 3 (set (reg:SI 3 r3 [141])
        (not:SI (lshiftrt:SI (reg:SI 3 r3 [142])
                (const_int 17 [0x11])))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 122 {*not_shiftsi}
     (expr_list:REG_EQUAL (ior:SI (reg:SI 134 [ D.7865 ])
            (const_int -32768 [0xffffffffffff8000]))
        (nil)))

(insn 16 13 33 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7866 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:483 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 30)) 230 {*arm_jump}
     (nil)
 -> 30)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 37 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 22 20 23 4 NOTE_INSN_DELETED)

(note 23 22 24 4 NOTE_INSN_DELETED)

(note 24 23 21 4 NOTE_INSN_DELETED)

(insn 21 24 35 4 (set (reg:HI 3 r3 [orig:144 USARTx_2(D)->CR1 ] [144])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 711 {*thumb2_movhi_insn}
     (nil))

(insn 35 21 36 4 (set (reg:SI 3 r3 [orig:137 D.7869 ] [137])
        (ashift:SI (reg:SI 3 r3 [orig:144 USARTx_2(D)->CR1 ] [144])
            (const_int 17 [0x11]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 119 {*arm_shiftsi3}
     (nil))

(insn 36 35 27 4 (set (reg:SI 3 r3 [orig:137 D.7869 ] [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.7869 ] [137])
            (const_int 17 [0x11]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 119 {*arm_shiftsi3}
     (nil))

(insn 27 36 30 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7869 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:488 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 30 27 31 5 36 "" [1 uses])

(note 31 30 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 37 31 38 NOTE_INSN_DELETED)

(note 38 37 0 NOTE_INSN_DELETED)


;; Function USART_OneBitMethodCmd (USART_OneBitMethodCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Reg 143 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 25(l0): point = 1
   Insn 34(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 20(l0): point = 9
   Insn 30(l0): point = 12
   Insn 15(l0): point = 14
   Insn 13(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 23
   Insn 2(l0): point = 25
 a0(r138): [15..25] [2..11]
 a1(r137): [2..7]
 a2(r143): [8..9]
 a3(r135): [15..16]
 a4(r134): [17..18]
 a5(r140): [19..20]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r138): [4..9] [0..3]
 a1(r137): [0..1]
 a2(r143): [2..3]
 a3(r135): [4..5]
 a4(r134): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r143,l0) a3(r135,l0) a4(r134,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r137)<->a2(r143)@76:shuffle
  cp1:a4(r134)<->a5(r140)@48:shuffle
  cp2:a3(r135)<->a4(r134)@48:shuffle
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r138 1r137 2r143 3r135 4r134 5r140
    modified regnos: 134 135 137 138 140 143
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a5(r140,l0)
      Pushing a4(r134,l0)
      Pushing a3(r135,l0)
      Pushing a2(r143,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 3
      Popping a4(r134,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
Disposition:
    4:r134 l0     3    3:r135 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    2:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=8, live_throughout: 13, 14, 138, dead_or_set: 1
insn=10, live_throughout: 13, 14, 138, dead_or_set: 140
insn=11, live_throughout: 13, 14, 138, dead_or_set: 134, 140
insn=13, live_throughout: 13, 14, 138, dead_or_set: 134, 135
insn=15, live_throughout: 13, 14, dead_or_set: 135, 138
insn=30, live_throughout: 13, 14, dead_or_set: 
insn=18, live_throughout: 13, 14, 138, dead_or_set: 
insn=20, live_throughout: 13, 14, 138, dead_or_set: 143
insn=32, live_throughout: 13, 14, 138, dead_or_set: 137, 143
insn=33, live_throughout: 13, 14, 138, dead_or_set: 137
insn=34, live_throughout: 13, 14, 138, dead_or_set: 137
insn=25, live_throughout: 13, 14, dead_or_set: 137, 138
insn=28, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 34
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 2
changing reg in insn 25
changing reg in insn 15
changing reg in insn 20
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
Spilling for insn 15.
Spilling for insn 25.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])

Reloads for insn # 25
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_OneBitMethodCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 32{14d,18u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 18)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:506 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 9 10 3 NOTE_INSN_DELETED)

(insn 10 12 11 3 (set (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:509 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 13 3 (set (reg:SI 3 r3 [orig:134 D.7858 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:509 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 13 11 15 3 (set (reg:SI 3 r3 [orig:135 D.7859 ] [135])
        (ior:SI (reg:SI 3 r3 [orig:134 D.7858 ] [134])
            (const_int 2048 [0x800]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:509 91 {*iorsi3_insn}
     (nil))

(insn 15 13 30 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7859 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:509 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 30 15 31 3 (set (pc)
        (label_ref 28)) 230 {*arm_jump}
     (nil)
 -> 28)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 31 30 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 31 19 4 41 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 19 22 4 NOTE_INSN_DELETED)

(note 22 21 20 4 NOTE_INSN_DELETED)

(insn 20 22 32 4 (set (reg:HI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 711 {*thumb2_movhi_insn}
     (nil))

(insn 32 20 33 4 (set (reg:SI 3 r3 [orig:137 D.7862 ] [137])
        (and:SI (reg:SI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
            (const_int 4294965247 [0xfffff7ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 69 {*arm_andsi3_insn}
     (nil))

(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:137 D.7862 ] [137])
        (ashift:SI (reg:SI 3 r3 [orig:137 D.7862 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 25 4 (set (reg:SI 3 r3 [orig:137 D.7862 ] [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.7862 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 119 {*arm_shiftsi3}
     (nil))

(insn 25 34 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7862 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:514 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 28 25 29 5 40 "" [1 uses])

(note 29 28 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 29 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function USART_SendData (USART_SendData)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135: local to bb 2 def dominates all uses has unique first use
Found def insn 2 for 135 to be not moveable
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000


Pass 1 for finding pseudo/allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000

   Insn 11(l0): point = 0
   Insn 15(l0): point = 2
   Insn 14(l0): point = 4
   Insn 2(l0): point = 6
 a0(r135): [1..6]
 a1(r134): [1..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r134): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r134,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r134
    modified regnos: 134 135
    border:
    Pressure: GENERAL_REGS=3
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a1(r134,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 0
      Popping a1(r134,l0)  -- assign reg 1
Disposition:
    1:r134 l0     1    0:r135 l0     0
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 135
insn=14, live_throughout: 13, 14, 135, dead_or_set: 1, 134
insn=15, live_throughout: 13, 14, 135, dead_or_set: 134
insn=11, live_throughout: 13, 14, dead_or_set: 134, 135
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 2
changing reg in insn 11
Spilling for insn 11.

Reloads for insn # 11
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:135 USARTx ] [135])
                                                        (const_int 4 [0x4])) [5 USARTx_3(D)->DR+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:135 USARTx ] [135])
                                                        (const_int 4 [0x4])) [5 USARTx_3(D)->DR+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SendData

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={3d,3u} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 15{8d,7u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(note 8 7 14 2 NOTE_INSN_DELETED)

(insn 14 8 15 2 (set (reg:SI 1 r1 [orig:134 D.7855 ] [134])
        (ashift:SI (reg:SI 1 r1 [ Data ])
            (const_int 23 [0x17]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:564 119 {*arm_shiftsi3}
     (nil))

(insn 15 14 11 2 (set (reg:SI 1 r1 [orig:134 D.7855 ] [134])
        (lshiftrt:SI (reg:SI 1 r1 [orig:134 D.7855 ] [134])
            (const_int 23 [0x17]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:564 119 {*arm_shiftsi3}
     (nil))

(insn 11 15 16 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:135 USARTx ] [135])
                (const_int 4 [0x4])) [5 USARTx_3(D)->DR+0 S2 A16])
        (reg:HI 1 r1 [orig:134 D.7855 ] [134])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:564 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 16 11 17 NOTE_INSN_DELETED)

(note 17 16 0 NOTE_INSN_DELETED)


;; Function USART_ReceiveData (USART_ReceiveData)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 137 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 18(l0): point = 0
   Insn 22(l0): point = 2
   Insn 21(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r138): [5..6]
 a1(r137): [7..8]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r138): [0..1]
 a1(r137): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r138,l0) conflicts:;; a1(r137,l0) conflicts:  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r137
    modified regnos: 137 138
    border:
    Pressure: GENERAL_REGS=2
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 0
Disposition:
    1:r137 l0     0    0:r138 l0     0
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 137
insn=6, live_throughout: 13, 14, dead_or_set: 137, 138
insn=21, live_throughout: 13, 14, dead_or_set: 0, 138
insn=22, live_throughout: 13, 14, dead_or_set: 0
insn=18, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 2
changing reg in insn 6
changing reg in insn 6
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ReceiveData

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={4d,5u} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{9d,8u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 8 2 NOTE_INSN_DELETED)

(note 8 7 9 2 NOTE_INSN_DELETED)

(note 9 8 10 2 NOTE_INSN_DELETED)

(note 10 9 6 2 NOTE_INSN_DELETED)

(insn 6 10 21 2 (set (reg:HI 0 r0 [orig:138 USARTx_1(D)->DR ] [138])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:137 USARTx ] [137])
                (const_int 4 [0x4])) [5 USARTx_1(D)->DR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:579 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 6 22 2 (set (reg/i:SI 0 r0)
        (ashift:SI (reg:SI 0 r0 [orig:138 USARTx_1(D)->DR ] [138])
            (const_int 23 [0x17]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:580 119 {*arm_shiftsi3}
     (nil))

(insn 22 21 18 2 (set (reg/i:SI 0 r0)
        (lshiftrt:SI (reg/i:SI 0 r0)
            (const_int 23 [0x17]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:580 119 {*arm_shiftsi3}
     (nil))

(insn 18 22 23 2 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:580 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 18 24 NOTE_INSN_DELETED)

(note 24 23 0 NOTE_INSN_DELETED)


;; Function USART_SetAddress (USART_SetAddress)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting
Reg 141 uninteresting
Reg 144 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 18(l0): point = 0
   Insn 16(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 23(l0): point = 10
   Insn 22(l0): point = 12
   Insn 21(l0): point = 14
   Insn 7(l0): point = 16
   Insn 2(l0): point = 18
 a0(r139): [1..18]
 a1(r138): [1..2]
 a2(r136): [3..4]
 a3(r144): [5..6]
 a4(r135): [9..14]
 a5(r141): [15..16]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r139): [0..9]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r144): [4..5]
 a4(r135): [6..7]
 a5(r141): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r139,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r144,l0) a4(r135,l0) a5(r141,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r138,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a3(r144,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r135,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a5(r141,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

  cp0:a4(r135)<->a5(r141)@125:shuffle
  cp1:a2(r136)<->a3(r144)@125:shuffle
  cp2:a1(r138)<->a2(r136)@125:shuffle
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r139 1r138 2r136 3r144 4r135 5r141
    modified regnos: 135 136 138 139 141 144
    border:
    Pressure: GENERAL_REGS=4
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 2 regs less
      Pushing a1(r138,l0)
      Pushing a5(r141,l0)
      Pushing a3(r144,l0)
      Pushing a2(r136,l0)
      Pushing a0(r139,l0)
      Pushing a4(r135,l0)
      Popping a4(r135,l0)  -- assign reg 3
      Popping a0(r139,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 3
      Popping a3(r144,l0)  -- assign reg 3
      Popping a5(r141,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 3
Disposition:
    4:r135 l0     3    2:r136 l0     3    1:r138 l0     3    0:r139 l0     0
    5:r141 l0     3    3:r144 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=7, live_throughout: 1, 13, 14, 139, dead_or_set: 141
insn=21, live_throughout: 1, 13, 14, 139, dead_or_set: 135, 141
insn=22, live_throughout: 1, 13, 14, 139, dead_or_set: 135
insn=23, live_throughout: 1, 13, 14, 139, dead_or_set: 135
insn=12, live_throughout: 1, 13, 14, 139, dead_or_set: 135
insn=13, live_throughout: 1, 13, 14, 139, dead_or_set: 144
insn=14, live_throughout: 1, 13, 14, 139, dead_or_set: 136, 144
insn=16, live_throughout: 13, 14, 139, dead_or_set: 1, 136, 138
insn=18, live_throughout: 13, 14, dead_or_set: 138, 139
changing reg in insn 23
changing reg in insn 22
changing reg in insn 21
changing reg in insn 23
changing reg in insn 22
changing reg in insn 14
changing reg in insn 16
changing reg in insn 16
changing reg in insn 2
changing reg in insn 18
changing reg in insn 12
changing reg in insn 13
changing reg in insn 7
changing reg in insn 7
changing reg in insn 13
changing reg in insn 14
Spilling for insn 12.
Spilling for insn 18.

Reloads for insn # 12
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])

Reloads for insn # 18
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SetAddress

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 28{13d,15u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 2 NOTE_INSN_DELETED)

(note 9 8 15 2 NOTE_INSN_DELETED)

(note 15 9 7 2 NOTE_INSN_DELETED)

(insn 7 15 21 2 (set (reg:HI 3 r3 [orig:141 USARTx_1(D)->CR2 ] [141])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 7 22 2 (set (reg:SI 3 r3 [orig:135 D.7848 ] [135])
        (and:SI (reg:SI 3 r3 [orig:141 USARTx_1(D)->CR2 ] [141])
            (const_int 4294967280 [0xfffffff0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 69 {*arm_andsi3_insn}
     (nil))

(insn 22 21 23 2 (set (reg:SI 3 r3 [orig:135 D.7848 ] [135])
        (ashift:SI (reg:SI 3 r3 [orig:135 D.7848 ] [135])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 119 {*arm_shiftsi3}
     (nil))

(insn 23 22 12 2 (set (reg:SI 3 r3 [orig:135 D.7848 ] [135])
        (lshiftrt:SI (reg:SI 3 r3 [orig:135 D.7848 ] [135])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 119 {*arm_shiftsi3}
     (nil))

(insn 12 23 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7848 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:632 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 12 14 2 (set (reg:HI 3 r3 [orig:144 USARTx_1(D)->CR2 ] [144])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:634 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 16 2 (set (reg:SI 3 r3 [orig:136 D.7849 ] [136])
        (zero_extend:SI (reg:HI 3 r3 [orig:144 USARTx_1(D)->CR2 ] [144]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:634 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 16 14 18 2 (set (reg:SI 3 r3 [orig:138 D.7851 ] [138])
        (ior:SI (reg:SI 1 r1 [ USART_Address ])
            (reg:SI 3 r3 [orig:136 D.7849 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:634 91 {*iorsi3_insn}
     (nil))

(insn 18 16 24 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
        (reg:HI 3 r3 [orig:138 D.7851 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:634 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 24 18 25 NOTE_INSN_DELETED)

(note 25 24 0 NOTE_INSN_DELETED)


;; Function USART_ReceiverWakeUpCmd (USART_ReceiverWakeUpCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Reg 143 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 25(l0): point = 1
   Insn 34(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 20(l0): point = 9
   Insn 30(l0): point = 12
   Insn 15(l0): point = 14
   Insn 13(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 23
   Insn 2(l0): point = 25
 a0(r138): [15..25] [2..11]
 a1(r137): [2..7]
 a2(r143): [8..9]
 a3(r135): [15..16]
 a4(r134): [17..18]
 a5(r140): [19..20]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r138): [4..9] [0..3]
 a1(r137): [0..1]
 a2(r143): [2..3]
 a3(r135): [4..5]
 a4(r134): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r143,l0) a3(r135,l0) a4(r134,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r137)<->a2(r143)@76:shuffle
  cp1:a4(r134)<->a5(r140)@48:shuffle
  cp2:a3(r135)<->a4(r134)@48:shuffle
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r138 1r137 2r143 3r135 4r134 5r140
    modified regnos: 134 135 137 138 140 143
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a5(r140,l0)
      Pushing a4(r134,l0)
      Pushing a3(r135,l0)
      Pushing a2(r143,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 3
      Popping a4(r134,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
Disposition:
    4:r134 l0     3    3:r135 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    2:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=8, live_throughout: 13, 14, 138, dead_or_set: 1
insn=10, live_throughout: 13, 14, 138, dead_or_set: 140
insn=11, live_throughout: 13, 14, 138, dead_or_set: 134, 140
insn=13, live_throughout: 13, 14, 138, dead_or_set: 134, 135
insn=15, live_throughout: 13, 14, dead_or_set: 135, 138
insn=30, live_throughout: 13, 14, dead_or_set: 
insn=18, live_throughout: 13, 14, 138, dead_or_set: 
insn=20, live_throughout: 13, 14, 138, dead_or_set: 143
insn=32, live_throughout: 13, 14, 138, dead_or_set: 137, 143
insn=33, live_throughout: 13, 14, 138, dead_or_set: 137
insn=34, live_throughout: 13, 14, 138, dead_or_set: 137
insn=25, live_throughout: 13, 14, dead_or_set: 137, 138
insn=28, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 34
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 2
changing reg in insn 25
changing reg in insn 15
changing reg in insn 20
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
Spilling for insn 15.
Spilling for insn 25.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])

Reloads for insn # 25
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_ReceiverWakeUpCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 32{14d,18u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 18)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:651 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 9 10 3 NOTE_INSN_DELETED)

(insn 10 12 11 3 (set (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR1 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:654 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 13 3 (set (reg:SI 3 r3 [orig:134 D.7842 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR1 ] [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:654 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 13 11 15 3 (set (reg:SI 3 r3 [orig:135 D.7843 ] [135])
        (ior:SI (reg:SI 3 r3 [orig:134 D.7842 ] [134])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:654 91 {*iorsi3_insn}
     (nil))

(insn 15 13 30 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7843 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:654 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 30 15 31 3 (set (pc)
        (label_ref 28)) 230 {*arm_jump}
     (nil)
 -> 28)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 31 30 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 31 19 4 48 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 19 22 4 NOTE_INSN_DELETED)

(note 22 21 20 4 NOTE_INSN_DELETED)

(insn 20 22 32 4 (set (reg:HI 3 r3 [orig:143 USARTx_2(D)->CR1 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 711 {*thumb2_movhi_insn}
     (nil))

(insn 32 20 33 4 (set (reg:SI 3 r3 [orig:137 D.7846 ] [137])
        (and:SI (reg:SI 3 r3 [orig:143 USARTx_2(D)->CR1 ] [143])
            (const_int 4294967293 [0xfffffffd]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 69 {*arm_andsi3_insn}
     (nil))

(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:137 D.7846 ] [137])
        (ashift:SI (reg:SI 3 r3 [orig:137 D.7846 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 25 4 (set (reg:SI 3 r3 [orig:137 D.7846 ] [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.7846 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 119 {*arm_shiftsi3}
     (nil))

(insn 25 34 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_2(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7846 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:659 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 28 25 29 5 47 "" [1 uses])

(note 29 28 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 29 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function USART_WakeUpConfig (USART_WakeUpConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting
Reg 140 uninteresting
Reg 143 uninteresting
Reg 136 uninteresting
Reg 137 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 18(l0): point = 0
   Insn 16(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 23(l0): point = 10
   Insn 22(l0): point = 12
   Insn 21(l0): point = 14
   Insn 7(l0): point = 16
   Insn 2(l0): point = 18
 a0(r138): [1..18]
 a1(r137): [1..2]
 a2(r136): [3..4]
 a3(r143): [5..6]
 a4(r135): [9..14]
 a5(r140): [15..16]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r138): [0..9]
 a1(r137): [0..1]
 a2(r136): [2..3]
 a3(r143): [4..5]
 a4(r135): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r136,l0) a3(r143,l0) a4(r135,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a3(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

  cp0:a4(r135)<->a5(r140)@125:shuffle
  cp1:a2(r136)<->a3(r143)@125:shuffle
  cp2:a1(r137)<->a2(r136)@125:shuffle
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r137 2r136 3r143 4r135 5r140
    modified regnos: 135 136 137 138 140 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
      Pushing a1(r137,l0)
      Pushing a5(r140,l0)
      Pushing a3(r143,l0)
      Pushing a2(r136,l0)
      Pushing a0(r138,l0)
      Pushing a4(r135,l0)
      Popping a4(r135,l0)  -- assign reg 3
      Popping a0(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 3
      Popping a3(r143,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 3
Disposition:
    4:r135 l0     3    2:r136 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    3:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=7, live_throughout: 1, 13, 14, 138, dead_or_set: 140
insn=21, live_throughout: 1, 13, 14, 138, dead_or_set: 135, 140
insn=22, live_throughout: 1, 13, 14, 138, dead_or_set: 135
insn=23, live_throughout: 1, 13, 14, 138, dead_or_set: 135
insn=12, live_throughout: 1, 13, 14, 138, dead_or_set: 135
insn=13, live_throughout: 1, 13, 14, 138, dead_or_set: 143
insn=14, live_throughout: 1, 13, 14, 138, dead_or_set: 136, 143
insn=16, live_throughout: 13, 14, 138, dead_or_set: 1, 136, 137
insn=18, live_throughout: 13, 14, dead_or_set: 137, 138
changing reg in insn 23
changing reg in insn 22
changing reg in insn 21
changing reg in insn 23
changing reg in insn 22
changing reg in insn 14
changing reg in insn 16
changing reg in insn 16
changing reg in insn 2
changing reg in insn 18
changing reg in insn 12
changing reg in insn 13
changing reg in insn 7
changing reg in insn 7
changing reg in insn 13
changing reg in insn 14
Spilling for insn 12.
Spilling for insn 18.

Reloads for insn # 12
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])

Reloads for insn # 18
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_WakeUpConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 28{13d,15u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 2 NOTE_INSN_DELETED)

(note 9 8 15 2 NOTE_INSN_DELETED)

(note 15 9 7 2 NOTE_INSN_DELETED)

(insn 7 15 21 2 (set (reg:HI 3 r3 [orig:140 USARTx_1(D)->CR1 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 7 22 2 (set (reg:SI 3 r3 [orig:135 D.7837 ] [135])
        (and:SI (reg:SI 3 r3 [orig:140 USARTx_1(D)->CR1 ] [140])
            (const_int 4294965247 [0xfffff7ff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 69 {*arm_andsi3_insn}
     (nil))

(insn 22 21 23 2 (set (reg:SI 3 r3 [orig:135 D.7837 ] [135])
        (ashift:SI (reg:SI 3 r3 [orig:135 D.7837 ] [135])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 119 {*arm_shiftsi3}
     (nil))

(insn 23 22 12 2 (set (reg:SI 3 r3 [orig:135 D.7837 ] [135])
        (lshiftrt:SI (reg:SI 3 r3 [orig:135 D.7837 ] [135])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 119 {*arm_shiftsi3}
     (nil))

(insn 12 23 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7837 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:678 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 12 14 2 (set (reg:HI 3 r3 [orig:143 USARTx_1(D)->CR1 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:679 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 16 2 (set (reg:SI 3 r3 [orig:136 D.7838 ] [136])
        (zero_extend:SI (reg:HI 3 r3 [orig:143 USARTx_1(D)->CR1 ] [143]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:679 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 16 14 18 2 (set (reg:SI 3 r3 [orig:137 D.7839 ] [137])
        (ior:SI (reg:SI 1 r1 [ USART_WakeUp ])
            (reg:SI 3 r3 [orig:136 D.7838 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:679 91 {*iorsi3_insn}
     (nil))

(insn 18 16 24 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7839 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:679 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 24 18 25 NOTE_INSN_DELETED)

(note 25 24 0 NOTE_INSN_DELETED)


;; Function USART_LINBreakDetectLengthConfig (USART_LINBreakDetectLengthConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting
Reg 140 uninteresting
Reg 143 uninteresting
Reg 136 uninteresting
Reg 137 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 18(l0): point = 0
   Insn 16(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 23(l0): point = 10
   Insn 22(l0): point = 12
   Insn 21(l0): point = 14
   Insn 7(l0): point = 16
   Insn 2(l0): point = 18
 a0(r138): [1..18]
 a1(r137): [1..2]
 a2(r136): [3..4]
 a3(r143): [5..6]
 a4(r135): [9..14]
 a5(r140): [15..16]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r138): [0..9]
 a1(r137): [0..1]
 a2(r136): [2..3]
 a3(r143): [4..5]
 a4(r135): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r136,l0) a3(r143,l0) a4(r135,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a3(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

  cp0:a4(r135)<->a5(r140)@125:shuffle
  cp1:a2(r136)<->a3(r143)@125:shuffle
  cp2:a1(r137)<->a2(r136)@125:shuffle
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r137 2r136 3r143 4r135 5r140
    modified regnos: 135 136 137 138 140 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
      Pushing a1(r137,l0)
      Pushing a5(r140,l0)
      Pushing a3(r143,l0)
      Pushing a2(r136,l0)
      Pushing a0(r138,l0)
      Pushing a4(r135,l0)
      Popping a4(r135,l0)  -- assign reg 3
      Popping a0(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 3
      Popping a3(r143,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 3
Disposition:
    4:r135 l0     3    2:r136 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    3:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=7, live_throughout: 1, 13, 14, 138, dead_or_set: 140
insn=21, live_throughout: 1, 13, 14, 138, dead_or_set: 135, 140
insn=22, live_throughout: 1, 13, 14, 138, dead_or_set: 135
insn=23, live_throughout: 1, 13, 14, 138, dead_or_set: 135
insn=12, live_throughout: 1, 13, 14, 138, dead_or_set: 135
insn=13, live_throughout: 1, 13, 14, 138, dead_or_set: 143
insn=14, live_throughout: 1, 13, 14, 138, dead_or_set: 136, 143
insn=16, live_throughout: 13, 14, 138, dead_or_set: 1, 136, 137
insn=18, live_throughout: 13, 14, dead_or_set: 137, 138
changing reg in insn 23
changing reg in insn 22
changing reg in insn 21
changing reg in insn 23
changing reg in insn 22
changing reg in insn 14
changing reg in insn 16
changing reg in insn 16
changing reg in insn 2
changing reg in insn 18
changing reg in insn 12
changing reg in insn 13
changing reg in insn 7
changing reg in insn 7
changing reg in insn 13
changing reg in insn 14
Spilling for insn 12.
Spilling for insn 18.

Reloads for insn # 12
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])

Reloads for insn # 18
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_LINBreakDetectLengthConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 28{13d,15u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 2 NOTE_INSN_DELETED)

(note 9 8 15 2 NOTE_INSN_DELETED)

(note 15 9 7 2 NOTE_INSN_DELETED)

(insn 7 15 21 2 (set (reg:HI 3 r3 [orig:140 USARTx_1(D)->CR2 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 7 22 2 (set (reg:SI 3 r3 [orig:135 D.7833 ] [135])
        (and:SI (reg:SI 3 r3 [orig:140 USARTx_1(D)->CR2 ] [140])
            (const_int 4294967263 [0xffffffdf]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 69 {*arm_andsi3_insn}
     (nil))

(insn 22 21 23 2 (set (reg:SI 3 r3 [orig:135 D.7833 ] [135])
        (ashift:SI (reg:SI 3 r3 [orig:135 D.7833 ] [135])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 119 {*arm_shiftsi3}
     (nil))

(insn 23 22 12 2 (set (reg:SI 3 r3 [orig:135 D.7833 ] [135])
        (lshiftrt:SI (reg:SI 3 r3 [orig:135 D.7833 ] [135])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 119 {*arm_shiftsi3}
     (nil))

(insn 12 23 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7833 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:747 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 12 14 2 (set (reg:HI 3 r3 [orig:143 USARTx_1(D)->CR2 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:748 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 16 2 (set (reg:SI 3 r3 [orig:136 D.7834 ] [136])
        (zero_extend:SI (reg:HI 3 r3 [orig:143 USARTx_1(D)->CR2 ] [143]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:748 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 16 14 18 2 (set (reg:SI 3 r3 [orig:137 D.7835 ] [137])
        (ior:SI (reg:SI 1 r1 [ USART_LINBreakDetectLength ])
            (reg:SI 3 r3 [orig:136 D.7834 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:748 91 {*iorsi3_insn}
     (nil))

(insn 18 16 24 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 16 [0x10])) [5 USARTx_1(D)->CR2+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7835 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:748 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 24 18 25 NOTE_INSN_DELETED)

(note 25 24 0 NOTE_INSN_DELETED)


;; Function USART_LINCmd (USART_LINCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Reg 143 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 25(l0): point = 1
   Insn 34(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 20(l0): point = 9
   Insn 30(l0): point = 12
   Insn 15(l0): point = 14
   Insn 13(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 23
   Insn 2(l0): point = 25
 a0(r138): [15..25] [2..11]
 a1(r137): [2..7]
 a2(r143): [8..9]
 a3(r135): [15..16]
 a4(r134): [17..18]
 a5(r140): [19..20]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r138): [4..9] [0..3]
 a1(r137): [0..1]
 a2(r143): [2..3]
 a3(r135): [4..5]
 a4(r134): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r143,l0) a3(r135,l0) a4(r134,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r137)<->a2(r143)@76:shuffle
  cp1:a4(r134)<->a5(r140)@48:shuffle
  cp2:a3(r135)<->a4(r134)@48:shuffle
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r138 1r137 2r143 3r135 4r134 5r140
    modified regnos: 134 135 137 138 140 143
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a5(r140,l0)
      Pushing a4(r134,l0)
      Pushing a3(r135,l0)
      Pushing a2(r143,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 3
      Popping a4(r134,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
Disposition:
    4:r134 l0     3    3:r135 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    2:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=8, live_throughout: 13, 14, 138, dead_or_set: 1
insn=10, live_throughout: 13, 14, 138, dead_or_set: 140
insn=11, live_throughout: 13, 14, 138, dead_or_set: 134, 140
insn=13, live_throughout: 13, 14, 138, dead_or_set: 134, 135
insn=15, live_throughout: 13, 14, dead_or_set: 135, 138
insn=30, live_throughout: 13, 14, dead_or_set: 
insn=18, live_throughout: 13, 14, 138, dead_or_set: 
insn=20, live_throughout: 13, 14, 138, dead_or_set: 143
insn=32, live_throughout: 13, 14, 138, dead_or_set: 137, 143
insn=33, live_throughout: 13, 14, 138, dead_or_set: 137
insn=34, live_throughout: 13, 14, 138, dead_or_set: 137
insn=25, live_throughout: 13, 14, dead_or_set: 137, 138
insn=28, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 34
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 2
changing reg in insn 25
changing reg in insn 15
changing reg in insn 20
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
Spilling for insn 15.
Spilling for insn 25.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])

Reloads for insn # 25
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_LINCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 32{14d,18u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 18)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:765 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 9 10 3 NOTE_INSN_DELETED)

(insn 10 12 11 3 (set (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR2 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:768 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 13 3 (set (reg:SI 3 r3 [orig:134 D.7827 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR2 ] [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:768 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 13 11 15 3 (set (reg:SI 3 r3 [orig:135 D.7828 ] [135])
        (ior:SI (reg:SI 3 r3 [orig:134 D.7827 ] [134])
            (const_int 16384 [0x4000]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:768 91 {*iorsi3_insn}
     (nil))

(insn 15 13 30 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7828 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:768 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 30 15 31 3 (set (pc)
        (label_ref 28)) 230 {*arm_jump}
     (nil)
 -> 28)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 31 30 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 31 19 4 54 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 19 22 4 NOTE_INSN_DELETED)

(note 22 21 20 4 NOTE_INSN_DELETED)

(insn 20 22 32 4 (set (reg:HI 3 r3 [orig:143 USARTx_2(D)->CR2 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 711 {*thumb2_movhi_insn}
     (nil))

(insn 32 20 33 4 (set (reg:SI 3 r3 [orig:137 D.7831 ] [137])
        (and:SI (reg:SI 3 r3 [orig:143 USARTx_2(D)->CR2 ] [143])
            (const_int 4294950911 [0xffffbfff]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 69 {*arm_andsi3_insn}
     (nil))

(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:137 D.7831 ] [137])
        (ashift:SI (reg:SI 3 r3 [orig:137 D.7831 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 25 4 (set (reg:SI 3 r3 [orig:137 D.7831 ] [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.7831 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 119 {*arm_shiftsi3}
     (nil))

(insn 25 34 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 16 [0x10])) [5 USARTx_2(D)->CR2+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7831 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:773 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 28 25 29 5 53 "" [1 uses])

(note 29 28 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 29 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function USART_SendBreak (USART_SendBreak)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 136 uninteresting
Reg 137 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 11(l0): point = 0
   Insn 9(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r136): [1..8]
 a1(r135): [1..2]
 a2(r134): [3..4]
 a3(r137): [5..6]
Compressing live ranges: from 11 to 6 - 54%
Ranges after the compression:
 a0(r136): [0..5]
 a1(r135): [0..1]
 a2(r134): [2..3]
 a3(r137): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r136,l0) conflicts: a1(r135,l0) a2(r134,l0) a3(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r134,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r137,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r134)<->a3(r137)@125:shuffle
  cp1:a1(r135)<->a2(r134)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=2, conflicts=3, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135 2r134 3r137
    modified regnos: 134 135 136 137
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a3(r137,l0)
      Pushing a2(r134,l0)
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 0
      Popping a1(r135,l0)  -- assign reg 3
      Popping a2(r134,l0)  -- assign reg 3
      Popping a3(r137,l0)  -- assign reg 3
Disposition:
    2:r134 l0     3    1:r135 l0     3    0:r136 l0     0    3:r137 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 136
insn=6, live_throughout: 13, 14, 136, dead_or_set: 137
insn=7, live_throughout: 13, 14, 136, dead_or_set: 134, 137
insn=9, live_throughout: 13, 14, 136, dead_or_set: 134, 135
insn=11, live_throughout: 13, 14, dead_or_set: 135, 136
changing reg in insn 7
changing reg in insn 9
changing reg in insn 9
changing reg in insn 2
changing reg in insn 11
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
Spilling for insn 11.

Reloads for insn # 11
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:136 USARTx ] [136])
                                                        (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:136 USARTx ] [136])
                                                        (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SendBreak

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,2u} r1={1d} r2={1d} r3={4d,3u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{9d,8u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 6 2 NOTE_INSN_DELETED)

(insn 6 8 7 2 (set (reg:HI 3 r3 [orig:137 USARTx_1(D)->CR1 ] [137])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:136 USARTx ] [136])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:789 711 {*thumb2_movhi_insn}
     (nil))

(insn 7 6 9 2 (set (reg:SI 3 r3 [orig:134 D.7823 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:137 USARTx_1(D)->CR1 ] [137]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:789 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 9 7 11 2 (set (reg:SI 3 r3 [orig:135 D.7824 ] [135])
        (ior:SI (reg:SI 3 r3 [orig:134 D.7823 ] [134])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:789 91 {*iorsi3_insn}
     (nil))

(insn 11 9 14 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:136 USARTx ] [136])
                (const_int 12 [0xc])) [5 USARTx_1(D)->CR1+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7824 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:789 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 11 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function USART_HalfDuplexCmd (USART_HalfDuplexCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Reg 143 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 25(l0): point = 1
   Insn 34(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 20(l0): point = 9
   Insn 30(l0): point = 12
   Insn 15(l0): point = 14
   Insn 13(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 23
   Insn 2(l0): point = 25
 a0(r138): [15..25] [2..11]
 a1(r137): [2..7]
 a2(r143): [8..9]
 a3(r135): [15..16]
 a4(r134): [17..18]
 a5(r140): [19..20]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r138): [4..9] [0..3]
 a1(r137): [0..1]
 a2(r143): [2..3]
 a3(r135): [4..5]
 a4(r134): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r143,l0) a3(r135,l0) a4(r134,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r137)<->a2(r143)@76:shuffle
  cp1:a4(r134)<->a5(r140)@48:shuffle
  cp2:a3(r135)<->a4(r134)@48:shuffle
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r138 1r137 2r143 3r135 4r134 5r140
    modified regnos: 134 135 137 138 140 143
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a5(r140,l0)
      Pushing a4(r134,l0)
      Pushing a3(r135,l0)
      Pushing a2(r143,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 3
      Popping a4(r134,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
Disposition:
    4:r134 l0     3    3:r135 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    2:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=8, live_throughout: 13, 14, 138, dead_or_set: 1
insn=10, live_throughout: 13, 14, 138, dead_or_set: 140
insn=11, live_throughout: 13, 14, 138, dead_or_set: 134, 140
insn=13, live_throughout: 13, 14, 138, dead_or_set: 134, 135
insn=15, live_throughout: 13, 14, dead_or_set: 135, 138
insn=30, live_throughout: 13, 14, dead_or_set: 
insn=18, live_throughout: 13, 14, 138, dead_or_set: 
insn=20, live_throughout: 13, 14, 138, dead_or_set: 143
insn=32, live_throughout: 13, 14, 138, dead_or_set: 137, 143
insn=33, live_throughout: 13, 14, 138, dead_or_set: 137
insn=34, live_throughout: 13, 14, 138, dead_or_set: 137
insn=25, live_throughout: 13, 14, dead_or_set: 137, 138
insn=28, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 34
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 2
changing reg in insn 25
changing reg in insn 15
changing reg in insn 20
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
Spilling for insn 15.
Spilling for insn 25.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])

Reloads for insn # 25
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_HalfDuplexCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 32{14d,18u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 18)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:842 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 9 10 3 NOTE_INSN_DELETED)

(insn 10 12 11 3 (set (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:845 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 13 3 (set (reg:SI 3 r3 [orig:134 D.7818 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:845 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 13 11 15 3 (set (reg:SI 3 r3 [orig:135 D.7819 ] [135])
        (ior:SI (reg:SI 3 r3 [orig:134 D.7818 ] [134])
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:845 91 {*iorsi3_insn}
     (nil))

(insn 15 13 30 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7819 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:845 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 30 15 31 3 (set (pc)
        (label_ref 28)) 230 {*arm_jump}
     (nil)
 -> 28)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 31 30 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 31 19 4 59 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 19 22 4 NOTE_INSN_DELETED)

(note 22 21 20 4 NOTE_INSN_DELETED)

(insn 20 22 32 4 (set (reg:HI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 711 {*thumb2_movhi_insn}
     (nil))

(insn 32 20 33 4 (set (reg:SI 3 r3 [orig:137 D.7822 ] [137])
        (and:SI (reg:SI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
            (const_int 4294967287 [0xfffffff7]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 69 {*arm_andsi3_insn}
     (nil))

(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:137 D.7822 ] [137])
        (ashift:SI (reg:SI 3 r3 [orig:137 D.7822 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 25 4 (set (reg:SI 3 r3 [orig:137 D.7822 ] [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.7822 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 119 {*arm_shiftsi3}
     (nil))

(insn 25 34 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7822 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:850 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 28 25 29 5 58 "" [1 uses])

(note 29 28 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 29 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function USART_SetGuardTime (USART_SetGuardTime)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 140 uninteresting
Reg 142 uninteresting
Reg 135 uninteresting
Reg 145 uninteresting
Reg 136 uninteresting
Reg 139 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 20(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 10(l0): point = 10
   Insn 7(l0): point = 12
   Insn 2(l0): point = 14
 a0(r140): [1..14]
 a1(r139): [1..2]
 a2(r136): [3..4]
 a3(r145): [5..6]
 a4(r135): [9..10]
 a5(r142): [11..12]
Compressing live ranges: from 17 to 10 - 58%
Ranges after the compression:
 a0(r140): [0..9]
 a1(r139): [0..1]
 a2(r136): [2..3]
 a3(r145): [4..5]
 a4(r135): [6..7]
 a5(r142): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r140,l0) conflicts: a1(r139,l0) a2(r136,l0) a3(r145,l0) a4(r135,l0) a5(r142,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r139,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a3(r145,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r135,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a5(r142,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

  cp0:a4(r135)<->a5(r142)@125:shuffle
  cp1:a2(r136)<->a3(r145)@125:shuffle
  cp2:a1(r139)<->a2(r136)@125:shuffle
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r139 2r136 3r145 4r135 5r142
    modified regnos: 135 136 139 140 142 145
    border:
    Pressure: GENERAL_REGS=4
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 142 of GENERAL_REGS has 2 regs less
      Pushing a1(r139,l0)
      Pushing a5(r142,l0)
      Pushing a4(r135,l0)
      Pushing a3(r145,l0)
      Pushing a2(r136,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 3
      Popping a3(r145,l0)  -- assign reg 3
      Popping a4(r135,l0)  -- assign reg 3
      Popping a5(r142,l0)  -- assign reg 3
      Popping a1(r139,l0)  -- assign reg 3
Disposition:
    4:r135 l0     3    2:r136 l0     3    1:r139 l0     3    0:r140 l0     0
    5:r142 l0     3    3:r145 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 140
insn=7, live_throughout: 1, 13, 14, 140, dead_or_set: 142
insn=10, live_throughout: 1, 13, 14, 140, dead_or_set: 135, 142
insn=12, live_throughout: 1, 13, 14, 140, dead_or_set: 135
insn=13, live_throughout: 1, 13, 14, 140, dead_or_set: 145
insn=14, live_throughout: 1, 13, 14, 140, dead_or_set: 136, 145
insn=18, live_throughout: 13, 14, 140, dead_or_set: 1, 136, 139
insn=20, live_throughout: 13, 14, dead_or_set: 139, 140
changing reg in insn 10
changing reg in insn 14
changing reg in insn 18
changing reg in insn 18
changing reg in insn 2
changing reg in insn 20
changing reg in insn 12
changing reg in insn 13
changing reg in insn 7
changing reg in insn 7
changing reg in insn 13
changing reg in insn 14
Spilling for insn 12.
Spilling for insn 20.

Reloads for insn # 12
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:140 USARTx ] [140])
                                                        (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:140 USARTx ] [140])
                                                        (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])

Reloads for insn # 20
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:140 USARTx ] [140])
                                                        (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:140 USARTx ] [140])
                                                        (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_SetGuardTime

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={6d,5u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 24{11d,13u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 2 NOTE_INSN_DELETED)

(note 9 8 15 2 NOTE_INSN_DELETED)

(note 15 9 17 2 NOTE_INSN_DELETED)

(note 17 15 7 2 NOTE_INSN_DELETED)

(insn 7 17 10 2 (set (reg:HI 3 r3 [orig:142 USARTx_1(D)->GTPR ] [142])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:140 USARTx ] [140])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:926 711 {*thumb2_movhi_insn}
     (nil))

(insn 10 7 12 2 (set (reg:SI 3 r3 [orig:135 D.7811 ] [135])
        (zero_extend:SI (reg:QI 3 r3 [orig:142 USARTx_1(D)->GTPR ] [142]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:926 730 {thumb2_zero_extendqisi2_v6}
     (nil))

(insn 12 10 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:140 USARTx ] [140])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7811 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:926 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 12 14 2 (set (reg:HI 3 r3 [orig:145 USARTx_1(D)->GTPR ] [145])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:140 USARTx ] [140])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 18 2 (set (reg:SI 3 r3 [orig:136 D.7812 ] [136])
        (zero_extend:SI (reg:HI 3 r3 [orig:145 USARTx_1(D)->GTPR ] [145]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 18 14 20 2 (set (reg:SI 3 r3 [orig:139 D.7815 ] [139])
        (ior:SI (ashift:SI (reg:SI 1 r1 [ USART_GuardTime ])
                (const_int 8 [0x8]))
            (reg:SI 3 r3 [orig:136 D.7812 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 262 {*arith_shiftsi}
     (nil))

(insn 20 18 23 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:140 USARTx ] [140])
                (const_int 24 [0x18])) [5 USARTx_1(D)->GTPR+0 S2 A16])
        (reg:HI 3 r3 [orig:139 D.7815 ] [139])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:928 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 20 24 NOTE_INSN_DELETED)

(note 24 23 0 NOTE_INSN_DELETED)


;; Function USART_SmartCardCmd (USART_SmartCardCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Reg 143 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 25(l0): point = 1
   Insn 34(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 20(l0): point = 9
   Insn 30(l0): point = 12
   Insn 15(l0): point = 14
   Insn 13(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 23
   Insn 2(l0): point = 25
 a0(r138): [15..25] [2..11]
 a1(r137): [2..7]
 a2(r143): [8..9]
 a3(r135): [15..16]
 a4(r134): [17..18]
 a5(r140): [19..20]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r138): [4..9] [0..3]
 a1(r137): [0..1]
 a2(r143): [2..3]
 a3(r135): [4..5]
 a4(r134): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r143,l0) a3(r135,l0) a4(r134,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r137)<->a2(r143)@76:shuffle
  cp1:a4(r134)<->a5(r140)@48:shuffle
  cp2:a3(r135)<->a4(r134)@48:shuffle
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r138 1r137 2r143 3r135 4r134 5r140
    modified regnos: 134 135 137 138 140 143
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a5(r140,l0)
      Pushing a4(r134,l0)
      Pushing a3(r135,l0)
      Pushing a2(r143,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 3
      Popping a4(r134,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
Disposition:
    4:r134 l0     3    3:r135 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    2:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=8, live_throughout: 13, 14, 138, dead_or_set: 1
insn=10, live_throughout: 13, 14, 138, dead_or_set: 140
insn=11, live_throughout: 13, 14, 138, dead_or_set: 134, 140
insn=13, live_throughout: 13, 14, 138, dead_or_set: 134, 135
insn=15, live_throughout: 13, 14, dead_or_set: 135, 138
insn=30, live_throughout: 13, 14, dead_or_set: 
insn=18, live_throughout: 13, 14, 138, dead_or_set: 
insn=20, live_throughout: 13, 14, 138, dead_or_set: 143
insn=32, live_throughout: 13, 14, 138, dead_or_set: 137, 143
insn=33, live_throughout: 13, 14, 138, dead_or_set: 137
insn=34, live_throughout: 13, 14, 138, dead_or_set: 137
insn=25, live_throughout: 13, 14, dead_or_set: 137, 138
insn=28, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 34
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 2
changing reg in insn 25
changing reg in insn 15
changing reg in insn 20
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
Spilling for insn 15.
Spilling for insn 25.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])

Reloads for insn # 25
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_SmartCardCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 32{14d,18u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 18)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:944 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 9 10 3 NOTE_INSN_DELETED)

(insn 10 12 11 3 (set (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:947 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 13 3 (set (reg:SI 3 r3 [orig:134 D.7805 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:947 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 13 11 15 3 (set (reg:SI 3 r3 [orig:135 D.7806 ] [135])
        (ior:SI (reg:SI 3 r3 [orig:134 D.7805 ] [134])
            (const_int 32 [0x20]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:947 91 {*iorsi3_insn}
     (nil))

(insn 15 13 30 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7806 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:947 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 30 15 31 3 (set (pc)
        (label_ref 28)) 230 {*arm_jump}
     (nil)
 -> 28)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 31 30 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 31 19 4 64 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 19 22 4 NOTE_INSN_DELETED)

(note 22 21 20 4 NOTE_INSN_DELETED)

(insn 20 22 32 4 (set (reg:HI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 711 {*thumb2_movhi_insn}
     (nil))

(insn 32 20 33 4 (set (reg:SI 3 r3 [orig:137 D.7809 ] [137])
        (and:SI (reg:SI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
            (const_int 4294967263 [0xffffffdf]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 69 {*arm_andsi3_insn}
     (nil))

(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:137 D.7809 ] [137])
        (ashift:SI (reg:SI 3 r3 [orig:137 D.7809 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 25 4 (set (reg:SI 3 r3 [orig:137 D.7809 ] [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.7809 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 119 {*arm_shiftsi3}
     (nil))

(insn 25 34 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7809 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:952 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 28 25 29 5 63 "" [1 uses])

(note 29 28 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 29 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function USART_SmartCardNACKCmd (USART_SmartCardNACKCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Reg 143 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 25(l0): point = 1
   Insn 34(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 20(l0): point = 9
   Insn 30(l0): point = 12
   Insn 15(l0): point = 14
   Insn 13(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 23
   Insn 2(l0): point = 25
 a0(r138): [15..25] [2..11]
 a1(r137): [2..7]
 a2(r143): [8..9]
 a3(r135): [15..16]
 a4(r134): [17..18]
 a5(r140): [19..20]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r138): [4..9] [0..3]
 a1(r137): [0..1]
 a2(r143): [2..3]
 a3(r135): [4..5]
 a4(r134): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r143,l0) a3(r135,l0) a4(r134,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r137)<->a2(r143)@76:shuffle
  cp1:a4(r134)<->a5(r140)@48:shuffle
  cp2:a3(r135)<->a4(r134)@48:shuffle
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r138 1r137 2r143 3r135 4r134 5r140
    modified regnos: 134 135 137 138 140 143
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a5(r140,l0)
      Pushing a4(r134,l0)
      Pushing a3(r135,l0)
      Pushing a2(r143,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 3
      Popping a4(r134,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
Disposition:
    4:r134 l0     3    3:r135 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    2:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=8, live_throughout: 13, 14, 138, dead_or_set: 1
insn=10, live_throughout: 13, 14, 138, dead_or_set: 140
insn=11, live_throughout: 13, 14, 138, dead_or_set: 134, 140
insn=13, live_throughout: 13, 14, 138, dead_or_set: 134, 135
insn=15, live_throughout: 13, 14, dead_or_set: 135, 138
insn=30, live_throughout: 13, 14, dead_or_set: 
insn=18, live_throughout: 13, 14, 138, dead_or_set: 
insn=20, live_throughout: 13, 14, 138, dead_or_set: 143
insn=32, live_throughout: 13, 14, 138, dead_or_set: 137, 143
insn=33, live_throughout: 13, 14, 138, dead_or_set: 137
insn=34, live_throughout: 13, 14, 138, dead_or_set: 137
insn=25, live_throughout: 13, 14, dead_or_set: 137, 138
insn=28, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 34
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 2
changing reg in insn 25
changing reg in insn 15
changing reg in insn 20
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
Spilling for insn 15.
Spilling for insn 25.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])

Reloads for insn # 25
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_SmartCardNACKCmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 32{14d,18u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 18)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:969 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 9 10 3 NOTE_INSN_DELETED)

(insn 10 12 11 3 (set (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:972 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 13 3 (set (reg:SI 3 r3 [orig:134 D.7798 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:972 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 13 11 15 3 (set (reg:SI 3 r3 [orig:135 D.7799 ] [135])
        (ior:SI (reg:SI 3 r3 [orig:134 D.7798 ] [134])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:972 91 {*iorsi3_insn}
     (nil))

(insn 15 13 30 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7799 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:972 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 30 15 31 3 (set (pc)
        (label_ref 28)) 230 {*arm_jump}
     (nil)
 -> 28)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 31 30 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 31 19 4 68 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 19 22 4 NOTE_INSN_DELETED)

(note 22 21 20 4 NOTE_INSN_DELETED)

(insn 20 22 32 4 (set (reg:HI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 711 {*thumb2_movhi_insn}
     (nil))

(insn 32 20 33 4 (set (reg:SI 3 r3 [orig:137 D.7802 ] [137])
        (and:SI (reg:SI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
            (const_int 4294967279 [0xffffffef]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 69 {*arm_andsi3_insn}
     (nil))

(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:137 D.7802 ] [137])
        (ashift:SI (reg:SI 3 r3 [orig:137 D.7802 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 25 4 (set (reg:SI 3 r3 [orig:137 D.7802 ] [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.7802 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 119 {*arm_shiftsi3}
     (nil))

(insn 25 34 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7802 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:977 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 28 25 29 5 67 "" [1 uses])

(note 29 28 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 29 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function USART_IrDAConfig (USART_IrDAConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting
Reg 140 uninteresting
Reg 143 uninteresting
Reg 136 uninteresting
Reg 137 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 18(l0): point = 0
   Insn 16(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 23(l0): point = 10
   Insn 22(l0): point = 12
   Insn 21(l0): point = 14
   Insn 7(l0): point = 16
   Insn 2(l0): point = 18
 a0(r138): [1..18]
 a1(r137): [1..2]
 a2(r136): [3..4]
 a3(r143): [5..6]
 a4(r135): [9..14]
 a5(r140): [15..16]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r138): [0..9]
 a1(r137): [0..1]
 a2(r136): [2..3]
 a3(r143): [4..5]
 a4(r135): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r136,l0) a3(r143,l0) a4(r135,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a3(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a4(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

  cp0:a4(r135)<->a5(r140)@125:shuffle
  cp1:a2(r136)<->a3(r143)@125:shuffle
  cp2:a1(r137)<->a2(r136)@125:shuffle
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r137 2r136 3r143 4r135 5r140
    modified regnos: 135 136 137 138 140 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
      Pushing a1(r137,l0)
      Pushing a5(r140,l0)
      Pushing a3(r143,l0)
      Pushing a2(r136,l0)
      Pushing a0(r138,l0)
      Pushing a4(r135,l0)
      Popping a4(r135,l0)  -- assign reg 3
      Popping a0(r138,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 3
      Popping a3(r143,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 3
Disposition:
    4:r135 l0     3    2:r136 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    3:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=7, live_throughout: 1, 13, 14, 138, dead_or_set: 140
insn=21, live_throughout: 1, 13, 14, 138, dead_or_set: 135, 140
insn=22, live_throughout: 1, 13, 14, 138, dead_or_set: 135
insn=23, live_throughout: 1, 13, 14, 138, dead_or_set: 135
insn=12, live_throughout: 1, 13, 14, 138, dead_or_set: 135
insn=13, live_throughout: 1, 13, 14, 138, dead_or_set: 143
insn=14, live_throughout: 1, 13, 14, 138, dead_or_set: 136, 143
insn=16, live_throughout: 13, 14, 138, dead_or_set: 1, 136, 137
insn=18, live_throughout: 13, 14, dead_or_set: 137, 138
changing reg in insn 23
changing reg in insn 22
changing reg in insn 21
changing reg in insn 23
changing reg in insn 22
changing reg in insn 14
changing reg in insn 16
changing reg in insn 16
changing reg in insn 2
changing reg in insn 18
changing reg in insn 12
changing reg in insn 13
changing reg in insn 7
changing reg in insn 7
changing reg in insn 13
changing reg in insn 14
Spilling for insn 12.
Spilling for insn 18.

Reloads for insn # 12
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])

Reloads for insn # 18
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_IrDAConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 28{13d,15u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 2 NOTE_INSN_DELETED)

(note 9 8 15 2 NOTE_INSN_DELETED)

(note 15 9 7 2 NOTE_INSN_DELETED)

(insn 7 15 21 2 (set (reg:HI 3 r3 [orig:140 USARTx_1(D)->CR3 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 711 {*thumb2_movhi_insn}
     (nil))

(insn 21 7 22 2 (set (reg:SI 3 r3 [orig:135 D.7793 ] [135])
        (and:SI (reg:SI 3 r3 [orig:140 USARTx_1(D)->CR3 ] [140])
            (const_int 4294967291 [0xfffffffb]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 69 {*arm_andsi3_insn}
     (nil))

(insn 22 21 23 2 (set (reg:SI 3 r3 [orig:135 D.7793 ] [135])
        (ashift:SI (reg:SI 3 r3 [orig:135 D.7793 ] [135])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 119 {*arm_shiftsi3}
     (nil))

(insn 23 22 12 2 (set (reg:SI 3 r3 [orig:135 D.7793 ] [135])
        (lshiftrt:SI (reg:SI 3 r3 [orig:135 D.7793 ] [135])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 119 {*arm_shiftsi3}
     (nil))

(insn 12 23 13 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7793 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1041 711 {*thumb2_movhi_insn}
     (nil))

(insn 13 12 14 2 (set (reg:HI 3 r3 [orig:143 USARTx_1(D)->CR3 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1042 711 {*thumb2_movhi_insn}
     (nil))

(insn 14 13 16 2 (set (reg:SI 3 r3 [orig:136 D.7794 ] [136])
        (zero_extend:SI (reg:HI 3 r3 [orig:143 USARTx_1(D)->CR3 ] [143]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1042 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 16 14 18 2 (set (reg:SI 3 r3 [orig:137 D.7795 ] [137])
        (ior:SI (reg:SI 1 r1 [ USART_IrDAMode ])
            (reg:SI 3 r3 [orig:136 D.7794 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1042 91 {*iorsi3_insn}
     (nil))

(insn 18 16 24 2 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_1(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7795 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1042 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 24 18 25 NOTE_INSN_DELETED)

(note 25 24 0 NOTE_INSN_DELETED)


;; Function USART_IrDACmd (USART_IrDACmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Reg 143 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:36600
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 25(l0): point = 1
   Insn 34(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 20(l0): point = 9
   Insn 30(l0): point = 12
   Insn 15(l0): point = 14
   Insn 13(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 23
   Insn 2(l0): point = 25
 a0(r138): [15..25] [2..11]
 a1(r137): [2..7]
 a2(r143): [8..9]
 a3(r135): [15..16]
 a4(r134): [17..18]
 a5(r140): [19..20]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r138): [4..9] [0..3]
 a1(r137): [0..1]
 a2(r143): [2..3]
 a3(r135): [4..5]
 a4(r134): [6..7]
 a5(r140): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r143,l0) a3(r135,l0) a4(r134,l0) a5(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r143,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r135,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r134,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r137)<->a2(r143)@76:shuffle
  cp1:a4(r134)<->a5(r140)@48:shuffle
  cp2:a3(r135)<->a4(r134)@48:shuffle
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=3, conflicts=5, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r138 1r137 2r143 3r135 4r134 5r140
    modified regnos: 134 135 137 138 140 143
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a5(r140,l0)
      Pushing a4(r134,l0)
      Pushing a3(r135,l0)
      Pushing a2(r143,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 3
      Popping a4(r134,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
Disposition:
    4:r134 l0     3    3:r135 l0     3    1:r137 l0     3    0:r138 l0     0
    5:r140 l0     3    2:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=8, live_throughout: 13, 14, 138, dead_or_set: 1
insn=10, live_throughout: 13, 14, 138, dead_or_set: 140
insn=11, live_throughout: 13, 14, 138, dead_or_set: 134, 140
insn=13, live_throughout: 13, 14, 138, dead_or_set: 134, 135
insn=15, live_throughout: 13, 14, dead_or_set: 135, 138
insn=30, live_throughout: 13, 14, dead_or_set: 
insn=18, live_throughout: 13, 14, 138, dead_or_set: 
insn=20, live_throughout: 13, 14, 138, dead_or_set: 143
insn=32, live_throughout: 13, 14, 138, dead_or_set: 137, 143
insn=33, live_throughout: 13, 14, 138, dead_or_set: 137
insn=34, live_throughout: 13, 14, 138, dead_or_set: 137
insn=25, live_throughout: 13, 14, dead_or_set: 137, 138
insn=28, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 34
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 2
changing reg in insn 25
changing reg in insn 15
changing reg in insn 20
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
Spilling for insn 15.
Spilling for insn 25.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])

Reloads for insn # 25
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_IrDACmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={1d,1u} r2={1d} r3={8d,7u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 32{14d,18u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(jump_insn 8 7 9 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1 r1 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 18)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1059 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 18)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 9 10 3 NOTE_INSN_DELETED)

(insn 10 12 11 3 (set (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1062 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 10 13 3 (set (reg:SI 3 r3 [orig:134 D.7787 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:140 USARTx_2(D)->CR3 ] [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1062 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 13 11 15 3 (set (reg:SI 3 r3 [orig:135 D.7788 ] [135])
        (ior:SI (reg:SI 3 r3 [orig:134 D.7787 ] [134])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1062 91 {*iorsi3_insn}
     (nil))

(insn 15 13 30 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.7788 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1062 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 30 15 31 3 (set (pc)
        (label_ref 28)) 230 {*arm_jump}
     (nil)
 -> 28)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 31 30 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 31 19 4 73 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 19 22 4 NOTE_INSN_DELETED)

(note 22 21 20 4 NOTE_INSN_DELETED)

(insn 20 22 32 4 (set (reg:HI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 711 {*thumb2_movhi_insn}
     (nil))

(insn 32 20 33 4 (set (reg:SI 3 r3 [orig:137 D.7791 ] [137])
        (and:SI (reg:SI 3 r3 [orig:143 USARTx_2(D)->CR3 ] [143])
            (const_int 4294967293 [0xfffffffd]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 69 {*arm_andsi3_insn}
     (nil))

(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:137 D.7791 ] [137])
        (ashift:SI (reg:SI 3 r3 [orig:137 D.7791 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 119 {*arm_shiftsi3}
     (nil))

(insn 34 33 25 4 (set (reg:SI 3 r3 [orig:137 D.7791 ] [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.7791 ] [137])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 119 {*arm_shiftsi3}
     (nil))

(insn 25 34 28 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 3 r3 [orig:137 D.7791 ] [137])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1067 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 28 25 29 5 72 "" [1 uses])

(note 29 28 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 29 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function USART_DMACmd (USART_DMACmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 139 uninteresting (no unique first use)
Reg 140 uninteresting (no unique first use)
Reg 142 uninteresting
Reg 134 uninteresting
Reg 135 uninteresting
Reg 145 uninteresting
Reg 136 uninteresting
Reg 138 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a4 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a7(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800


Pass 1 for finding pseudo/allocno costs

    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:12200
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800
  a7(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:7800

   Insn 28(l0): point = 1
   Insn 26(l0): point = 3
   Insn 22(l0): point = 5
   Insn 21(l0): point = 7
   Insn 33(l0): point = 10
   Insn 16(l0): point = 12
   Insn 14(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 9(l0): point = 21
   Insn 3(l0): point = 23
   Insn 2(l0): point = 25
 a0(r139): [13..25] [2..9]
 a1(r138): [2..3]
 a2(r136): [4..5]
 a3(r140): [15..23] [4..9]
 a4(r145): [6..7]
 a5(r135): [13..14]
 a6(r134): [15..16]
 a7(r142): [17..18]
Compressing live ranges: from 28 to 12 - 42%
Ranges after the compression:
 a0(r139): [6..11] [0..5]
 a1(r138): [0..1]
 a2(r136): [2..3]
 a3(r140): [8..11] [2..5]
 a4(r145): [4..5]
 a5(r135): [6..7]
 a6(r134): [8..9]
 a7(r142): [10..11]
+++Allocating 64 bytes for conflict table (uncompressed size 64)
;; a0(r139,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r140,l0) a4(r145,l0) a5(r135,l0) a6(r134,l0) a7(r142,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14

;; a1(r138,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r136,l0) conflicts: a0(r139,l0) a3(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r140,l0) conflicts: a0(r139,l0) a2(r136,l0) a4(r145,l0) a6(r134,l0) a7(r142,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14

;; a4(r145,l0) conflicts: a0(r139,l0) a3(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r135,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r134,l0) conflicts: a0(r139,l0) a3(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r142,l0) conflicts: a0(r139,l0) a3(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r136)<->a4(r145)@76:shuffle
  cp1:a1(r138)<->a2(r136)@76:shuffle
  cp2:a1(r138)<->a3(r140)@76:shuffle
  cp3:a6(r134)<->a7(r142)@48:shuffle
  cp4:a3(r140)<->a5(r135)@48:shuffle
  cp5:a5(r135)<->a6(r134)@48:shuffle
  regions=1, blocks=6, points=12
    allocnos=8 (big 0), copies=6, conflicts=2, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r139 1r138 2r136 3r140 4r145 5r135 6r134 7r142
    modified regnos: 134 135 136 138 139 140 142 145
    border:
    Pressure: GENERAL_REGS=4
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
      Pushing a7(r142,l0)
      Pushing a6(r134,l0)
      Pushing a5(r135,l0)
      Pushing a4(r145,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a3(r140,l0)
      Pushing a0(r139,l0)
      Popping a0(r139,l0)  -- assign reg 0
      Popping a3(r140,l0)  -- assign reg 1
      Popping a1(r138,l0)  -- assign reg 1
      Popping a2(r136,l0)  -- assign reg 3
      Popping a4(r145,l0)  -- assign reg 3
      Popping a5(r135,l0)  -- assign reg 1
      Popping a6(r134,l0)  -- assign reg 3
      Popping a7(r142,l0)  -- assign reg 3
Disposition:
    6:r134 l0     3    5:r135 l0     1    2:r136 l0     3    1:r138 l0     1
    0:r139 l0     0    3:r140 l0     1    7:r142 l0     3    4:r145 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, 14, dead_or_set: 0, 139
insn=3, live_throughout: 2, 13, 14, 139, dead_or_set: 1, 140
insn=9, live_throughout: 13, 14, 139, 140, dead_or_set: 2
insn=11, live_throughout: 13, 14, 139, 140, dead_or_set: 142
insn=12, live_throughout: 13, 14, 139, 140, dead_or_set: 134, 142
insn=14, live_throughout: 13, 14, 139, dead_or_set: 134, 135, 140
insn=16, live_throughout: 13, 14, dead_or_set: 135, 139
insn=33, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, 14, 139, 140, dead_or_set: 
insn=21, live_throughout: 13, 14, 139, 140, dead_or_set: 145
insn=22, live_throughout: 13, 14, 139, 140, dead_or_set: 136, 145
insn=26, live_throughout: 13, 14, 139, dead_or_set: 136, 138, 140
insn=28, live_throughout: 13, 14, dead_or_set: 138, 139
insn=31, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 12
changing reg in insn 14
changing reg in insn 14
changing reg in insn 22
changing reg in insn 26
changing reg in insn 26
changing reg in insn 2
changing reg in insn 28
changing reg in insn 16
changing reg in insn 21
changing reg in insn 11
changing reg in insn 3
changing reg in insn 26
changing reg in insn 14
changing reg in insn 11
changing reg in insn 12
changing reg in insn 21
changing reg in insn 22
Spilling for insn 16.
Spilling for insn 28.

Reloads for insn # 16
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])

Reloads for insn # 28
Reload 0: reload_out (HI) = (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                                                        (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
deleting insn with uid = 2.
deleting insn with uid = 3.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


USART_DMACmd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d,4u} r1={3d,4u} r2={1d,1u} r3={5d,4u} r13={1d,5u} r14={1d,1u} r24={1d} 
;;    total ref usage 32{13d,19u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 6 5 2 NOTE_INSN_DELETED)

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 9 2 NOTE_INSN_DELETED)

(jump_insn 9 8 10 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 2 r2 [ NewState ])
                        (const_int 0 [0]))
                    (label_ref 19)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1106 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 19)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 10 9 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 10 11 3 NOTE_INSN_DELETED)

(insn 11 13 12 3 (set (reg:HI 3 r3 [orig:142 USARTx_2(D)->CR3 ] [142])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1110 711 {*thumb2_movhi_insn}
     (nil))

(insn 12 11 14 3 (set (reg:SI 3 r3 [orig:134 D.7779 ] [134])
        (zero_extend:SI (reg:HI 3 r3 [orig:142 USARTx_2(D)->CR3 ] [142]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1110 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 14 12 16 3 (set (reg:SI 1 r1 [orig:135 D.7780 ] [135])
        (ior:SI (reg/v:SI 1 r1 [orig:140 USART_DMAReq ] [140])
            (reg:SI 3 r3 [orig:134 D.7779 ] [134]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1110 91 {*iorsi3_insn}
     (nil))

(insn 16 14 33 3 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 1 r1 [orig:135 D.7780 ] [135])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1110 711 {*thumb2_movhi_insn}
     (nil))

(jump_insn 33 16 34 3 (set (pc)
        (label_ref 31)) 230 {*arm_jump}
     (nil)
 -> 31)
;; End of basic block 3 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 34 33 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 34 20 4 77 "" [1 uses])

(note 20 19 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 23 20 25 4 NOTE_INSN_DELETED)

(note 25 23 21 4 NOTE_INSN_DELETED)

(insn 21 25 22 4 (set (reg:HI 3 r3 [orig:145 USARTx_2(D)->CR3 ] [145])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 711 {*thumb2_movhi_insn}
     (nil))

(insn 22 21 26 4 (set (reg:SI 3 r3 [orig:136 D.7782 ] [136])
        (zero_extend:SI (reg:HI 3 r3 [orig:145 USARTx_2(D)->CR3 ] [145]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 26 22 28 4 (set (reg:SI 1 r1 [orig:138 D.7784 ] [138])
        (and:SI (not:SI (reg/v:SI 1 r1 [orig:140 USART_DMAReq ] [140]))
            (reg:SI 3 r3 [orig:136 D.7782 ] [136]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 83 {andsi_notsi_si}
     (nil))

(insn 28 26 31 4 (set (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139])
                (const_int 20 [0x14])) [5 USARTx_2(D)->CR3+0 S2 A16])
        (reg:HI 1 r1 [orig:138 D.7784 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1116 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 31 28 32 5 76 "" [1 uses])

(note 32 31 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 32 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function USART_ITConfig (USART_ITConfig)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 61.
verify found no changes in insn with uid = 61.
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
Reg 151 uninteresting
Reg 138: def dominates all uses has unique first use
Reg 150 uninteresting (no unique first use)
Reg 152: def dominates all uses has unique first use
Reg 156 uninteresting
Reg 142 uninteresting (no unique first use)
Reg 144 uninteresting
Reg 145 uninteresting
Reg 147 uninteresting
Reg 149 uninteresting
Reg 138 not local to one basic block
Reg 152 not local to one basic block
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 156: (insn_list:REG_DEP_TRUE 61 (nil))

Pass 0 for finding pseudo/allocno costs

    a10 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r152,l0) best LO_REGS, cover GENERAL_REGS
    a11 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r149,l0) best LO_REGS, cover GENERAL_REGS
    a2 (r147,l0) best LO_REGS, cover GENERAL_REGS
    a4 (r145,l0) best LO_REGS, cover GENERAL_REGS
    a5 (r144,l0) best LO_REGS, cover GENERAL_REGS
    a3 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:29990
  a1(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a7(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27200
  a9(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding pseudo/allocno costs

    r156: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r152: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r149: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r147: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r145: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r144: preferred LO_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:29990
  a1(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a2(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:1220,1220 GENERAL_REGS:1220,1220 MEM:12200
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:780,780 GENERAL_REGS:780,780 MEM:7800
  a6(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:20000
  a7(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27200
  a9(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 49(l0): point = 1
   Insn 48(l0): point = 3
   Insn 46(l0): point = 5
   Insn 58(l0): point = 8
   Insn 40(l0): point = 10
   Insn 39(l0): point = 12
   Insn 38(l0): point = 14
   Insn 35(l0): point = 17
   Insn 31(l0): point = 20
   Insn 56(l0): point = 23
   Insn 26(l0): point = 25
   Insn 24(l0): point = 28
   Insn 23(l0): point = 30
   Insn 54(l0): point = 33
   Insn 18(l0): point = 35
   Insn 16(l0): point = 38
   Insn 15(l0): point = 40
   Insn 14(l0): point = 42
   Insn 61(l0): point = 44
   Insn 4(l0): point = 46
   Insn 2(l0): point = 48
   Insn 11(l0): point = 50
   Insn 12(l0): point = 52
   Insn 3(l0): point = 54
 a0(r134): [33..35] [23..25] [11..20] [2..7]
 a1(r149): [2..3]
 a2(r147): [4..5]
 a3(r142): [13..42] [4..7]
 a4(r145): [11..12]
 a5(r144): [13..14]
 a6(r152): [18..46]
 a7(r150): [36..48] [26..32] [21..22]
 a8(r138): [38..50] [31..32]
 a9(r155): [43..52]
 a10(r156): [43..44]
 a11(r151): [51..54]
Compressing live ranges: from 57 to 24 - 42%
Ranges after the compression:
 a0(r134): [16..17] [12..13] [4..9] [0..3]
 a1(r149): [0..1]
 a2(r147): [2..3]
 a3(r142): [6..19] [2..3]
 a4(r145): [4..5]
 a5(r144): [6..7]
 a6(r152): [8..21]
 a7(r150): [18..21] [14..15] [10..11]
 a8(r138): [18..21] [14..15]
 a9(r155): [20..23]
 a10(r156): [20..21]
 a11(r151): [22..23]
+++Allocating 96 bytes for conflict table (uncompressed size 96)
;; a0(r134,l0) conflicts: a1(r149,l0) a2(r147,l0) a3(r142,l0) a4(r145,l0) a5(r144,l0) a6(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r149,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r147,l0) conflicts: a0(r134,l0) a3(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r142,l0) conflicts: a0(r134,l0) a2(r147,l0) a5(r144,l0) a6(r152,l0) a7(r150,l0) a8(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r145,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r144,l0) conflicts: a0(r134,l0) a3(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r152,l0) conflicts: a0(r134,l0) a3(r142,l0) a7(r150,l0) a8(r138,l0) a10(r156,l0) a9(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r150,l0) conflicts: a3(r142,l0) a6(r152,l0) a8(r138,l0) a10(r156,l0) a9(r155,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14

;; a8(r138,l0) conflicts: a3(r142,l0) a6(r152,l0) a7(r150,l0) a10(r156,l0) a9(r155,l0)
;;     total conflict hard regs: 0 2 14
;;     conflict hard regs: 0 2 14

;; a9(r155,l0) conflicts: a6(r152,l0) a7(r150,l0) a8(r138,l0) a10(r156,l0) a11(r151,l0)
;;     total conflict hard regs: 0 2 14
;;     conflict hard regs: 0 2 14

;; a10(r156,l0) conflicts: a6(r152,l0) a7(r150,l0) a8(r138,l0) a9(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a11(r151,l0) conflicts: a9(r155,l0)
;;     total conflict hard regs: 0 2 14
;;     conflict hard regs: 0 2 14

  cp0:a1(r149)<->a2(r147)@76:shuffle
  cp1:a1(r149)<->a3(r142)@76:shuffle
  cp2:a4(r145)<->a5(r144)@48:shuffle
  cp3:a3(r142)<->a4(r145)@48:shuffle
  cp4:a0(r134)<->a7(r150)@124:shuffle
  cp5:a8(r138)<->a11(r151)@125:shuffle
  cp6:a3(r142)<->a10(r156)@125:shuffle
  cp7:a3(r142)<->a9(r155)@125:shuffle
  regions=1, blocks=11, points=24
    allocnos=12 (big 0), copies=8, conflicts=3, ranges=19

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r134 1r149 2r147 3r142 4r145 5r144 6r152 7r150 8r138 9r155 10r156 11r151
    modified regnos: 134 138 142 144 145 147 149 150 151 152 155 156
    border:
    Pressure: GENERAL_REGS=6
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 155 of GENERAL_REGS has 3 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 3 regs less
      Pushing a5(r144,l0)
      Pushing a4(r145,l0)
      Pushing a2(r147,l0)
      Pushing a1(r149,l0)
      Pushing a10(r156,l0)
      Pushing a6(r152,l0)
      Pushing a3(r142,l0)
      Pushing a0(r134,l0)
      Pushing a7(r150,l0)
      Pushing a9(r155,l0)
      Pushing a8(r138,l0)
      Pushing a11(r151,l0)
      Popping a11(r151,l0)  -- assign reg 1
      Popping a8(r138,l0)  -- assign reg 1
      Popping a9(r155,l0)  -- assign reg 3
      Popping a7(r150,l0)  -- assign reg 0
      Popping a0(r134,l0)  -- assign reg 0
      Popping a3(r142,l0)  -- assign reg 3
      Popping a6(r152,l0)  -- assign reg 2
      Popping a10(r156,l0)  -- assign reg 4
      Popping a1(r149,l0)  -- assign reg 3
      Popping a2(r147,l0)  -- assign reg 2
      Popping a4(r145,l0)  -- assign reg 3
      Popping a5(r144,l0)  -- assign reg 2
Disposition:
    0:r134 l0     0    8:r138 l0     1    3:r142 l0     3    5:r144 l0     2
    4:r145 l0     3    2:r147 l0     2    1:r149 l0     3    7:r150 l0     0
   11:r151 l0     1    6:r152 l0     2    9:r155 l0     3   10:r156 l0     4
New iteration of spill/restore move
+++Costs: overall -12000, reg -12000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 0, 2, 13, 14, dead_or_set: 1, 151
insn=12, live_throughout: 0, 2, 13, 14, 151, dead_or_set: 155
insn=11, live_throughout: 0, 2, 13, 14, 155, dead_or_set: 138, 151
insn=2, live_throughout: 2, 13, 14, 138, 155, dead_or_set: 0, 150
insn=4, live_throughout: 13, 14, 138, 150, 155, dead_or_set: 2, 152
insn=61, live_throughout: 13, 14, 138, 150, 152, 155, dead_or_set: 156
insn=14, live_throughout: 13, 14, 138, 150, 152, dead_or_set: 142, 155, 156
insn=15, live_throughout: 13, 14, 138, 142, 150, 152, dead_or_set: 
insn=16, live_throughout: 13, 14, 138, 142, 150, 152, dead_or_set: 
insn=18, live_throughout: 13, 14, 142, 152, dead_or_set: 134, 150
insn=54, live_throughout: 13, 14, 134, 142, 152, dead_or_set: 
insn=21, live_throughout: 13, 14, 138, 142, 150, 152, dead_or_set: 
insn=23, live_throughout: 13, 14, 142, 150, 152, dead_or_set: 138
insn=24, live_throughout: 13, 14, 142, 150, 152, dead_or_set: 
insn=26, live_throughout: 13, 14, 142, 152, dead_or_set: 134, 150
insn=56, live_throughout: 13, 14, 134, 142, 152, dead_or_set: 
insn=29, live_throughout: 13, 14, 142, 150, 152, dead_or_set: 
insn=31, live_throughout: 13, 14, 142, 152, dead_or_set: 134, 150
insn=32, live_throughout: 13, 14, 134, 142, 152, dead_or_set: 
insn=35, live_throughout: 13, 14, 134, 142, dead_or_set: 152
insn=38, live_throughout: 13, 14, 134, 142, dead_or_set: 144
insn=39, live_throughout: 13, 14, 134, dead_or_set: 142, 144, 145
insn=40, live_throughout: 13, 14, dead_or_set: 134, 145
insn=58, live_throughout: 13, 14, dead_or_set: 
insn=43, live_throughout: 13, 14, 134, 142, dead_or_set: 
insn=46, live_throughout: 13, 14, 134, 142, dead_or_set: 147
insn=48, live_throughout: 13, 14, 134, dead_or_set: 142, 147, 149
insn=49, live_throughout: 13, 14, dead_or_set: 134, 149
insn=52, live_throughout: 13, 14, dead_or_set: 
init_insns for 156: (insn_list:REG_DEP_TRUE 61 (nil))
changing reg in insn 31
changing reg in insn 26
changing reg in insn 18
changing reg in insn 49
changing reg in insn 46
changing reg in insn 40
changing reg in insn 38
changing reg in insn 11
changing reg in insn 23
changing reg in insn 15
changing reg in insn 14
changing reg in insn 48
changing reg in insn 39
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 46
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 2
changing reg in insn 31
changing reg in insn 26
changing reg in insn 18
changing reg in insn 3
changing reg in insn 11
changing reg in insn 12
changing reg in insn 4
changing reg in insn 35
changing reg in insn 12
changing reg in insn 14
changing reg in insn 14
changing reg in insn 61
changing reg in insn 14
Spilling for insn 40.
Spilling for insn 49.

Reloads for insn # 40
Reload 0: reload_out (SI) = (mem/v:SI (reg/v:SI 0 r0 [orig:134 usartxbase ] [134]) [4 *usartxbase.3_21+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/v:SI 0 r0 [orig:134 usartxbase ] [134]) [4 *usartxbase.3_21+0 S4 A32])

Reloads for insn # 49
Reload 0: reload_out (SI) = (mem/v:SI (reg/v:SI 0 r0 [orig:134 usartxbase ] [134]) [4 *usartxbase.3_25+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:SI (reg/v:SI 0 r0 [orig:134 usartxbase ] [134]) [4 *usartxbase.3_25+0 S4 A32])
deleting insn with uid = 3.
deleting insn with uid = 2.
deleting insn with uid = 4.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)


USART_ITConfig

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 24[cc]
;;  ref usage 	r0={4d,7u} r1={2d,4u} r2={3d,3u} r3={5d,5u,1e} r4={1d,1u} r13={1d,10u} r14={1d,1u} r24={3d,2u} 
;;    total ref usage 54{20d,33u,1e} in 21{21 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 10 2 NOTE_INSN_DELETED)

(note 10 9 12 2 NOTE_INSN_DELETED)

(insn 12 10 11 2 (set (reg:SI 3 r3 [155])
        (and:SI (reg/v:SI 1 r1 [orig:151 USART_IT ] [151])
            (const_int 31 [0x1f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1252 69 {*arm_andsi3_insn}
     (nil))

(insn 11 12 61 2 (set (reg/v:SI 1 r1 [orig:138 usartreg ] [138])
        (zero_extract:SI (reg/v:SI 1 r1 [orig:151 USART_IT ] [151])
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1249 131 {extzv_t2}
     (nil))

(insn 61 11 14 2 (set (reg:SI 4 r4 [156])
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1253 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 14 61 15 2 (set (reg/v:SI 3 r3 [orig:142 itmask ] [142])
        (ashift:SI (reg:SI 4 r4 [156])
            (reg:SI 3 r3 [155]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1253 119 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg:SI 3 r3 [155]))
        (nil)))

(insn 15 14 16 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 1 r1 [orig:138 usartreg ] [138])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1255 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1255 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 21)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 54 3 (set (reg/v:SI 0 r0 [orig:134 usartxbase ] [134])
        (plus:SI (reg/v/f:SI 0 r0 [orig:150 USARTx ] [150])
            (const_int 12 [0xc]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1257 4 {*arm_addsi3}
     (nil))

(jump_insn 54 18 55 3 (set (pc)
        (label_ref 32)) 230 {*arm_jump}
     (nil)
 -> 32)
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 55 54 21)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 21 55 22 4 81 "" [1 uses])

(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 1 r1 [orig:138 usartreg ] [138])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1259 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1259 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 29)
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 56 5 (set (reg/v:SI 0 r0 [orig:134 usartxbase ] [134])
        (plus:SI (reg/v/f:SI 0 r0 [orig:150 USARTx ] [150])
            (const_int 16 [0x10]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1261 4 {*arm_addsi3}
     (nil))

(jump_insn 56 26 57 5 (set (pc)
        (label_ref 32)) 230 {*arm_jump}
     (nil)
 -> 32)
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 57 56 29)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 29 57 30 6 83 "" [1 uses])

(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 (set (reg/v:SI 0 r0 [orig:134 usartxbase ] [134])
        (plus:SI (reg/v/f:SI 0 r0 [orig:150 USARTx ] [150])
            (const_int 20 [0x14]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1265 4 {*arm_addsi3}
     (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%] 
(code_label 32 31 33 7 82 "" [2 uses])

(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 34 33 35 7 NOTE_INSN_DELETED)

(jump_insn 35 34 36 7 (parallel [
            (set (pc)
                (if_then_else (eq (reg/v:SI 2 r2 [orig:152 NewState ] [152])
                        (const_int 0 [0]))
                    (label_ref 43)
                    (pc)))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1267 748 {*thumb2_cbz}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 43)
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  7 [39.0%]  (fallthru)
(note 36 35 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 36 39 8 (set (reg:SI 2 r2 [orig:144 D.7771 ] [144])
        (mem/v:SI (reg/v:SI 0 r0 [orig:134 usartxbase ] [134]) [4 *usartxbase.3_21+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1269 709 {*thumb2_movsi_insn}
     (nil))

(insn 39 38 40 8 (set (reg:SI 3 r3 [orig:145 D.7772 ] [145])
        (ior:SI (reg:SI 2 r2 [orig:144 D.7771 ] [144])
            (reg/v:SI 3 r3 [orig:142 itmask ] [142]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1269 91 {*iorsi3_insn}
     (nil))

(insn 40 39 58 8 (set (mem/v:SI (reg/v:SI 0 r0 [orig:134 usartxbase ] [134]) [4 *usartxbase.3_21+0 S4 A32])
        (reg:SI 3 r3 [orig:145 D.7772 ] [145])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1269 709 {*thumb2_movsi_insn}
     (nil))

(jump_insn 58 40 59 8 (set (pc)
        (label_ref 52)) 230 {*arm_jump}
     (nil)
 -> 52)
;; End of basic block 8 -> ( 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%] 

(barrier 59 58 43)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  7 [61.0%] 
(code_label 43 59 44 9 84 "" [1 uses])

(note 44 43 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 47 44 46 9 NOTE_INSN_DELETED)

(insn 46 47 48 9 (set (reg:SI 2 r2 [orig:147 D.7774 ] [147])
        (mem/v:SI (reg/v:SI 0 r0 [orig:134 usartxbase ] [134]) [4 *usartxbase.3_25+0 S4 A32])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1273 709 {*thumb2_movsi_insn}
     (nil))

(insn 48 46 49 9 (set (reg:SI 3 r3 [orig:149 D.7776 ] [149])
        (and:SI (not:SI (reg/v:SI 3 r3 [orig:142 itmask ] [142]))
            (reg:SI 2 r2 [orig:147 D.7774 ] [147]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1273 83 {andsi_notsi_si}
     (nil))

(insn 49 48 52 9 (set (mem/v:SI (reg/v:SI 0 r0 [orig:134 usartxbase ] [134]) [4 *usartxbase.3_25+0 S4 A32])
        (reg:SI 3 r3 [orig:149 D.7776 ] [149])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1273 709 {*thumb2_movsi_insn}
     (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 52 49 53 10 80 "" [1 uses])

(note 53 52 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 60 53 62 NOTE_INSN_DELETED)

(note 62 60 0 NOTE_INSN_DELETED)


;; Function USART_GetFlagStatus (USART_GetFlagStatus)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 138 uninteresting
Reg 140 uninteresting
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 22(l0): point = 0
   Insn 19(l0): point = 2
   Insn 11(l0): point = 4
   Insn 7(l0): point = 6
   Insn 2(l0): point = 8
 a0(r140): [5..6]
 a1(r138): [7..8]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r140): [0..1]
 a1(r138): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r140,l0) conflicts:;; a1(r138,l0) conflicts:  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r138
    modified regnos: 138 140
    border:
    Pressure: GENERAL_REGS=3
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
      Pushing a1(r138,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 3
      Popping a1(r138,l0)  -- assign reg 0
Disposition:
    1:r138 l0     0    0:r140 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 138
insn=7, live_throughout: 1, 13, 14, dead_or_set: 138, 140
insn=11, live_throughout: 13, 14, dead_or_set: 1, 140
insn=19, live_throughout: 13, 14, dead_or_set: 0
insn=22, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 2
changing reg in insn 7
changing reg in insn 7
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_GetFlagStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={2d,1u} r13={1d,2u} r14={1d,1u} r24={1d,1u} 
;;    total ref usage 18{9d,9u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 2 NOTE_INSN_DELETED)

(note 9 8 10 2 NOTE_INSN_DELETED)

(note 10 9 12 2 NOTE_INSN_DELETED)

(note 12 10 13 2 NOTE_INSN_DELETED)

(note 13 12 14 2 NOTE_INSN_DELETED)

(note 14 13 7 2 NOTE_INSN_DELETED)

(insn 7 14 11 2 (set (reg:HI 3 r3 [orig:140 USARTx_3(D)->SR ] [140])
        (mem/s/v:HI (reg/v/f:SI 0 r0 [orig:138 USARTx ] [138]) [5 USARTx_3(D)->SR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1308 711 {*thumb2_movhi_insn}
     (nil))

(insn 11 7 19 2 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 1 r1 [ USART_FLAG ])
                        (reg:SI 3 r3 [orig:140 USARTx_3(D)->SR ] [140]))
                    (const_int 0 [0])))
            (clobber (scratch:SI))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1310 72 {*andsi3_compare0_scratch}
     (nil))

(insn 19 11 22 2 (set (reg/i:SI 0 r0)
        (ne:SI (reg:CC_NOOV 24 cc)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1317 713 {*thumb2_mov_scc}
     (nil))

(insn 22 19 25 2 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1317 -1
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 25 22 26 NOTE_INSN_DELETED)

(note 26 25 0 NOTE_INSN_DELETED)


;; Function USART_ClearFlag (USART_ClearFlag)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 135: local to bb 2 def dominates all uses has unique first use
Reg 137 uninteresting
Reg 134 uninteresting
Found def insn 2 for 135 to be not moveable
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 10(l0): point = 0
   Insn 13(l0): point = 2
   Insn 7(l0): point = 4
   Insn 2(l0): point = 6
 a0(r135): [1..6]
 a1(r134): [1..2]
 a2(r137): [3..4]
Compressing live ranges: from 9 to 4 - 44%
Ranges after the compression:
 a0(r135): [0..3]
 a1(r134): [0..1]
 a2(r137): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r135,l0) conflicts: a1(r134,l0) a2(r137,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

;; a1(r134,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r137,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r134)<->a2(r137)@1000:move
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=1, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r134 2r137
    modified regnos: 134 135 137
    border:
    Pressure: GENERAL_REGS=3
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a2(r137,l0)
      Pushing a1(r134,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 0
      Popping a1(r134,l0)  -- assign reg 1
      Popping a2(r137,l0)  -- assign reg 1
Disposition:
    1:r134 l0     1    0:r135 l0     0    2:r137 l0     1
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 135
insn=7, live_throughout: 13, 14, 135, dead_or_set: 1, 137
insn=13, live_throughout: 13, 14, 135, dead_or_set: 134, 137
insn=10, live_throughout: 13, 14, dead_or_set: 134, 135
changing reg in insn 13
changing reg in insn 2
changing reg in insn 10
changing reg in insn 7
changing reg in insn 13
Spilling for insn 10.

Reloads for insn # 10
Reload 0: reload_out (HI) = (mem/s/v:HI (reg/v/f:SI 0 r0 [orig:135 USARTx ] [135]) [5 USARTx_5(D)->SR+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (reg/v/f:SI 0 r0 [orig:135 USARTx ] [135]) [5 USARTx_5(D)->SR+0 S2 A16])
deleting insn with uid = 2.
deleting insn with uid = 13.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ClearFlag

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1]
;;  ref usage 	r0={1d,1u} r1={2d,2u} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 13{7d,6u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 10 2 (set (reg:SI 1 r1 [137])
        (not:SI (reg:SI 1 r1 [ USART_FLAG ]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1356 143 {*arm_one_cmplsi2}
     (nil))

(insn 10 7 14 2 (set (mem/s/v:HI (reg/v/f:SI 0 r0 [orig:135 USARTx ] [135]) [5 USARTx_5(D)->SR+0 S2 A16])
        (reg:HI 1 r1 [orig:134 D.7746 ] [134])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1356 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 10 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function USART_GetITStatus (USART_GetITStatus)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 68.
verify found no changes in insn with uid = 68.
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Reg 161 uninteresting
Reg 137: def dominates all uses has unique first use
Reg 160 uninteresting (no unique first use)
Reg 164 uninteresting
Reg 141 uninteresting (no unique first use)
Reg 165 uninteresting
Reg 142 uninteresting
Reg 166 uninteresting
Reg 144 uninteresting
Reg 167 uninteresting
Reg 146 uninteresting
Reg 170: local to bb 7 def dominates all uses has unique first use
Reg 169 uninteresting
Reg 151: local to bb 7 def dominates all uses has unique first use
Reg 152 uninteresting
Reg 176 uninteresting
Reg 137 not local to one basic block
Examining insn 41, def for 151
  all ok
Found def insn 42 for 170 to be not moveable
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 164: (insn_list:REG_DEP_TRUE 68 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 40 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r176,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a1(r134,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:21990
  a2(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a8(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:29990
  a9(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10360
  a10(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a11(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10360
  a12(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:4020
  a13(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:4020
  a14(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27200
  a15(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5600
  a16(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5600
  a17(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r176: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r176,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a1(r134,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:21990
  a2(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a8(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:29990
  a9(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10360
  a10(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:19990
  a11(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10360
  a12(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:4020
  a13(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:4020
  a14(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:27200
  a15(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5600
  a16(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:5600
  a17(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 60(l0): point = 0
   Insn 57(l0): point = 2
   Insn 49(l0): point = 4
   Insn 48(l0): point = 6
   Insn 43(l0): point = 8
   Insn 41(l0): point = 10
   Insn 40(l0): point = 12
   Insn 39(l0): point = 14
   Insn 42(l0): point = 16
   Insn 35(l0): point = 19
   Insn 34(l0): point = 21
   Insn 33(l0): point = 23
   Insn 65(l0): point = 26
   Insn 28(l0): point = 28
   Insn 27(l0): point = 30
   Insn 26(l0): point = 32
   Insn 24(l0): point = 35
   Insn 23(l0): point = 37
   Insn 63(l0): point = 40
   Insn 18(l0): point = 42
   Insn 17(l0): point = 44
   Insn 16(l0): point = 46
   Insn 14(l0): point = 49
   Insn 13(l0): point = 51
   Insn 12(l0): point = 53
   Insn 68(l0): point = 55
   Insn 2(l0): point = 57
   Insn 9(l0): point = 59
   Insn 10(l0): point = 61
   Insn 3(l0): point = 63
 a0(r176): [3..4]
 a1(r134): [40..42] [26..28] [3..19]
 a2(r152): [7..8]
 a3(r151): [7..10]
 a4(r170): [9..16]
 a5(r150): [11..14]
 a6(r169): [11..12]
 a7(r161): [15..63]
 a8(r160): [17..57]
 a9(r146): [20..21]
 a10(r141): [43..53] [29..39] [20..25]
 a11(r167): [22..23]
 a12(r144): [29..30]
 a13(r166): [31..32]
 a14(r137): [49..59] [38..39]
 a15(r142): [43..44]
 a16(r165): [45..46]
 a17(r140): [54..61]
 a18(r164): [54..55]
Compressing live ranges: from 66 to 34 - 51%
Ranges after the compression:
 a0(r176): [0..1]
 a1(r134): [24..25] [16..17] [0..11]
 a2(r152): [2..3]
 a3(r151): [2..5]
 a4(r170): [4..9]
 a5(r150): [6..7]
 a6(r169): [6..7]
 a7(r161): [8..33]
 a8(r160): [10..33]
 a9(r146): [12..13]
 a10(r141): [26..31] [18..23] [12..15]
 a11(r167): [14..15]
 a12(r144): [18..19]
 a13(r166): [20..21]
 a14(r137): [30..33] [22..23]
 a15(r142): [26..27]
 a16(r165): [28..29]
 a17(r140): [32..33]
 a18(r164): [32..33]
+++Allocating 152 bytes for conflict table (uncompressed size 152)
;; a0(r176,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r134,l0) conflicts: a0(r176,l0) a2(r152,l0) a3(r151,l0) a4(r170,l0) a5(r150,l0) a6(r169,l0) a7(r161,l0) a8(r160,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r152,l0) conflicts: a1(r134,l0) a3(r151,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r151,l0) conflicts: a1(r134,l0) a2(r152,l0) a4(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a4(r170,l0) conflicts: a1(r134,l0) a3(r151,l0) a5(r150,l0) a6(r169,l0) a7(r161,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a5(r150,l0) conflicts: a1(r134,l0) a4(r170,l0) a6(r169,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a6(r169,l0) conflicts: a1(r134,l0) a4(r170,l0) a5(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a7(r161,l0) conflicts: a1(r134,l0) a4(r170,l0) a8(r160,l0) a9(r146,l0) a10(r141,l0) a11(r167,l0) a12(r144,l0) a13(r166,l0) a14(r137,l0) a15(r142,l0) a16(r165,l0) a17(r140,l0) a18(r164,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a8(r160,l0) conflicts: a1(r134,l0) a7(r161,l0) a9(r146,l0) a10(r141,l0) a11(r167,l0) a12(r144,l0) a13(r166,l0) a14(r137,l0) a15(r142,l0) a16(r165,l0) a17(r140,l0) a18(r164,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a9(r146,l0) conflicts: a7(r161,l0) a8(r160,l0) a10(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a10(r141,l0) conflicts: a7(r161,l0) a8(r160,l0) a9(r146,l0) a11(r167,l0) a12(r144,l0) a13(r166,l0) a14(r137,l0) a15(r142,l0) a16(r165,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a11(r167,l0) conflicts: a7(r161,l0) a8(r160,l0) a10(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a12(r144,l0) conflicts: a7(r161,l0) a8(r160,l0) a10(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a13(r166,l0) conflicts: a7(r161,l0) a8(r160,l0) a10(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a14(r137,l0) conflicts: a7(r161,l0) a8(r160,l0) a10(r141,l0) a17(r140,l0) a18(r164,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a15(r142,l0) conflicts: a7(r161,l0) a8(r160,l0) a10(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a16(r165,l0) conflicts: a7(r161,l0) a8(r160,l0) a10(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a17(r140,l0) conflicts: a7(r161,l0) a8(r160,l0) a14(r137,l0) a18(r164,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a18(r164,l0) conflicts: a7(r161,l0) a8(r160,l0) a14(r137,l0) a17(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a5(r150)<->a7(r161)@125:shuffle
  cp1:a3(r151)<->a6(r169)@125:shuffle
  cp2:a3(r151)<->a5(r150)@125:shuffle
  cp3:a2(r152)<->a4(r170)@125:shuffle
  cp4:a9(r146)<->a11(r167)@64:shuffle
  cp5:a1(r134)<->a10(r141)@124:shuffle
  cp6:a1(r134)<->a9(r146)@64:shuffle
  cp7:a12(r144)<->a13(r166)@25:shuffle
  cp8:a1(r134)<->a12(r144)@25:shuffle
  cp9:a15(r142)<->a16(r165)@35:shuffle
  cp10:a1(r134)<->a15(r142)@35:shuffle
  cp11:a10(r141)<->a18(r164)@125:shuffle
  cp12:a10(r141)<->a17(r140)@125:shuffle
  regions=1, blocks=8, points=34
    allocnos=19 (big 0), copies=13, conflicts=1, ranges=24

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r176 1r134 2r152 3r151 4r170 5r150 6r169 7r161 8r160 9r146 10r141 11r167 12r144 13r166 14r137 15r142 16r165 17r140 18r164
    modified regnos: 134 137 140 141 142 144 146 150 151 152 160 161 164 165 166 167 169 170 176
    border:
    Pressure: GENERAL_REGS=6
    Reg 176 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 169 of GENERAL_REGS has 1 regs less
    Reg 161 of GENERAL_REGS has 2 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 167 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 166 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 165 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
      Pushing a13(r166,l0)
      Pushing a12(r144,l0)
      Pushing a16(r165,l0)
      Pushing a15(r142,l0)
      Pushing a11(r167,l0)
      Pushing a9(r146,l0)
      Pushing a10(r141,l0)
      Pushing a1(r134,l0)
      Pushing a18(r164,l0)
      Pushing a6(r169,l0)
      Pushing a5(r150,l0)
      Pushing a4(r170,l0)
      Pushing a3(r151,l0)
      Pushing a2(r152,l0)
      Pushing a0(r176,l0)
      Pushing a8(r160,l0)
      Pushing a17(r140,l0)
      Pushing a14(r137,l0)
      Pushing a7(r161,l0)
      Popping a7(r161,l0)  -- assign reg 1
      Popping a14(r137,l0)  -- assign reg 3
      Popping a17(r140,l0)  -- assign reg 2
      Popping a8(r160,l0)  -- assign reg 0
      Popping a0(r176,l0)  -- assign reg 3
      Popping a2(r152,l0)  -- assign reg 3
      Popping a3(r151,l0)  -- assign reg 1
      Popping a4(r170,l0)  -- assign reg 3
      Popping a5(r150,l0)  -- assign reg 1
      Popping a6(r169,l0)  -- assign reg 4
      Popping a18(r164,l0)  -- assign reg 4
      Popping a1(r134,l0)  -- assign reg 2
      Popping a10(r141,l0)  -- assign reg 4
      Popping a9(r146,l0)  -- assign reg 2
      Popping a11(r167,l0)  -- assign reg 2
      Popping a15(r142,l0)  -- assign reg 2
      Popping a16(r165,l0)  -- assign reg 2
      Popping a12(r144,l0)  -- assign reg 2
      Popping a13(r166,l0)  -- assign reg 2
Disposition:
    1:r134 l0     2   14:r137 l0     3   17:r140 l0     2   10:r141 l0     4
   15:r142 l0     2   12:r144 l0     2    9:r146 l0     2    5:r150 l0     1
    3:r151 l0     1    2:r152 l0     3    8:r160 l0     0    7:r161 l0     1
   18:r164 l0     4   16:r165 l0     2   13:r166 l0     2   11:r167 l0     2
    6:r169 l0     4    4:r170 l0     3    0:r176 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 0, 13, 14, dead_or_set: 1, 161
insn=10, live_throughout: 0, 13, 14, 161, dead_or_set: 140
insn=9, live_throughout: 0, 13, 14, 140, 161, dead_or_set: 137
insn=2, live_throughout: 13, 14, 137, 140, 161, dead_or_set: 0, 160
insn=68, live_throughout: 13, 14, 137, 140, 160, 161, dead_or_set: 164
insn=12, live_throughout: 13, 14, 137, 160, 161, dead_or_set: 140, 141, 164
insn=13, live_throughout: 13, 14, 137, 141, 160, 161, dead_or_set: 
insn=14, live_throughout: 13, 14, 137, 141, 160, 161, dead_or_set: 
insn=16, live_throughout: 13, 14, 141, 160, 161, dead_or_set: 165
insn=17, live_throughout: 13, 14, 141, 160, 161, dead_or_set: 142, 165
insn=18, live_throughout: 13, 14, 160, 161, dead_or_set: 134, 141, 142
insn=63, live_throughout: 13, 14, 134, 160, 161, dead_or_set: 
insn=21, live_throughout: 13, 14, 137, 141, 160, 161, dead_or_set: 
insn=23, live_throughout: 13, 14, 141, 160, 161, dead_or_set: 137
insn=24, live_throughout: 13, 14, 141, 160, 161, dead_or_set: 
insn=26, live_throughout: 13, 14, 141, 160, 161, dead_or_set: 166
insn=27, live_throughout: 13, 14, 141, 160, 161, dead_or_set: 144, 166
insn=28, live_throughout: 13, 14, 160, 161, dead_or_set: 134, 141, 144
insn=65, live_throughout: 13, 14, 134, 160, 161, dead_or_set: 
insn=31, live_throughout: 13, 14, 141, 160, 161, dead_or_set: 
insn=33, live_throughout: 13, 14, 141, 160, 161, dead_or_set: 167
insn=34, live_throughout: 13, 14, 141, 160, 161, dead_or_set: 146, 167
insn=35, live_throughout: 13, 14, 160, 161, dead_or_set: 134, 141, 146
insn=36, live_throughout: 13, 14, 134, 160, 161, dead_or_set: 
insn=42, live_throughout: 13, 14, 134, 161, dead_or_set: 160, 170
insn=39, live_throughout: 13, 14, 134, 170, dead_or_set: 150, 161
insn=40, live_throughout: 13, 14, 134, 150, 170, dead_or_set: 169
insn=41, live_throughout: 13, 14, 134, 170, dead_or_set: 150, 151, 169
insn=43, live_throughout: 13, 14, 134, 151, dead_or_set: 152, 170
insn=48, live_throughout: 13, 14, 134, dead_or_set: 151, 152
insn=49, live_throughout: 13, 14, 134, dead_or_set: 176
insn=57, live_throughout: 13, 14, dead_or_set: 0, 134, 176
insn=60, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 164: (insn_list:REG_DEP_TRUE 68 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 40 (nil))
changing reg in insn 35
changing reg in insn 28
changing reg in insn 18
changing reg in insn 57
changing reg in insn 9
changing reg in insn 23
changing reg in insn 13
changing reg in insn 10
changing reg in insn 12
changing reg in insn 12
changing reg in insn 12
changing reg in insn 35
changing reg in insn 28
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 27
changing reg in insn 28
changing reg in insn 34
changing reg in insn 35
changing reg in insn 39
changing reg in insn 41
changing reg in insn 41
changing reg in insn 41
changing reg in insn 48
changing reg in insn 43
changing reg in insn 48
changing reg in insn 2
changing reg in insn 42
changing reg in insn 33
changing reg in insn 26
changing reg in insn 16
changing reg in insn 3
changing reg in insn 39
changing reg in insn 9
changing reg in insn 10
changing reg in insn 68
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
changing reg in insn 26
changing reg in insn 27
changing reg in insn 33
changing reg in insn 34
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 49
changing reg in insn 57
deleting insn with uid = 3.
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)


USART_GetITStatus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 24[cc]
;;  ref usage 	r0={2d,6u} r1={3d,5u,1e} r2={11d,8u,1e} r3={5d,5u} r4={3d,5u} r13={1d,7u} r14={1d,1u} r24={4d,3u} 
;;    total ref usage 72{30d,40u,2e} in 28{28 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(note 8 7 10 2 NOTE_INSN_DELETED)

(insn 10 8 9 2 (set (reg:SI 2 r2 [orig:140 itmask.0 ] [140])
        (and:SI (reg/v:SI 1 r1 [orig:161 USART_IT ] [161])
            (const_int 31 [0x1f]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1395 69 {*arm_andsi3_insn}
     (nil))

(insn 9 10 68 2 (set (reg/v:SI 3 r3 [orig:137 usartreg ] [137])
        (zero_extract:SI (reg/v:SI 1 r1 [orig:161 USART_IT ] [161])
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1393 131 {extzv_t2}
     (nil))

(insn 68 9 12 2 (set (reg:SI 4 r4 [164])
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1396 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 12 68 13 2 (set (reg/v:SI 4 r4 [orig:141 itmask ] [141])
        (ashift:SI (reg:SI 4 r4 [164])
            (reg:SI 2 r2 [orig:140 itmask.0 ] [140]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1396 119 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg:SI 2 r2 [orig:140 itmask.0 ] [140]))
        (nil)))

(insn 13 12 14 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:137 usartreg ] [137])
            (const_int 1 [0x1]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1398 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1398 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 21)
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 (set (reg:HI 2 r2 [orig:165 USARTx_15(D)->CR1 ] [165])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:160 USARTx ] [160])
                (const_int 12 [0xc])) [5 USARTx_15(D)->CR1+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1400 711 {*thumb2_movhi_insn}
     (nil))

(insn 17 16 18 3 (set (reg:SI 2 r2 [orig:142 D.7720 ] [142])
        (zero_extend:SI (reg:HI 2 r2 [orig:165 USARTx_15(D)->CR1 ] [165]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1400 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 18 17 63 3 (set (reg/v:SI 2 r2 [orig:134 itmask ] [134])
        (and:SI (reg/v:SI 4 r4 [orig:141 itmask ] [141])
            (reg:SI 2 r2 [orig:142 D.7720 ] [142]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1400 69 {*arm_andsi3_insn}
     (nil))

(jump_insn 63 18 64 3 (set (pc)
        (label_ref 36)) 230 {*arm_jump}
     (nil)
 -> 36)
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 64 63 21)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 21 64 22 4 92 "" [1 uses])

(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:137 usartreg ] [137])
            (const_int 2 [0x2]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1402 206 {*arm_cmpsi_insn}
     (nil))

(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1402 218 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 31)
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 (set (reg:HI 2 r2 [orig:166 USARTx_15(D)->CR2 ] [166])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:160 USARTx ] [160])
                (const_int 16 [0x10])) [5 USARTx_15(D)->CR2+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1404 711 {*thumb2_movhi_insn}
     (nil))

(insn 27 26 28 5 (set (reg:SI 2 r2 [orig:144 D.7725 ] [144])
        (zero_extend:SI (reg:HI 2 r2 [orig:166 USARTx_15(D)->CR2 ] [166]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1404 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 28 27 65 5 (set (reg/v:SI 2 r2 [orig:134 itmask ] [134])
        (and:SI (reg/v:SI 4 r4 [orig:141 itmask ] [141])
            (reg:SI 2 r2 [orig:144 D.7725 ] [144]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1404 69 {*arm_andsi3_insn}
     (nil))

(jump_insn 65 28 66 5 (set (pc)
        (label_ref 36)) 230 {*arm_jump}
     (nil)
 -> 36)
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 66 65 31)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 31 66 32 6 94 "" [1 uses])

(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 6 (set (reg:HI 2 r2 [orig:167 USARTx_15(D)->CR3 ] [167])
        (mem/s/v:HI (plus:SI (reg/v/f:SI 0 r0 [orig:160 USARTx ] [160])
                (const_int 20 [0x14])) [5 USARTx_15(D)->CR3+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1408 711 {*thumb2_movhi_insn}
     (nil))

(insn 34 33 35 6 (set (reg:SI 2 r2 [orig:146 D.7728 ] [146])
        (zero_extend:SI (reg:HI 2 r2 [orig:167 USARTx_15(D)->CR3 ] [167]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1408 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 35 34 36 6 (set (reg/v:SI 2 r2 [orig:134 itmask ] [134])
        (and:SI (reg/v:SI 4 r4 [orig:141 itmask ] [141])
            (reg:SI 2 r2 [orig:146 D.7728 ] [146]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1408 69 {*arm_andsi3_insn}
     (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%] 
(code_label 36 35 37 7 93 "" [2 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 38 37 44 7 NOTE_INSN_DELETED)

(note 44 38 45 7 NOTE_INSN_DELETED)

(note 45 44 47 7 NOTE_INSN_DELETED)

(note 47 45 51 7 NOTE_INSN_DELETED)

(note 51 47 52 7 NOTE_INSN_DELETED)

(note 52 51 42 7 NOTE_INSN_DELETED)

(insn 42 52 39 7 (set (reg:HI 3 r3 [orig:170 USARTx_15(D)->SR ] [170])
        (mem/s/v:HI (reg/v/f:SI 0 r0 [orig:160 USARTx ] [160]) [5 USARTx_15(D)->SR+0 S2 A16])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1413 711 {*thumb2_movhi_insn}
     (nil))

(insn 39 42 40 7 (set (reg:SI 1 r1 [orig:150 bitpos.1 ] [150])
        (lshiftrt:SI (reg/v:SI 1 r1 [orig:161 USART_IT ] [161])
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1411 119 {*arm_shiftsi3}
     (nil))

(insn 40 39 41 7 (set (reg:SI 4 r4 [169])
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1412 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 41 40 43 7 (set (reg/v:SI 1 r1 [orig:151 bitpos ] [151])
        (ashift:SI (reg:SI 4 r4 [169])
            (reg:SI 1 r1 [orig:150 bitpos.1 ] [150]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1412 119 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg:SI 1 r1 [orig:150 bitpos.1 ] [150]))
        (nil)))

(insn 43 41 48 7 (set (reg:SI 3 r3 [orig:152 D.7732 ] [152])
        (zero_extend:SI (reg:HI 3 r3 [orig:170 USARTx_15(D)->SR ] [170]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1413 729 {*thumb2_zero_extendhisi2_v6}
     (nil))

(insn 48 43 49 7 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 1 r1 [orig:151 bitpos ] [151])
                        (reg:SI 3 r3 [orig:152 D.7732 ] [152]))
                    (const_int 0 [0])))
            (clobber (scratch:SI))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1414 72 {*andsi3_compare0_scratch}
     (nil))

(insn 49 48 57 7 (set (reg:SI 3 r3 [176])
        (ne:SI (reg:CC_NOOV 24 cc)
            (const_int 0 [0]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1414 713 {*thumb2_mov_scc}
     (nil))

(insn 57 49 60 7 (parallel [
            (set (reg/i:SI 0 r0)
                (and:SI (ne:SI (reg/v:SI 2 r2 [orig:134 itmask ] [134])
                        (const_int 0 [0]))
                    (reg:SI 3 r3 [176])))
            (clobber (reg:CC 24 cc))
        ]) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1424 724 {*thumb2_cond_arith}
     (nil))

(insn 60 57 67 7 (use (reg/i:SI 0 r0)) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1424 -1
     (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 67 60 69 NOTE_INSN_DELETED)

(note 69 67 0 NOTE_INSN_DELETED)


;; Function USART_ClearITPendingBit (USART_ClearITPendingBit)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 144 uninteresting
Reg 143: local to bb 2 def dominates all uses has unique first use
Reg 139: local to bb 2 def dominates all uses has unique first use
Reg 146 uninteresting
Reg 138 uninteresting
Found def insn 2 for 139 to be not moveable
Examining insn 10, def for 143
  all ok
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 144: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding pseudo/allocno costs

    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 15(l0): point = 0
   Insn 18(l0): point = 2
   Insn 12(l0): point = 4
   Insn 2(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
 a0(r139): [1..6]
 a1(r138): [1..2]
 a2(r146): [3..4]
 a3(r143): [5..8]
 a4(r142): [9..12]
 a5(r144): [9..10]
Compressing live ranges: from 15 to 8 - 53%
Ranges after the compression:
 a0(r139): [0..5]
 a1(r138): [0..1]
 a2(r146): [2..3]
 a3(r143): [4..5]
 a4(r142): [6..7]
 a5(r144): [6..7]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r139,l0) conflicts: a1(r138,l0) a2(r146,l0) a3(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a1(r138,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a2(r146,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

;; a3(r143,l0) conflicts: a0(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a4(r142,l0) conflicts: a5(r144,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

;; a5(r144,l0) conflicts: a4(r142,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a3(r143)<->a5(r144)@125:shuffle
  cp1:a3(r143)<->a4(r142)@125:shuffle
  cp2:a2(r146)<->a3(r143)@125:shuffle
  cp3:a1(r138)<->a2(r146)@1000:move
  regions=1, blocks=3, points=8
    allocnos=6 (big 0), copies=4, conflicts=5, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r139 1r138 2r146 3r143 4r142 5r144
    modified regnos: 138 139 142 143 144 146
    border:
    Pressure: GENERAL_REGS=4
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 2 regs less
    Reg 142 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
      Pushing a2(r146,l0)
      Pushing a1(r138,l0)
      Pushing a0(r139,l0)
      Pushing a5(r144,l0)
      Pushing a4(r142,l0)
      Pushing a3(r143,l0)
      Popping a3(r143,l0)  -- assign reg 1
      Popping a4(r142,l0)  -- assign reg 1
      Popping a5(r144,l0)  -- assign reg 3
      Popping a0(r139,l0)  -- assign reg 0
      Popping a1(r138,l0)  -- assign reg 1
      Popping a2(r146,l0)  -- assign reg 1
Disposition:
    1:r138 l0     1    0:r139 l0     0    4:r142 l0     1    3:r143 l0     1
    5:r144 l0     3    2:r146 l0     1
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 0, 13, 14, dead_or_set: 1, 142
insn=9, live_throughout: 0, 13, 14, 142, dead_or_set: 144
insn=10, live_throughout: 0, 13, 14, dead_or_set: 142, 143, 144
insn=2, live_throughout: 13, 14, 143, dead_or_set: 0, 139
insn=12, live_throughout: 13, 14, 139, dead_or_set: 143, 146
insn=18, live_throughout: 13, 14, 139, dead_or_set: 138, 146
insn=15, live_throughout: 13, 14, dead_or_set: 138, 139
init_insns for 144: (insn_list:REG_DEP_TRUE 9 (nil))
changing reg in insn 18
changing reg in insn 2
changing reg in insn 15
changing reg in insn 8
changing reg in insn 10
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 18
Spilling for insn 15.

Reloads for insn # 15
Reload 0: reload_out (HI) = (mem/s/v:HI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139]) [5 USARTx_9(D)->SR+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/v:HI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139]) [5 USARTx_9(D)->SR+0 S2 A16])
deleting insn with uid = 2.
deleting insn with uid = 18.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


USART_ClearITPendingBit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3]
;;  ref usage 	r0={1d,1u} r1={4d,4u,1e} r2={1d} r3={2d,1u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 20{10d,9u,1e} in 5{5 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 8 2 NOTE_INSN_DELETED)

(insn 8 7 9 2 (set (reg:SI 1 r1 [142])
        (lshiftrt:SI (reg:SI 1 r1 [ USART_IT ])
            (const_int 8 [0x8]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1466 119 {*arm_shiftsi3}
     (nil))

(insn 9 8 10 2 (set (reg:SI 3 r3 [144])
        (const_int 1 [0x1])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1466 709 {*thumb2_movsi_insn}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 10 9 12 2 (set (reg:SI 1 r1 [143])
        (ashift:SI (reg:SI 3 r3 [144])
            (reg:SI 1 r1 [142]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1466 119 {*arm_shiftsi3}
     (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg:SI 1 r1 [142]))
        (nil)))

(insn 12 10 15 2 (set (reg:SI 1 r1 [146])
        (not:SI (reg:SI 1 r1 [143]))) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1467 143 {*arm_one_cmplsi2}
     (nil))

(insn 15 12 19 2 (set (mem/s/v:HI (reg/v/f:SI 0 r0 [orig:139 USARTx ] [139]) [5 USARTx_9(D)->SR+0 S2 A16])
        (reg:HI 1 r1 [orig:138 D.7711 ] [138])) ../STM32F429I-Discovery_FW_V1.0.1/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c:1467 711 {*thumb2_movhi_insn}
     (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 19 15 20 NOTE_INSN_DELETED)

(note 20 19 0 NOTE_INSN_DELETED)

